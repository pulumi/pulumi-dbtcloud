// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dbtcloud.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetJobsJobEnvironment {
    /**
     * @return Type of deployment environment: staging, production
     * 
     */
    private String deploymentType;
    /**
     * @return ID of the environment
     * 
     */
    private Integer id;
    /**
     * @return Name of the environment
     * 
     */
    private String name;
    private Integer projectId;
    /**
     * @return Environment type: development or deployment
     * 
     */
    private String type;

    private GetJobsJobEnvironment() {}
    /**
     * @return Type of deployment environment: staging, production
     * 
     */
    public String deploymentType() {
        return this.deploymentType;
    }
    /**
     * @return ID of the environment
     * 
     */
    public Integer id() {
        return this.id;
    }
    /**
     * @return Name of the environment
     * 
     */
    public String name() {
        return this.name;
    }
    public Integer projectId() {
        return this.projectId;
    }
    /**
     * @return Environment type: development or deployment
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetJobsJobEnvironment defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String deploymentType;
        private Integer id;
        private String name;
        private Integer projectId;
        private String type;
        public Builder() {}
        public Builder(GetJobsJobEnvironment defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.deploymentType = defaults.deploymentType;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.projectId = defaults.projectId;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder deploymentType(String deploymentType) {
            if (deploymentType == null) {
              throw new MissingRequiredPropertyException("GetJobsJobEnvironment", "deploymentType");
            }
            this.deploymentType = deploymentType;
            return this;
        }
        @CustomType.Setter
        public Builder id(Integer id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetJobsJobEnvironment", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetJobsJobEnvironment", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder projectId(Integer projectId) {
            if (projectId == null) {
              throw new MissingRequiredPropertyException("GetJobsJobEnvironment", "projectId");
            }
            this.projectId = projectId;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetJobsJobEnvironment", "type");
            }
            this.type = type;
            return this;
        }
        public GetJobsJobEnvironment build() {
            final var _resultValue = new GetJobsJobEnvironment();
            _resultValue.deploymentType = deploymentType;
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.projectId = projectId;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
