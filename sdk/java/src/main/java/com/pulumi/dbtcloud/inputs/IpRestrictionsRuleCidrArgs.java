// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dbtcloud.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class IpRestrictionsRuleCidrArgs extends com.pulumi.resources.ResourceArgs {

    public static final IpRestrictionsRuleCidrArgs Empty = new IpRestrictionsRuleCidrArgs();

    /**
     * IP CIDR range (can be IPv4 or IPv6)
     * 
     */
    @Import(name="cidr")
    private @Nullable Output<String> cidr;

    /**
     * @return IP CIDR range (can be IPv4 or IPv6)
     * 
     */
    public Optional<Output<String>> cidr() {
        return Optional.ofNullable(this.cidr);
    }

    /**
     * IPv6 CIDR range (read-only)
     * 
     */
    @Import(name="cidrIpv6")
    private @Nullable Output<String> cidrIpv6;

    /**
     * @return IPv6 CIDR range (read-only)
     * 
     */
    public Optional<Output<String>> cidrIpv6() {
        return Optional.ofNullable(this.cidrIpv6);
    }

    /**
     * ID of the CIDR range
     * 
     */
    @Import(name="id")
    private @Nullable Output<Integer> id;

    /**
     * @return ID of the CIDR range
     * 
     */
    public Optional<Output<Integer>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * ID of the IP restriction rule
     * 
     */
    @Import(name="ipRestrictionRuleId")
    private @Nullable Output<Integer> ipRestrictionRuleId;

    /**
     * @return ID of the IP restriction rule
     * 
     */
    public Optional<Output<Integer>> ipRestrictionRuleId() {
        return Optional.ofNullable(this.ipRestrictionRuleId);
    }

    private IpRestrictionsRuleCidrArgs() {}

    private IpRestrictionsRuleCidrArgs(IpRestrictionsRuleCidrArgs $) {
        this.cidr = $.cidr;
        this.cidrIpv6 = $.cidrIpv6;
        this.id = $.id;
        this.ipRestrictionRuleId = $.ipRestrictionRuleId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IpRestrictionsRuleCidrArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IpRestrictionsRuleCidrArgs $;

        public Builder() {
            $ = new IpRestrictionsRuleCidrArgs();
        }

        public Builder(IpRestrictionsRuleCidrArgs defaults) {
            $ = new IpRestrictionsRuleCidrArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cidr IP CIDR range (can be IPv4 or IPv6)
         * 
         * @return builder
         * 
         */
        public Builder cidr(@Nullable Output<String> cidr) {
            $.cidr = cidr;
            return this;
        }

        /**
         * @param cidr IP CIDR range (can be IPv4 or IPv6)
         * 
         * @return builder
         * 
         */
        public Builder cidr(String cidr) {
            return cidr(Output.of(cidr));
        }

        /**
         * @param cidrIpv6 IPv6 CIDR range (read-only)
         * 
         * @return builder
         * 
         */
        public Builder cidrIpv6(@Nullable Output<String> cidrIpv6) {
            $.cidrIpv6 = cidrIpv6;
            return this;
        }

        /**
         * @param cidrIpv6 IPv6 CIDR range (read-only)
         * 
         * @return builder
         * 
         */
        public Builder cidrIpv6(String cidrIpv6) {
            return cidrIpv6(Output.of(cidrIpv6));
        }

        /**
         * @param id ID of the CIDR range
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable Output<Integer> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id ID of the CIDR range
         * 
         * @return builder
         * 
         */
        public Builder id(Integer id) {
            return id(Output.of(id));
        }

        /**
         * @param ipRestrictionRuleId ID of the IP restriction rule
         * 
         * @return builder
         * 
         */
        public Builder ipRestrictionRuleId(@Nullable Output<Integer> ipRestrictionRuleId) {
            $.ipRestrictionRuleId = ipRestrictionRuleId;
            return this;
        }

        /**
         * @param ipRestrictionRuleId ID of the IP restriction rule
         * 
         * @return builder
         * 
         */
        public Builder ipRestrictionRuleId(Integer ipRestrictionRuleId) {
            return ipRestrictionRuleId(Output.of(ipRestrictionRuleId));
        }

        public IpRestrictionsRuleCidrArgs build() {
            return $;
        }
    }

}
