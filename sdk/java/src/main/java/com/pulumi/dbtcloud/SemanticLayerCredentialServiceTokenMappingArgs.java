// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dbtcloud;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.util.Objects;


public final class SemanticLayerCredentialServiceTokenMappingArgs extends com.pulumi.resources.ResourceArgs {

    public static final SemanticLayerCredentialServiceTokenMappingArgs Empty = new SemanticLayerCredentialServiceTokenMappingArgs();

    /**
     * The ID of the project to which the semantic layer credential is associated.
     * 
     */
    @Import(name="projectId", required=true)
    private Output<Integer> projectId;

    /**
     * @return The ID of the project to which the semantic layer credential is associated.
     * 
     */
    public Output<Integer> projectId() {
        return this.projectId;
    }

    /**
     * The ID of the semantic layer credential to map.
     * 
     */
    @Import(name="semanticLayerCredentialId", required=true)
    private Output<Integer> semanticLayerCredentialId;

    /**
     * @return The ID of the semantic layer credential to map.
     * 
     */
    public Output<Integer> semanticLayerCredentialId() {
        return this.semanticLayerCredentialId;
    }

    /**
     * The ID of the service token to map to the semantic layer credential.
     * 
     */
    @Import(name="serviceTokenId", required=true)
    private Output<Integer> serviceTokenId;

    /**
     * @return The ID of the service token to map to the semantic layer credential.
     * 
     */
    public Output<Integer> serviceTokenId() {
        return this.serviceTokenId;
    }

    private SemanticLayerCredentialServiceTokenMappingArgs() {}

    private SemanticLayerCredentialServiceTokenMappingArgs(SemanticLayerCredentialServiceTokenMappingArgs $) {
        this.projectId = $.projectId;
        this.semanticLayerCredentialId = $.semanticLayerCredentialId;
        this.serviceTokenId = $.serviceTokenId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SemanticLayerCredentialServiceTokenMappingArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SemanticLayerCredentialServiceTokenMappingArgs $;

        public Builder() {
            $ = new SemanticLayerCredentialServiceTokenMappingArgs();
        }

        public Builder(SemanticLayerCredentialServiceTokenMappingArgs defaults) {
            $ = new SemanticLayerCredentialServiceTokenMappingArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param projectId The ID of the project to which the semantic layer credential is associated.
         * 
         * @return builder
         * 
         */
        public Builder projectId(Output<Integer> projectId) {
            $.projectId = projectId;
            return this;
        }

        /**
         * @param projectId The ID of the project to which the semantic layer credential is associated.
         * 
         * @return builder
         * 
         */
        public Builder projectId(Integer projectId) {
            return projectId(Output.of(projectId));
        }

        /**
         * @param semanticLayerCredentialId The ID of the semantic layer credential to map.
         * 
         * @return builder
         * 
         */
        public Builder semanticLayerCredentialId(Output<Integer> semanticLayerCredentialId) {
            $.semanticLayerCredentialId = semanticLayerCredentialId;
            return this;
        }

        /**
         * @param semanticLayerCredentialId The ID of the semantic layer credential to map.
         * 
         * @return builder
         * 
         */
        public Builder semanticLayerCredentialId(Integer semanticLayerCredentialId) {
            return semanticLayerCredentialId(Output.of(semanticLayerCredentialId));
        }

        /**
         * @param serviceTokenId The ID of the service token to map to the semantic layer credential.
         * 
         * @return builder
         * 
         */
        public Builder serviceTokenId(Output<Integer> serviceTokenId) {
            $.serviceTokenId = serviceTokenId;
            return this;
        }

        /**
         * @param serviceTokenId The ID of the service token to map to the semantic layer credential.
         * 
         * @return builder
         * 
         */
        public Builder serviceTokenId(Integer serviceTokenId) {
            return serviceTokenId(Output.of(serviceTokenId));
        }

        public SemanticLayerCredentialServiceTokenMappingArgs build() {
            if ($.projectId == null) {
                throw new MissingRequiredPropertyException("SemanticLayerCredentialServiceTokenMappingArgs", "projectId");
            }
            if ($.semanticLayerCredentialId == null) {
                throw new MissingRequiredPropertyException("SemanticLayerCredentialServiceTokenMappingArgs", "semanticLayerCredentialId");
            }
            if ($.serviceTokenId == null) {
                throw new MissingRequiredPropertyException("SemanticLayerCredentialServiceTokenMappingArgs", "serviceTokenId");
            }
            return $;
        }
    }

}
