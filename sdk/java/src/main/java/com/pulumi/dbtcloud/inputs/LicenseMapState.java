// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dbtcloud.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class LicenseMapState extends com.pulumi.resources.ResourceArgs {

    public static final LicenseMapState Empty = new LicenseMapState();

    /**
     * License type
     * 
     */
    @Import(name="licenseType")
    private @Nullable Output<String> licenseType;

    /**
     * @return License type
     * 
     */
    public Optional<Output<String>> licenseType() {
        return Optional.ofNullable(this.licenseType);
    }

    /**
     * SSO license mapping group names for this group
     * 
     */
    @Import(name="ssoLicenseMappingGroups")
    private @Nullable Output<List<String>> ssoLicenseMappingGroups;

    /**
     * @return SSO license mapping group names for this group
     * 
     */
    public Optional<Output<List<String>>> ssoLicenseMappingGroups() {
        return Optional.ofNullable(this.ssoLicenseMappingGroups);
    }

    private LicenseMapState() {}

    private LicenseMapState(LicenseMapState $) {
        this.licenseType = $.licenseType;
        this.ssoLicenseMappingGroups = $.ssoLicenseMappingGroups;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(LicenseMapState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private LicenseMapState $;

        public Builder() {
            $ = new LicenseMapState();
        }

        public Builder(LicenseMapState defaults) {
            $ = new LicenseMapState(Objects.requireNonNull(defaults));
        }

        /**
         * @param licenseType License type
         * 
         * @return builder
         * 
         */
        public Builder licenseType(@Nullable Output<String> licenseType) {
            $.licenseType = licenseType;
            return this;
        }

        /**
         * @param licenseType License type
         * 
         * @return builder
         * 
         */
        public Builder licenseType(String licenseType) {
            return licenseType(Output.of(licenseType));
        }

        /**
         * @param ssoLicenseMappingGroups SSO license mapping group names for this group
         * 
         * @return builder
         * 
         */
        public Builder ssoLicenseMappingGroups(@Nullable Output<List<String>> ssoLicenseMappingGroups) {
            $.ssoLicenseMappingGroups = ssoLicenseMappingGroups;
            return this;
        }

        /**
         * @param ssoLicenseMappingGroups SSO license mapping group names for this group
         * 
         * @return builder
         * 
         */
        public Builder ssoLicenseMappingGroups(List<String> ssoLicenseMappingGroups) {
            return ssoLicenseMappingGroups(Output.of(ssoLicenseMappingGroups));
        }

        /**
         * @param ssoLicenseMappingGroups SSO license mapping group names for this group
         * 
         * @return builder
         * 
         */
        public Builder ssoLicenseMappingGroups(String... ssoLicenseMappingGroups) {
            return ssoLicenseMappingGroups(List.of(ssoLicenseMappingGroups));
        }

        public LicenseMapState build() {
            return $;
        }
    }

}
