// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dbtcloud.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetWebhookResult {
    /**
     * @return Webhooks Account Identifier
     * 
     */
    private String accountIdentifier;
    /**
     * @return Webhooks active flag
     * 
     */
    private Boolean active;
    /**
     * @return Webhooks Client URL
     * 
     */
    private String clientUrl;
    /**
     * @return Webhooks Description
     * 
     */
    private String description;
    /**
     * @return Webhooks Event Types
     * 
     */
    private List<String> eventTypes;
    /**
     * @return Webhooks HTTP Status Code
     * 
     */
    private String httpStatusCode;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return List of job IDs to trigger the webhook
     * 
     */
    private List<Integer> jobIds;
    /**
     * @return Webhooks Name
     * 
     */
    private String name;
    /**
     * @return Webhooks ID
     * 
     */
    private String webhookId;

    private GetWebhookResult() {}
    /**
     * @return Webhooks Account Identifier
     * 
     */
    public String accountIdentifier() {
        return this.accountIdentifier;
    }
    /**
     * @return Webhooks active flag
     * 
     */
    public Boolean active() {
        return this.active;
    }
    /**
     * @return Webhooks Client URL
     * 
     */
    public String clientUrl() {
        return this.clientUrl;
    }
    /**
     * @return Webhooks Description
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Webhooks Event Types
     * 
     */
    public List<String> eventTypes() {
        return this.eventTypes;
    }
    /**
     * @return Webhooks HTTP Status Code
     * 
     */
    public String httpStatusCode() {
        return this.httpStatusCode;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return List of job IDs to trigger the webhook
     * 
     */
    public List<Integer> jobIds() {
        return this.jobIds;
    }
    /**
     * @return Webhooks Name
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Webhooks ID
     * 
     */
    public String webhookId() {
        return this.webhookId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetWebhookResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accountIdentifier;
        private Boolean active;
        private String clientUrl;
        private String description;
        private List<String> eventTypes;
        private String httpStatusCode;
        private String id;
        private List<Integer> jobIds;
        private String name;
        private String webhookId;
        public Builder() {}
        public Builder(GetWebhookResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountIdentifier = defaults.accountIdentifier;
    	      this.active = defaults.active;
    	      this.clientUrl = defaults.clientUrl;
    	      this.description = defaults.description;
    	      this.eventTypes = defaults.eventTypes;
    	      this.httpStatusCode = defaults.httpStatusCode;
    	      this.id = defaults.id;
    	      this.jobIds = defaults.jobIds;
    	      this.name = defaults.name;
    	      this.webhookId = defaults.webhookId;
        }

        @CustomType.Setter
        public Builder accountIdentifier(String accountIdentifier) {
            if (accountIdentifier == null) {
              throw new MissingRequiredPropertyException("GetWebhookResult", "accountIdentifier");
            }
            this.accountIdentifier = accountIdentifier;
            return this;
        }
        @CustomType.Setter
        public Builder active(Boolean active) {
            if (active == null) {
              throw new MissingRequiredPropertyException("GetWebhookResult", "active");
            }
            this.active = active;
            return this;
        }
        @CustomType.Setter
        public Builder clientUrl(String clientUrl) {
            if (clientUrl == null) {
              throw new MissingRequiredPropertyException("GetWebhookResult", "clientUrl");
            }
            this.clientUrl = clientUrl;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetWebhookResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder eventTypes(List<String> eventTypes) {
            if (eventTypes == null) {
              throw new MissingRequiredPropertyException("GetWebhookResult", "eventTypes");
            }
            this.eventTypes = eventTypes;
            return this;
        }
        public Builder eventTypes(String... eventTypes) {
            return eventTypes(List.of(eventTypes));
        }
        @CustomType.Setter
        public Builder httpStatusCode(String httpStatusCode) {
            if (httpStatusCode == null) {
              throw new MissingRequiredPropertyException("GetWebhookResult", "httpStatusCode");
            }
            this.httpStatusCode = httpStatusCode;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetWebhookResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder jobIds(List<Integer> jobIds) {
            if (jobIds == null) {
              throw new MissingRequiredPropertyException("GetWebhookResult", "jobIds");
            }
            this.jobIds = jobIds;
            return this;
        }
        public Builder jobIds(Integer... jobIds) {
            return jobIds(List.of(jobIds));
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetWebhookResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder webhookId(String webhookId) {
            if (webhookId == null) {
              throw new MissingRequiredPropertyException("GetWebhookResult", "webhookId");
            }
            this.webhookId = webhookId;
            return this;
        }
        public GetWebhookResult build() {
            final var _resultValue = new GetWebhookResult();
            _resultValue.accountIdentifier = accountIdentifier;
            _resultValue.active = active;
            _resultValue.clientUrl = clientUrl;
            _resultValue.description = description;
            _resultValue.eventTypes = eventTypes;
            _resultValue.httpStatusCode = httpStatusCode;
            _resultValue.id = id;
            _resultValue.jobIds = jobIds;
            _resultValue.name = name;
            _resultValue.webhookId = webhookId;
            return _resultValue;
        }
    }
}
