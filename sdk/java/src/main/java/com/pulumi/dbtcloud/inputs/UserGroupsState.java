// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dbtcloud.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class UserGroupsState extends com.pulumi.resources.ResourceArgs {

    public static final UserGroupsState Empty = new UserGroupsState();

    /**
     * IDs of the groups to assign to the user. If additional groups were assigned manually in dbt Cloud, they will be removed.
     * 
     */
    @Import(name="groupIds")
    private @Nullable Output<List<Integer>> groupIds;

    /**
     * @return IDs of the groups to assign to the user. If additional groups were assigned manually in dbt Cloud, they will be removed.
     * 
     */
    public Optional<Output<List<Integer>>> groupIds() {
        return Optional.ofNullable(this.groupIds);
    }

    /**
     * The internal ID of a dbt Cloud user.
     * 
     */
    @Import(name="userId")
    private @Nullable Output<Integer> userId;

    /**
     * @return The internal ID of a dbt Cloud user.
     * 
     */
    public Optional<Output<Integer>> userId() {
        return Optional.ofNullable(this.userId);
    }

    private UserGroupsState() {}

    private UserGroupsState(UserGroupsState $) {
        this.groupIds = $.groupIds;
        this.userId = $.userId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(UserGroupsState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private UserGroupsState $;

        public Builder() {
            $ = new UserGroupsState();
        }

        public Builder(UserGroupsState defaults) {
            $ = new UserGroupsState(Objects.requireNonNull(defaults));
        }

        /**
         * @param groupIds IDs of the groups to assign to the user. If additional groups were assigned manually in dbt Cloud, they will be removed.
         * 
         * @return builder
         * 
         */
        public Builder groupIds(@Nullable Output<List<Integer>> groupIds) {
            $.groupIds = groupIds;
            return this;
        }

        /**
         * @param groupIds IDs of the groups to assign to the user. If additional groups were assigned manually in dbt Cloud, they will be removed.
         * 
         * @return builder
         * 
         */
        public Builder groupIds(List<Integer> groupIds) {
            return groupIds(Output.of(groupIds));
        }

        /**
         * @param groupIds IDs of the groups to assign to the user. If additional groups were assigned manually in dbt Cloud, they will be removed.
         * 
         * @return builder
         * 
         */
        public Builder groupIds(Integer... groupIds) {
            return groupIds(List.of(groupIds));
        }

        /**
         * @param userId The internal ID of a dbt Cloud user.
         * 
         * @return builder
         * 
         */
        public Builder userId(@Nullable Output<Integer> userId) {
            $.userId = userId;
            return this;
        }

        /**
         * @param userId The internal ID of a dbt Cloud user.
         * 
         * @return builder
         * 
         */
        public Builder userId(Integer userId) {
            return userId(Output.of(userId));
        }

        public UserGroupsState build() {
            return $;
        }
    }

}
