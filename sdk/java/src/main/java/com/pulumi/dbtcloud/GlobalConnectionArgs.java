// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dbtcloud;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.dbtcloud.inputs.GlobalConnectionBigqueryArgs;
import com.pulumi.dbtcloud.inputs.GlobalConnectionDatabricksArgs;
import com.pulumi.dbtcloud.inputs.GlobalConnectionSnowflakeArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GlobalConnectionArgs extends com.pulumi.resources.ResourceArgs {

    public static final GlobalConnectionArgs Empty = new GlobalConnectionArgs();

    @Import(name="bigquery")
    private @Nullable Output<GlobalConnectionBigqueryArgs> bigquery;

    public Optional<Output<GlobalConnectionBigqueryArgs>> bigquery() {
        return Optional.ofNullable(this.bigquery);
    }

    /**
     * Databricks connection configuration
     * 
     */
    @Import(name="databricks")
    private @Nullable Output<GlobalConnectionDatabricksArgs> databricks;

    /**
     * @return Databricks connection configuration
     * 
     */
    public Optional<Output<GlobalConnectionDatabricksArgs>> databricks() {
        return Optional.ofNullable(this.databricks);
    }

    /**
     * Connection name
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Connection name
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Private Link Endpoint ID. This ID can be found using the `privatelink_endpoint` data source
     * 
     */
    @Import(name="privateLinkEndpointId")
    private @Nullable Output<String> privateLinkEndpointId;

    /**
     * @return Private Link Endpoint ID. This ID can be found using the `privatelink_endpoint` data source
     * 
     */
    public Optional<Output<String>> privateLinkEndpointId() {
        return Optional.ofNullable(this.privateLinkEndpointId);
    }

    /**
     * Snowflake connection configuration
     * 
     */
    @Import(name="snowflake")
    private @Nullable Output<GlobalConnectionSnowflakeArgs> snowflake;

    /**
     * @return Snowflake connection configuration
     * 
     */
    public Optional<Output<GlobalConnectionSnowflakeArgs>> snowflake() {
        return Optional.ofNullable(this.snowflake);
    }

    private GlobalConnectionArgs() {}

    private GlobalConnectionArgs(GlobalConnectionArgs $) {
        this.bigquery = $.bigquery;
        this.databricks = $.databricks;
        this.name = $.name;
        this.privateLinkEndpointId = $.privateLinkEndpointId;
        this.snowflake = $.snowflake;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GlobalConnectionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GlobalConnectionArgs $;

        public Builder() {
            $ = new GlobalConnectionArgs();
        }

        public Builder(GlobalConnectionArgs defaults) {
            $ = new GlobalConnectionArgs(Objects.requireNonNull(defaults));
        }

        public Builder bigquery(@Nullable Output<GlobalConnectionBigqueryArgs> bigquery) {
            $.bigquery = bigquery;
            return this;
        }

        public Builder bigquery(GlobalConnectionBigqueryArgs bigquery) {
            return bigquery(Output.of(bigquery));
        }

        /**
         * @param databricks Databricks connection configuration
         * 
         * @return builder
         * 
         */
        public Builder databricks(@Nullable Output<GlobalConnectionDatabricksArgs> databricks) {
            $.databricks = databricks;
            return this;
        }

        /**
         * @param databricks Databricks connection configuration
         * 
         * @return builder
         * 
         */
        public Builder databricks(GlobalConnectionDatabricksArgs databricks) {
            return databricks(Output.of(databricks));
        }

        /**
         * @param name Connection name
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Connection name
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param privateLinkEndpointId Private Link Endpoint ID. This ID can be found using the `privatelink_endpoint` data source
         * 
         * @return builder
         * 
         */
        public Builder privateLinkEndpointId(@Nullable Output<String> privateLinkEndpointId) {
            $.privateLinkEndpointId = privateLinkEndpointId;
            return this;
        }

        /**
         * @param privateLinkEndpointId Private Link Endpoint ID. This ID can be found using the `privatelink_endpoint` data source
         * 
         * @return builder
         * 
         */
        public Builder privateLinkEndpointId(String privateLinkEndpointId) {
            return privateLinkEndpointId(Output.of(privateLinkEndpointId));
        }

        /**
         * @param snowflake Snowflake connection configuration
         * 
         * @return builder
         * 
         */
        public Builder snowflake(@Nullable Output<GlobalConnectionSnowflakeArgs> snowflake) {
            $.snowflake = snowflake;
            return this;
        }

        /**
         * @param snowflake Snowflake connection configuration
         * 
         * @return builder
         * 
         */
        public Builder snowflake(GlobalConnectionSnowflakeArgs snowflake) {
            return snowflake(Output.of(snowflake));
        }

        public GlobalConnectionArgs build() {
            return $;
        }
    }

}
