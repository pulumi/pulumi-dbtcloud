// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dbtcloud;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class PartialLicenseMapArgs extends com.pulumi.resources.ResourceArgs {

    public static final PartialLicenseMapArgs Empty = new PartialLicenseMapArgs();

    /**
     * The license type to update
     * 
     */
    @Import(name="licenseType", required=true)
    private Output<String> licenseType;

    /**
     * @return The license type to update
     * 
     */
    public Output<String> licenseType() {
        return this.licenseType;
    }

    /**
     * List of SSO groups to map to the license type.
     * 
     */
    @Import(name="ssoLicenseMappingGroups", required=true)
    private Output<List<String>> ssoLicenseMappingGroups;

    /**
     * @return List of SSO groups to map to the license type.
     * 
     */
    public Output<List<String>> ssoLicenseMappingGroups() {
        return this.ssoLicenseMappingGroups;
    }

    private PartialLicenseMapArgs() {}

    private PartialLicenseMapArgs(PartialLicenseMapArgs $) {
        this.licenseType = $.licenseType;
        this.ssoLicenseMappingGroups = $.ssoLicenseMappingGroups;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PartialLicenseMapArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PartialLicenseMapArgs $;

        public Builder() {
            $ = new PartialLicenseMapArgs();
        }

        public Builder(PartialLicenseMapArgs defaults) {
            $ = new PartialLicenseMapArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param licenseType The license type to update
         * 
         * @return builder
         * 
         */
        public Builder licenseType(Output<String> licenseType) {
            $.licenseType = licenseType;
            return this;
        }

        /**
         * @param licenseType The license type to update
         * 
         * @return builder
         * 
         */
        public Builder licenseType(String licenseType) {
            return licenseType(Output.of(licenseType));
        }

        /**
         * @param ssoLicenseMappingGroups List of SSO groups to map to the license type.
         * 
         * @return builder
         * 
         */
        public Builder ssoLicenseMappingGroups(Output<List<String>> ssoLicenseMappingGroups) {
            $.ssoLicenseMappingGroups = ssoLicenseMappingGroups;
            return this;
        }

        /**
         * @param ssoLicenseMappingGroups List of SSO groups to map to the license type.
         * 
         * @return builder
         * 
         */
        public Builder ssoLicenseMappingGroups(List<String> ssoLicenseMappingGroups) {
            return ssoLicenseMappingGroups(Output.of(ssoLicenseMappingGroups));
        }

        /**
         * @param ssoLicenseMappingGroups List of SSO groups to map to the license type.
         * 
         * @return builder
         * 
         */
        public Builder ssoLicenseMappingGroups(String... ssoLicenseMappingGroups) {
            return ssoLicenseMappingGroups(List.of(ssoLicenseMappingGroups));
        }

        public PartialLicenseMapArgs build() {
            if ($.licenseType == null) {
                throw new MissingRequiredPropertyException("PartialLicenseMapArgs", "licenseType");
            }
            if ($.ssoLicenseMappingGroups == null) {
                throw new MissingRequiredPropertyException("PartialLicenseMapArgs", "ssoLicenseMappingGroups");
            }
            return $;
        }
    }

}
