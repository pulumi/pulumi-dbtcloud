// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dbtcloud;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.dbtcloud.inputs.RedshiftSemanticLayerCredentialConfigurationArgs;
import com.pulumi.dbtcloud.inputs.RedshiftSemanticLayerCredentialCredentialArgs;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.util.Objects;


public final class RedshiftSemanticLayerCredentialArgs extends com.pulumi.resources.ResourceArgs {

    public static final RedshiftSemanticLayerCredentialArgs Empty = new RedshiftSemanticLayerCredentialArgs();

    /**
     * Semantic Layer credential configuration details.
     * 
     */
    @Import(name="configuration", required=true)
    private Output<RedshiftSemanticLayerCredentialConfigurationArgs> configuration;

    /**
     * @return Semantic Layer credential configuration details.
     * 
     */
    public Output<RedshiftSemanticLayerCredentialConfigurationArgs> configuration() {
        return this.configuration;
    }

    /**
     * Redshift credential details, but used in the context of the Semantic Layer.
     * 
     */
    @Import(name="credential", required=true)
    private Output<RedshiftSemanticLayerCredentialCredentialArgs> credential;

    /**
     * @return Redshift credential details, but used in the context of the Semantic Layer.
     * 
     */
    public Output<RedshiftSemanticLayerCredentialCredentialArgs> credential() {
        return this.credential;
    }

    private RedshiftSemanticLayerCredentialArgs() {}

    private RedshiftSemanticLayerCredentialArgs(RedshiftSemanticLayerCredentialArgs $) {
        this.configuration = $.configuration;
        this.credential = $.credential;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RedshiftSemanticLayerCredentialArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RedshiftSemanticLayerCredentialArgs $;

        public Builder() {
            $ = new RedshiftSemanticLayerCredentialArgs();
        }

        public Builder(RedshiftSemanticLayerCredentialArgs defaults) {
            $ = new RedshiftSemanticLayerCredentialArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param configuration Semantic Layer credential configuration details.
         * 
         * @return builder
         * 
         */
        public Builder configuration(Output<RedshiftSemanticLayerCredentialConfigurationArgs> configuration) {
            $.configuration = configuration;
            return this;
        }

        /**
         * @param configuration Semantic Layer credential configuration details.
         * 
         * @return builder
         * 
         */
        public Builder configuration(RedshiftSemanticLayerCredentialConfigurationArgs configuration) {
            return configuration(Output.of(configuration));
        }

        /**
         * @param credential Redshift credential details, but used in the context of the Semantic Layer.
         * 
         * @return builder
         * 
         */
        public Builder credential(Output<RedshiftSemanticLayerCredentialCredentialArgs> credential) {
            $.credential = credential;
            return this;
        }

        /**
         * @param credential Redshift credential details, but used in the context of the Semantic Layer.
         * 
         * @return builder
         * 
         */
        public Builder credential(RedshiftSemanticLayerCredentialCredentialArgs credential) {
            return credential(Output.of(credential));
        }

        public RedshiftSemanticLayerCredentialArgs build() {
            if ($.configuration == null) {
                throw new MissingRequiredPropertyException("RedshiftSemanticLayerCredentialArgs", "configuration");
            }
            if ($.credential == null) {
                throw new MissingRequiredPropertyException("RedshiftSemanticLayerCredentialArgs", "credential");
            }
            return $;
        }
    }

}
