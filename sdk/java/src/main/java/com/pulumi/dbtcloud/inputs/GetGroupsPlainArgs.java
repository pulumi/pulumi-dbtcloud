// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dbtcloud.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetGroupsPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetGroupsPlainArgs Empty = new GetGroupsPlainArgs();

    /**
     * Filter groups by exact name match
     * 
     */
    @Import(name="name")
    private @Nullable String name;

    /**
     * @return Filter groups by exact name match
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Filter groups by partial name match (case insensitive)
     * 
     */
    @Import(name="nameContains")
    private @Nullable String nameContains;

    /**
     * @return Filter groups by partial name match (case insensitive)
     * 
     */
    public Optional<String> nameContains() {
        return Optional.ofNullable(this.nameContains);
    }

    /**
     * Filter groups by state. Accepts both string and integer formats: &#39;active&#39;/&#39;1&#39; for active resources, &#39;deleted&#39;/&#39;2&#39; for deleted resources, &#39;all&#39; for all resources. Defaults to active groups only if not specified.
     * 
     */
    @Import(name="state")
    private @Nullable String state;

    /**
     * @return Filter groups by state. Accepts both string and integer formats: &#39;active&#39;/&#39;1&#39; for active resources, &#39;deleted&#39;/&#39;2&#39; for deleted resources, &#39;all&#39; for all resources. Defaults to active groups only if not specified.
     * 
     */
    public Optional<String> state() {
        return Optional.ofNullable(this.state);
    }

    private GetGroupsPlainArgs() {}

    private GetGroupsPlainArgs(GetGroupsPlainArgs $) {
        this.name = $.name;
        this.nameContains = $.nameContains;
        this.state = $.state;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetGroupsPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetGroupsPlainArgs $;

        public Builder() {
            $ = new GetGroupsPlainArgs();
        }

        public Builder(GetGroupsPlainArgs defaults) {
            $ = new GetGroupsPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param name Filter groups by exact name match
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        /**
         * @param nameContains Filter groups by partial name match (case insensitive)
         * 
         * @return builder
         * 
         */
        public Builder nameContains(@Nullable String nameContains) {
            $.nameContains = nameContains;
            return this;
        }

        /**
         * @param state Filter groups by state. Accepts both string and integer formats: &#39;active&#39;/&#39;1&#39; for active resources, &#39;deleted&#39;/&#39;2&#39; for deleted resources, &#39;all&#39; for all resources. Defaults to active groups only if not specified.
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable String state) {
            $.state = state;
            return this;
        }

        public GetGroupsPlainArgs build() {
            return $;
        }
    }

}
