// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dbtcloud;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.dbtcloud.DatabricksCredentialArgs;
import com.pulumi.dbtcloud.Utilities;
import com.pulumi.dbtcloud.inputs.DatabricksCredentialState;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * 
 * ## Import
 * 
 * using  import blocks (requires Terraform &gt;= 1.5)
 * 
 * import {
 * 
 *   to = dbtcloud_databricks_credential.my_databricks_credential
 * 
 *   id = &#34;project_id:credential_id&#34;
 * 
 * }
 * 
 * import {
 * 
 *   to = dbtcloud_databricks_credential.my_databricks_credential
 * 
 *   id = &#34;12345:6789&#34;
 * 
 * }
 * 
 * using the older import command
 * 
 * ```sh
 * $ pulumi import dbtcloud:index/databricksCredential:DatabricksCredential my_databricks_credential &#34;project_id:credential_id&#34;
 * ```
 * 
 * ```sh
 * $ pulumi import dbtcloud:index/databricksCredential:DatabricksCredential my_databricks_credential 12345:6789
 * ```
 * 
 */
@ResourceType(type="dbtcloud:index/databricksCredential:DatabricksCredential")
public class DatabricksCredential extends com.pulumi.resources.CustomResource {
    /**
     * Databricks adapter ID for the credential (do not fill in when using global connections, only to be used for connections created with the legacy connection resource `dbtcloud.Connection`)
     * 
     */
    @Export(name="adapterId", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> adapterId;

    /**
     * @return Databricks adapter ID for the credential (do not fill in when using global connections, only to be used for connections created with the legacy connection resource `dbtcloud.Connection`)
     * 
     */
    public Output<Optional<Integer>> adapterId() {
        return Codegen.optional(this.adapterId);
    }
    /**
     * The type of the adapter (databricks or spark)
     * 
     */
    @Export(name="adapterType", refs={String.class}, tree="[0]")
    private Output<String> adapterType;

    /**
     * @return The type of the adapter (databricks or spark)
     * 
     */
    public Output<String> adapterType() {
        return this.adapterType;
    }
    /**
     * The catalog where to create models (only for the databricks adapter)
     * 
     */
    @Export(name="catalog", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> catalog;

    /**
     * @return The catalog where to create models (only for the databricks adapter)
     * 
     */
    public Output<Optional<String>> catalog() {
        return Codegen.optional(this.catalog);
    }
    /**
     * The system Databricks credential ID
     * 
     */
    @Export(name="credentialId", refs={Integer.class}, tree="[0]")
    private Output<Integer> credentialId;

    /**
     * @return The system Databricks credential ID
     * 
     */
    public Output<Integer> credentialId() {
        return this.credentialId;
    }
    /**
     * Project ID to create the Databricks credential in
     * 
     */
    @Export(name="projectId", refs={Integer.class}, tree="[0]")
    private Output<Integer> projectId;

    /**
     * @return Project ID to create the Databricks credential in
     * 
     */
    public Output<Integer> projectId() {
        return this.projectId;
    }
    /**
     * The schema where to create models
     * 
     */
    @Export(name="schema", refs={String.class}, tree="[0]")
    private Output<String> schema;

    /**
     * @return The schema where to create models
     * 
     */
    public Output<String> schema() {
        return this.schema;
    }
    /**
     * Target name
     * 
     * @deprecated
     * This field is deprecated at the environment level (it was never possible to set it in the UI) and will be removed in a future release. Please remove it and set the target name at the job level or leverage environment variables.
     * 
     */
    @Deprecated /* This field is deprecated at the environment level (it was never possible to set it in the UI) and will be removed in a future release. Please remove it and set the target name at the job level or leverage environment variables. */
    @Export(name="targetName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> targetName;

    /**
     * @return Target name
     * 
     */
    public Output<Optional<String>> targetName() {
        return Codegen.optional(this.targetName);
    }
    /**
     * Token for Databricks user
     * 
     */
    @Export(name="token", refs={String.class}, tree="[0]")
    private Output<String> token;

    /**
     * @return Token for Databricks user
     * 
     */
    public Output<String> token() {
        return this.token;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public DatabricksCredential(java.lang.String name) {
        this(name, DatabricksCredentialArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public DatabricksCredential(java.lang.String name, DatabricksCredentialArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public DatabricksCredential(java.lang.String name, DatabricksCredentialArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("dbtcloud:index/databricksCredential:DatabricksCredential", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private DatabricksCredential(java.lang.String name, Output<java.lang.String> id, @Nullable DatabricksCredentialState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("dbtcloud:index/databricksCredential:DatabricksCredential", name, state, makeResourceOptions(options, id), false);
    }

    private static DatabricksCredentialArgs makeArgs(DatabricksCredentialArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? DatabricksCredentialArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "token"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static DatabricksCredential get(java.lang.String name, Output<java.lang.String> id, @Nullable DatabricksCredentialState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new DatabricksCredential(name, id, state, options);
    }
}
