// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dbtcloud;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.dbtcloud.ExtendedAttributesArgs;
import com.pulumi.dbtcloud.Utilities;
import com.pulumi.dbtcloud.inputs.ExtendedAttributesState;
import java.lang.Integer;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * This resource allows setting extended attributes which can be assigned to a given environment ([see docs](https://docs.getdbt.com/docs/dbt-cloud-environments#extended-attributes)).&lt;br/&gt;&lt;br/&gt;In dbt Cloud those values are provided as YML but in the provider they need to be provided as JSON (see example below).
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.dbtcloud.ExtendedAttributes;
 * import com.pulumi.dbtcloud.ExtendedAttributesArgs;
 * import com.pulumi.dbtcloud.Environment;
 * import com.pulumi.dbtcloud.EnvironmentArgs;
 * import static com.pulumi.codegen.internal.Serialization.*;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         // extended_attributes can be set as a raw JSON string or encoded with Terraform's `jsonencode()` function
 *         // we recommend using `jsonencode()` to avoid Terraform reporting changes due to whitespaces or keys ordering
 *         var myAttributes = new ExtendedAttributes("myAttributes", ExtendedAttributesArgs.builder()
 *             .extendedAttributes(serializeJson(
 *                 jsonObject(
 *                     jsonProperty("type", "databricks"),
 *                     jsonProperty("catalog", "dbt_catalog"),
 *                     jsonProperty("http_path", "/sql/your/http/path"),
 *                     jsonProperty("my_nested_field", jsonObject(
 *                         jsonProperty("subfield", "my_value")
 *                     ))
 *                 )))
 *             .projectId(dbtProject.id())
 *             .build());
 * 
 *         var issueDepl = new Environment("issueDepl", EnvironmentArgs.builder()
 *             .dbtVersion("versionless")
 *             .name("My environment")
 *             .projectId(dbtProject.id())
 *             .type("deployment")
 *             .useCustomBranch(false)
 *             .credentialId(dbtCredentialId)
 *             .deploymentType("production")
 *             .extendedAttributesId(myAttributes.extendedAttributesId())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * using  import blocks (requires Terraform &gt;= 1.5)
 * 
 * import {
 * 
 *   to = dbtcloud_extended_attributes.test_extended_attributes
 * 
 *   id = &#34;project_id_id:extended_attributes_id&#34;
 * 
 * }
 * 
 * import {
 * 
 *   to = dbtcloud_extended_attributes.test_extended_attributes
 * 
 *   id = &#34;12345:6789&#34;
 * 
 * }
 * 
 * using the older import command
 * 
 * ```sh
 * $ pulumi import dbtcloud:index/extendedAttributes:ExtendedAttributes test_extended_attributes &#34;project_id_id:extended_attributes_id&#34;
 * ```
 * 
 * ```sh
 * $ pulumi import dbtcloud:index/extendedAttributes:ExtendedAttributes test_extended_attributes 12345:6789
 * ```
 * 
 */
@ResourceType(type="dbtcloud:index/extendedAttributes:ExtendedAttributes")
public class ExtendedAttributes extends com.pulumi.resources.CustomResource {
    @Export(name="extendedAttributes", refs={String.class}, tree="[0]")
    private Output<String> extendedAttributes;

    public Output<String> extendedAttributes() {
        return this.extendedAttributes;
    }
    /**
     * Extended Attributes ID
     * 
     */
    @Export(name="extendedAttributesId", refs={Integer.class}, tree="[0]")
    private Output<Integer> extendedAttributesId;

    /**
     * @return Extended Attributes ID
     * 
     */
    public Output<Integer> extendedAttributesId() {
        return this.extendedAttributesId;
    }
    /**
     * Project ID to create the extended attributes in
     * 
     */
    @Export(name="projectId", refs={Integer.class}, tree="[0]")
    private Output<Integer> projectId;

    /**
     * @return Project ID to create the extended attributes in
     * 
     */
    public Output<Integer> projectId() {
        return this.projectId;
    }
    /**
     * Extended Attributes state (1 is active, 2 is inactive)
     * 
     */
    @Export(name="state", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> state;

    /**
     * @return Extended Attributes state (1 is active, 2 is inactive)
     * 
     */
    public Output<Optional<Integer>> state() {
        return Codegen.optional(this.state);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ExtendedAttributes(String name) {
        this(name, ExtendedAttributesArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ExtendedAttributes(String name, ExtendedAttributesArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ExtendedAttributes(String name, ExtendedAttributesArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("dbtcloud:index/extendedAttributes:ExtendedAttributes", name, args == null ? ExtendedAttributesArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private ExtendedAttributes(String name, Output<String> id, @Nullable ExtendedAttributesState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("dbtcloud:index/extendedAttributes:ExtendedAttributes", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ExtendedAttributes get(String name, Output<String> id, @Nullable ExtendedAttributesState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ExtendedAttributes(name, id, state, options);
    }
}
