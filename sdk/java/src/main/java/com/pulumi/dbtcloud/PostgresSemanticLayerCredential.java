// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dbtcloud;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.dbtcloud.PostgresSemanticLayerCredentialArgs;
import com.pulumi.dbtcloud.Utilities;
import com.pulumi.dbtcloud.inputs.PostgresSemanticLayerCredentialState;
import com.pulumi.dbtcloud.outputs.PostgresSemanticLayerCredentialConfiguration;
import com.pulumi.dbtcloud.outputs.PostgresSemanticLayerCredentialCredential;
import javax.annotation.Nullable;

/**
 * Postgres credential resource. This resource is composed of a Postgres credential and a Semantic Layer configuration. It is used to create a Postgres credential for the Semantic Layer.
 * 
 * ## Example Usage
 * 
 * ## Import
 * 
 * using import blocks (requires Terraform &gt;= 1.5)
 * 
 * import {
 * 
 *   to = dbtcloud_postgres_semantic_layer_credential.example
 * 
 *   id = &#34;credential_id&#34;
 * 
 * }
 * 
 * import {
 * 
 *   to = dbtcloud_postgres_semantic_layer_credential.example
 * 
 *   id = &#34;12345&#34;
 * 
 * }
 * 
 * using the older import command
 * 
 * ```sh
 * $ pulumi import dbtcloud:index/postgresSemanticLayerCredential:PostgresSemanticLayerCredential example &#34;credential_id&#34;
 * ```
 * 
 * ```sh
 * $ pulumi import dbtcloud:index/postgresSemanticLayerCredential:PostgresSemanticLayerCredential example 12345
 * ```
 * 
 */
@ResourceType(type="dbtcloud:index/postgresSemanticLayerCredential:PostgresSemanticLayerCredential")
public class PostgresSemanticLayerCredential extends com.pulumi.resources.CustomResource {
    /**
     * Semantic Layer credential configuration details.
     * 
     */
    @Export(name="configuration", refs={PostgresSemanticLayerCredentialConfiguration.class}, tree="[0]")
    private Output<PostgresSemanticLayerCredentialConfiguration> configuration;

    /**
     * @return Semantic Layer credential configuration details.
     * 
     */
    public Output<PostgresSemanticLayerCredentialConfiguration> configuration() {
        return this.configuration;
    }
    /**
     * Postgres credential details, but used in the context of the Semantic Layer.
     * 
     */
    @Export(name="credential", refs={PostgresSemanticLayerCredentialCredential.class}, tree="[0]")
    private Output<PostgresSemanticLayerCredentialCredential> credential;

    /**
     * @return Postgres credential details, but used in the context of the Semantic Layer.
     * 
     */
    public Output<PostgresSemanticLayerCredentialCredential> credential() {
        return this.credential;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public PostgresSemanticLayerCredential(java.lang.String name) {
        this(name, PostgresSemanticLayerCredentialArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public PostgresSemanticLayerCredential(java.lang.String name, PostgresSemanticLayerCredentialArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public PostgresSemanticLayerCredential(java.lang.String name, PostgresSemanticLayerCredentialArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("dbtcloud:index/postgresSemanticLayerCredential:PostgresSemanticLayerCredential", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private PostgresSemanticLayerCredential(java.lang.String name, Output<java.lang.String> id, @Nullable PostgresSemanticLayerCredentialState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("dbtcloud:index/postgresSemanticLayerCredential:PostgresSemanticLayerCredential", name, state, makeResourceOptions(options, id), false);
    }

    private static PostgresSemanticLayerCredentialArgs makeArgs(PostgresSemanticLayerCredentialArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? PostgresSemanticLayerCredentialArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .pluginDownloadURL("github://api.github.com/pulumi/pulumi-dbtcloud")
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static PostgresSemanticLayerCredential get(java.lang.String name, Output<java.lang.String> id, @Nullable PostgresSemanticLayerCredentialState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new PostgresSemanticLayerCredential(name, id, state, options);
    }
}
