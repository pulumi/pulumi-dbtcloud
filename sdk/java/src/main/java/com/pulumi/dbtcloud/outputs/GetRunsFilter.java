// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dbtcloud.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetRunsFilter {
    /**
     * @return The ID of the environment
     * 
     */
    private @Nullable Integer environmentId;
    /**
     * @return The ID of the job definition
     * 
     */
    private @Nullable Integer jobDefinitionId;
    /**
     * @return The limit of the runs
     * 
     */
    private @Nullable Integer limit;
    /**
     * @return The ID of the project
     * 
     */
    private @Nullable Integer projectId;
    /**
     * @return The ID of the pull request
     * 
     */
    private @Nullable Integer pullRequestId;
    /**
     * @return The status of the run
     * 
     */
    private @Nullable Integer status;
    /**
     * @return The status of the run
     * 
     */
    private @Nullable String statusIn;
    /**
     * @return The ID of the trigger
     * 
     */
    private @Nullable Integer triggerId;

    private GetRunsFilter() {}
    /**
     * @return The ID of the environment
     * 
     */
    public Optional<Integer> environmentId() {
        return Optional.ofNullable(this.environmentId);
    }
    /**
     * @return The ID of the job definition
     * 
     */
    public Optional<Integer> jobDefinitionId() {
        return Optional.ofNullable(this.jobDefinitionId);
    }
    /**
     * @return The limit of the runs
     * 
     */
    public Optional<Integer> limit() {
        return Optional.ofNullable(this.limit);
    }
    /**
     * @return The ID of the project
     * 
     */
    public Optional<Integer> projectId() {
        return Optional.ofNullable(this.projectId);
    }
    /**
     * @return The ID of the pull request
     * 
     */
    public Optional<Integer> pullRequestId() {
        return Optional.ofNullable(this.pullRequestId);
    }
    /**
     * @return The status of the run
     * 
     */
    public Optional<Integer> status() {
        return Optional.ofNullable(this.status);
    }
    /**
     * @return The status of the run
     * 
     */
    public Optional<String> statusIn() {
        return Optional.ofNullable(this.statusIn);
    }
    /**
     * @return The ID of the trigger
     * 
     */
    public Optional<Integer> triggerId() {
        return Optional.ofNullable(this.triggerId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRunsFilter defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer environmentId;
        private @Nullable Integer jobDefinitionId;
        private @Nullable Integer limit;
        private @Nullable Integer projectId;
        private @Nullable Integer pullRequestId;
        private @Nullable Integer status;
        private @Nullable String statusIn;
        private @Nullable Integer triggerId;
        public Builder() {}
        public Builder(GetRunsFilter defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.environmentId = defaults.environmentId;
    	      this.jobDefinitionId = defaults.jobDefinitionId;
    	      this.limit = defaults.limit;
    	      this.projectId = defaults.projectId;
    	      this.pullRequestId = defaults.pullRequestId;
    	      this.status = defaults.status;
    	      this.statusIn = defaults.statusIn;
    	      this.triggerId = defaults.triggerId;
        }

        @CustomType.Setter
        public Builder environmentId(@Nullable Integer environmentId) {

            this.environmentId = environmentId;
            return this;
        }
        @CustomType.Setter
        public Builder jobDefinitionId(@Nullable Integer jobDefinitionId) {

            this.jobDefinitionId = jobDefinitionId;
            return this;
        }
        @CustomType.Setter
        public Builder limit(@Nullable Integer limit) {

            this.limit = limit;
            return this;
        }
        @CustomType.Setter
        public Builder projectId(@Nullable Integer projectId) {

            this.projectId = projectId;
            return this;
        }
        @CustomType.Setter
        public Builder pullRequestId(@Nullable Integer pullRequestId) {

            this.pullRequestId = pullRequestId;
            return this;
        }
        @CustomType.Setter
        public Builder status(@Nullable Integer status) {

            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder statusIn(@Nullable String statusIn) {

            this.statusIn = statusIn;
            return this;
        }
        @CustomType.Setter
        public Builder triggerId(@Nullable Integer triggerId) {

            this.triggerId = triggerId;
            return this;
        }
        public GetRunsFilter build() {
            final var _resultValue = new GetRunsFilter();
            _resultValue.environmentId = environmentId;
            _resultValue.jobDefinitionId = jobDefinitionId;
            _resultValue.limit = limit;
            _resultValue.projectId = projectId;
            _resultValue.pullRequestId = pullRequestId;
            _resultValue.status = status;
            _resultValue.statusIn = statusIn;
            _resultValue.triggerId = triggerId;
            return _resultValue;
        }
    }
}
