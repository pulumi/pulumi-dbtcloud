// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dbtcloud;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.dbtcloud.OauthConfigurationArgs;
import com.pulumi.dbtcloud.Utilities;
import com.pulumi.dbtcloud.inputs.OauthConfigurationState;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Configure an external OAuth integration for the data warehouse. Currently supports Okta and Entra ID (i.e. Azure AD) for Snowflake.
 * 
 * See the [documentation](https://docs.getdbt.com/docs/cloud/manage-access/external-oauth) for more information on how to configure it.
 * 
 * ## Import
 * 
 * using  import blocks (requires Terraform &gt;= 1.5)
 * 
 * import {
 * 
 *   to = dbtcloud_oauth_configuration.my_external_oauth
 * 
 *   id = &#34;external_oauth_id&#34;
 * 
 * }
 * 
 * import {
 * 
 *   to = dbtcloud_oauth_configuration.my_external_oauth
 * 
 *   id = &#34;12345&#34;
 * 
 * }
 * 
 * using the older import command
 * 
 * ```sh
 * $ pulumi import dbtcloud:index/oauthConfiguration:OauthConfiguration my_external_oauth &#34;external_oauth_id&#34;
 * ```
 * 
 * ```sh
 * $ pulumi import dbtcloud:index/oauthConfiguration:OauthConfiguration my_external_oauth 12345
 * ```
 * 
 */
@ResourceType(type="dbtcloud:index/oauthConfiguration:OauthConfiguration")
public class OauthConfiguration extends com.pulumi.resources.CustomResource {
    /**
     * The Application ID URI for the OAuth integration. Only for Entra
     * 
     */
    @Export(name="applicationIdUri", refs={String.class}, tree="[0]")
    private Output<String> applicationIdUri;

    /**
     * @return The Application ID URI for the OAuth integration. Only for Entra
     * 
     */
    public Output<String> applicationIdUri() {
        return this.applicationIdUri;
    }
    /**
     * The Authorize URL for the OAuth integration
     * 
     */
    @Export(name="authorizeUrl", refs={String.class}, tree="[0]")
    private Output<String> authorizeUrl;

    /**
     * @return The Authorize URL for the OAuth integration
     * 
     */
    public Output<String> authorizeUrl() {
        return this.authorizeUrl;
    }
    /**
     * The Client ID for the OAuth integration
     * 
     */
    @Export(name="clientId", refs={String.class}, tree="[0]")
    private Output<String> clientId;

    /**
     * @return The Client ID for the OAuth integration
     * 
     */
    public Output<String> clientId() {
        return this.clientId;
    }
    /**
     * The Client secret for the OAuth integration
     * 
     */
    @Export(name="clientSecret", refs={String.class}, tree="[0]")
    private Output<String> clientSecret;

    /**
     * @return The Client secret for the OAuth integration
     * 
     */
    public Output<String> clientSecret() {
        return this.clientSecret;
    }
    /**
     * The name of OAuth integration
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of OAuth integration
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The redirect URL for the OAuth integration
     * 
     */
    @Export(name="redirectUri", refs={String.class}, tree="[0]")
    private Output<String> redirectUri;

    /**
     * @return The redirect URL for the OAuth integration
     * 
     */
    public Output<String> redirectUri() {
        return this.redirectUri;
    }
    /**
     * The Token URL for the OAuth integration
     * 
     */
    @Export(name="tokenUrl", refs={String.class}, tree="[0]")
    private Output<String> tokenUrl;

    /**
     * @return The Token URL for the OAuth integration
     * 
     */
    public Output<String> tokenUrl() {
        return this.tokenUrl;
    }
    /**
     * The type of OAuth integration (`entra` or `okta`)
     * 
     */
    @Export(name="type", refs={String.class}, tree="[0]")
    private Output<String> type;

    /**
     * @return The type of OAuth integration (`entra` or `okta`)
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public OauthConfiguration(java.lang.String name) {
        this(name, OauthConfigurationArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public OauthConfiguration(java.lang.String name, OauthConfigurationArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public OauthConfiguration(java.lang.String name, OauthConfigurationArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("dbtcloud:index/oauthConfiguration:OauthConfiguration", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private OauthConfiguration(java.lang.String name, Output<java.lang.String> id, @Nullable OauthConfigurationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("dbtcloud:index/oauthConfiguration:OauthConfiguration", name, state, makeResourceOptions(options, id), false);
    }

    private static OauthConfigurationArgs makeArgs(OauthConfigurationArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? OauthConfigurationArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "clientSecret"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static OauthConfiguration get(java.lang.String name, Output<java.lang.String> id, @Nullable OauthConfigurationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new OauthConfiguration(name, id, state, options);
    }
}
