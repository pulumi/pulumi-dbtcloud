// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dbtcloud.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.dbtcloud.outputs.GetJobsJob;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetJobsResult {
    /**
     * @return The ID of the environment for which we want to retrieve the jobs (one of `projectId` or `environmentId` must be set)
     * 
     */
    private @Nullable Integer environmentId;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Set of jobs with their details
     * 
     */
    private List<GetJobsJob> jobs;
    /**
     * @return The ID of the project for which we want to retrieve the jobs (one of `projectId` or `environmentId` must be set)
     * 
     */
    private @Nullable Integer projectId;

    private GetJobsResult() {}
    /**
     * @return The ID of the environment for which we want to retrieve the jobs (one of `projectId` or `environmentId` must be set)
     * 
     */
    public Optional<Integer> environmentId() {
        return Optional.ofNullable(this.environmentId);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Set of jobs with their details
     * 
     */
    public List<GetJobsJob> jobs() {
        return this.jobs;
    }
    /**
     * @return The ID of the project for which we want to retrieve the jobs (one of `projectId` or `environmentId` must be set)
     * 
     */
    public Optional<Integer> projectId() {
        return Optional.ofNullable(this.projectId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetJobsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer environmentId;
        private String id;
        private List<GetJobsJob> jobs;
        private @Nullable Integer projectId;
        public Builder() {}
        public Builder(GetJobsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.environmentId = defaults.environmentId;
    	      this.id = defaults.id;
    	      this.jobs = defaults.jobs;
    	      this.projectId = defaults.projectId;
        }

        @CustomType.Setter
        public Builder environmentId(@Nullable Integer environmentId) {

            this.environmentId = environmentId;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetJobsResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder jobs(List<GetJobsJob> jobs) {
            if (jobs == null) {
              throw new MissingRequiredPropertyException("GetJobsResult", "jobs");
            }
            this.jobs = jobs;
            return this;
        }
        public Builder jobs(GetJobsJob... jobs) {
            return jobs(List.of(jobs));
        }
        @CustomType.Setter
        public Builder projectId(@Nullable Integer projectId) {

            this.projectId = projectId;
            return this;
        }
        public GetJobsResult build() {
            final var _resultValue = new GetJobsResult();
            _resultValue.environmentId = environmentId;
            _resultValue.id = id;
            _resultValue.jobs = jobs;
            _resultValue.projectId = projectId;
            return _resultValue;
        }
    }
}
