// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dbtcloud.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.dbtcloud.outputs.GetGlobalConnectionsConnection;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetGlobalConnectionsResult {
    /**
     * @return A set of all the connections
     * 
     */
    private List<GetGlobalConnectionsConnection> connections;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;

    private GetGlobalConnectionsResult() {}
    /**
     * @return A set of all the connections
     * 
     */
    public List<GetGlobalConnectionsConnection> connections() {
        return this.connections;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetGlobalConnectionsResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetGlobalConnectionsConnection> connections;
        private String id;
        public Builder() {}
        public Builder(GetGlobalConnectionsResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.connections = defaults.connections;
    	      this.id = defaults.id;
        }

        @CustomType.Setter
        public Builder connections(List<GetGlobalConnectionsConnection> connections) {
            if (connections == null) {
              throw new MissingRequiredPropertyException("GetGlobalConnectionsResult", "connections");
            }
            this.connections = connections;
            return this;
        }
        public Builder connections(GetGlobalConnectionsConnection... connections) {
            return connections(List.of(connections));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetGlobalConnectionsResult", "id");
            }
            this.id = id;
            return this;
        }
        public GetGlobalConnectionsResult build() {
            final var _resultValue = new GetGlobalConnectionsResult();
            _resultValue.connections = connections;
            _resultValue.id = id;
            return _resultValue;
        }
    }
}
