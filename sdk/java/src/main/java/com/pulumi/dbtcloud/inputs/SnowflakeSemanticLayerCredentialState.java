// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dbtcloud.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.dbtcloud.inputs.SnowflakeSemanticLayerCredentialConfigurationArgs;
import com.pulumi.dbtcloud.inputs.SnowflakeSemanticLayerCredentialCredentialArgs;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SnowflakeSemanticLayerCredentialState extends com.pulumi.resources.ResourceArgs {

    public static final SnowflakeSemanticLayerCredentialState Empty = new SnowflakeSemanticLayerCredentialState();

    /**
     * Semantic Layer credenttial configuration details.
     * 
     */
    @Import(name="configuration")
    private @Nullable Output<SnowflakeSemanticLayerCredentialConfigurationArgs> configuration;

    /**
     * @return Semantic Layer credenttial configuration details.
     * 
     */
    public Optional<Output<SnowflakeSemanticLayerCredentialConfigurationArgs>> configuration() {
        return Optional.ofNullable(this.configuration);
    }

    /**
     * Snowflake credential details, but used in the context of the Semantic Layer.
     * 
     */
    @Import(name="credential")
    private @Nullable Output<SnowflakeSemanticLayerCredentialCredentialArgs> credential;

    /**
     * @return Snowflake credential details, but used in the context of the Semantic Layer.
     * 
     */
    public Optional<Output<SnowflakeSemanticLayerCredentialCredentialArgs>> credential() {
        return Optional.ofNullable(this.credential);
    }

    private SnowflakeSemanticLayerCredentialState() {}

    private SnowflakeSemanticLayerCredentialState(SnowflakeSemanticLayerCredentialState $) {
        this.configuration = $.configuration;
        this.credential = $.credential;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SnowflakeSemanticLayerCredentialState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SnowflakeSemanticLayerCredentialState $;

        public Builder() {
            $ = new SnowflakeSemanticLayerCredentialState();
        }

        public Builder(SnowflakeSemanticLayerCredentialState defaults) {
            $ = new SnowflakeSemanticLayerCredentialState(Objects.requireNonNull(defaults));
        }

        /**
         * @param configuration Semantic Layer credenttial configuration details.
         * 
         * @return builder
         * 
         */
        public Builder configuration(@Nullable Output<SnowflakeSemanticLayerCredentialConfigurationArgs> configuration) {
            $.configuration = configuration;
            return this;
        }

        /**
         * @param configuration Semantic Layer credenttial configuration details.
         * 
         * @return builder
         * 
         */
        public Builder configuration(SnowflakeSemanticLayerCredentialConfigurationArgs configuration) {
            return configuration(Output.of(configuration));
        }

        /**
         * @param credential Snowflake credential details, but used in the context of the Semantic Layer.
         * 
         * @return builder
         * 
         */
        public Builder credential(@Nullable Output<SnowflakeSemanticLayerCredentialCredentialArgs> credential) {
            $.credential = credential;
            return this;
        }

        /**
         * @param credential Snowflake credential details, but used in the context of the Semantic Layer.
         * 
         * @return builder
         * 
         */
        public Builder credential(SnowflakeSemanticLayerCredentialCredentialArgs credential) {
            return credential(Output.of(credential));
        }

        public SnowflakeSemanticLayerCredentialState build() {
            return $;
        }
    }

}
