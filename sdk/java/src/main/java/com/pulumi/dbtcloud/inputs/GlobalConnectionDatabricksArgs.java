// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dbtcloud.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GlobalConnectionDatabricksArgs extends com.pulumi.resources.ResourceArgs {

    public static final GlobalConnectionDatabricksArgs Empty = new GlobalConnectionDatabricksArgs();

    /**
     * Catalog name if Unity Catalog is enabled in your Databricks workspace.
     * 
     */
    @Import(name="catalog")
    private @Nullable Output<String> catalog;

    /**
     * @return Catalog name if Unity Catalog is enabled in your Databricks workspace.
     * 
     */
    public Optional<Output<String>> catalog() {
        return Optional.ofNullable(this.catalog);
    }

    /**
     * Required to enable Databricks OAuth authentication for IDE developers.
     * 
     */
    @Import(name="clientId")
    private @Nullable Output<String> clientId;

    /**
     * @return Required to enable Databricks OAuth authentication for IDE developers.
     * 
     */
    public Optional<Output<String>> clientId() {
        return Optional.ofNullable(this.clientId);
    }

    /**
     * Required to enable Databricks OAuth authentication for IDE developers.
     * 
     */
    @Import(name="clientSecret")
    private @Nullable Output<String> clientSecret;

    /**
     * @return Required to enable Databricks OAuth authentication for IDE developers.
     * 
     */
    public Optional<Output<String>> clientSecret() {
        return Optional.ofNullable(this.clientSecret);
    }

    /**
     * The hostname of the Databricks cluster or SQL warehouse.
     * 
     */
    @Import(name="host", required=true)
    private Output<String> host;

    /**
     * @return The hostname of the Databricks cluster or SQL warehouse.
     * 
     */
    public Output<String> host() {
        return this.host;
    }

    /**
     * The HTTP path of the Databricks cluster or SQL warehouse.
     * 
     */
    @Import(name="httpPath", required=true)
    private Output<String> httpPath;

    /**
     * @return The HTTP path of the Databricks cluster or SQL warehouse.
     * 
     */
    public Output<String> httpPath() {
        return this.httpPath;
    }

    private GlobalConnectionDatabricksArgs() {}

    private GlobalConnectionDatabricksArgs(GlobalConnectionDatabricksArgs $) {
        this.catalog = $.catalog;
        this.clientId = $.clientId;
        this.clientSecret = $.clientSecret;
        this.host = $.host;
        this.httpPath = $.httpPath;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GlobalConnectionDatabricksArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GlobalConnectionDatabricksArgs $;

        public Builder() {
            $ = new GlobalConnectionDatabricksArgs();
        }

        public Builder(GlobalConnectionDatabricksArgs defaults) {
            $ = new GlobalConnectionDatabricksArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param catalog Catalog name if Unity Catalog is enabled in your Databricks workspace.
         * 
         * @return builder
         * 
         */
        public Builder catalog(@Nullable Output<String> catalog) {
            $.catalog = catalog;
            return this;
        }

        /**
         * @param catalog Catalog name if Unity Catalog is enabled in your Databricks workspace.
         * 
         * @return builder
         * 
         */
        public Builder catalog(String catalog) {
            return catalog(Output.of(catalog));
        }

        /**
         * @param clientId Required to enable Databricks OAuth authentication for IDE developers.
         * 
         * @return builder
         * 
         */
        public Builder clientId(@Nullable Output<String> clientId) {
            $.clientId = clientId;
            return this;
        }

        /**
         * @param clientId Required to enable Databricks OAuth authentication for IDE developers.
         * 
         * @return builder
         * 
         */
        public Builder clientId(String clientId) {
            return clientId(Output.of(clientId));
        }

        /**
         * @param clientSecret Required to enable Databricks OAuth authentication for IDE developers.
         * 
         * @return builder
         * 
         */
        public Builder clientSecret(@Nullable Output<String> clientSecret) {
            $.clientSecret = clientSecret;
            return this;
        }

        /**
         * @param clientSecret Required to enable Databricks OAuth authentication for IDE developers.
         * 
         * @return builder
         * 
         */
        public Builder clientSecret(String clientSecret) {
            return clientSecret(Output.of(clientSecret));
        }

        /**
         * @param host The hostname of the Databricks cluster or SQL warehouse.
         * 
         * @return builder
         * 
         */
        public Builder host(Output<String> host) {
            $.host = host;
            return this;
        }

        /**
         * @param host The hostname of the Databricks cluster or SQL warehouse.
         * 
         * @return builder
         * 
         */
        public Builder host(String host) {
            return host(Output.of(host));
        }

        /**
         * @param httpPath The HTTP path of the Databricks cluster or SQL warehouse.
         * 
         * @return builder
         * 
         */
        public Builder httpPath(Output<String> httpPath) {
            $.httpPath = httpPath;
            return this;
        }

        /**
         * @param httpPath The HTTP path of the Databricks cluster or SQL warehouse.
         * 
         * @return builder
         * 
         */
        public Builder httpPath(String httpPath) {
            return httpPath(Output.of(httpPath));
        }

        public GlobalConnectionDatabricksArgs build() {
            if ($.host == null) {
                throw new MissingRequiredPropertyException("GlobalConnectionDatabricksArgs", "host");
            }
            if ($.httpPath == null) {
                throw new MissingRequiredPropertyException("GlobalConnectionDatabricksArgs", "httpPath");
            }
            return $;
        }
    }

}
