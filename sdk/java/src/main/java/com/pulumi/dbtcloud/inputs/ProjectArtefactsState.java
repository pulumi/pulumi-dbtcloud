// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dbtcloud.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ProjectArtefactsState extends com.pulumi.resources.ResourceArgs {

    public static final ProjectArtefactsState Empty = new ProjectArtefactsState();

    /**
     * Docs Job ID
     * 
     */
    @Import(name="docsJobId")
    private @Nullable Output<Integer> docsJobId;

    /**
     * @return Docs Job ID
     * 
     */
    public Optional<Output<Integer>> docsJobId() {
        return Optional.ofNullable(this.docsJobId);
    }

    /**
     * Freshness Job ID
     * 
     */
    @Import(name="freshnessJobId")
    private @Nullable Output<Integer> freshnessJobId;

    /**
     * @return Freshness Job ID
     * 
     */
    public Optional<Output<Integer>> freshnessJobId() {
        return Optional.ofNullable(this.freshnessJobId);
    }

    /**
     * Project ID
     * 
     */
    @Import(name="projectId")
    private @Nullable Output<Integer> projectId;

    /**
     * @return Project ID
     * 
     */
    public Optional<Output<Integer>> projectId() {
        return Optional.ofNullable(this.projectId);
    }

    private ProjectArtefactsState() {}

    private ProjectArtefactsState(ProjectArtefactsState $) {
        this.docsJobId = $.docsJobId;
        this.freshnessJobId = $.freshnessJobId;
        this.projectId = $.projectId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProjectArtefactsState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProjectArtefactsState $;

        public Builder() {
            $ = new ProjectArtefactsState();
        }

        public Builder(ProjectArtefactsState defaults) {
            $ = new ProjectArtefactsState(Objects.requireNonNull(defaults));
        }

        /**
         * @param docsJobId Docs Job ID
         * 
         * @return builder
         * 
         */
        public Builder docsJobId(@Nullable Output<Integer> docsJobId) {
            $.docsJobId = docsJobId;
            return this;
        }

        /**
         * @param docsJobId Docs Job ID
         * 
         * @return builder
         * 
         */
        public Builder docsJobId(Integer docsJobId) {
            return docsJobId(Output.of(docsJobId));
        }

        /**
         * @param freshnessJobId Freshness Job ID
         * 
         * @return builder
         * 
         */
        public Builder freshnessJobId(@Nullable Output<Integer> freshnessJobId) {
            $.freshnessJobId = freshnessJobId;
            return this;
        }

        /**
         * @param freshnessJobId Freshness Job ID
         * 
         * @return builder
         * 
         */
        public Builder freshnessJobId(Integer freshnessJobId) {
            return freshnessJobId(Output.of(freshnessJobId));
        }

        /**
         * @param projectId Project ID
         * 
         * @return builder
         * 
         */
        public Builder projectId(@Nullable Output<Integer> projectId) {
            $.projectId = projectId;
            return this;
        }

        /**
         * @param projectId Project ID
         * 
         * @return builder
         * 
         */
        public Builder projectId(Integer projectId) {
            return projectId(Output.of(projectId));
        }

        public ProjectArtefactsState build() {
            return $;
        }
    }

}
