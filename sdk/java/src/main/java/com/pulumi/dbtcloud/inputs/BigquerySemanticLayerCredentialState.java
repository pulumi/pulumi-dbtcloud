// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dbtcloud.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.dbtcloud.inputs.BigquerySemanticLayerCredentialConfigurationArgs;
import com.pulumi.dbtcloud.inputs.BigquerySemanticLayerCredentialCredentialArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BigquerySemanticLayerCredentialState extends com.pulumi.resources.ResourceArgs {

    public static final BigquerySemanticLayerCredentialState Empty = new BigquerySemanticLayerCredentialState();

    /**
     * Auth Provider X509 Cert URL for the Service Account
     * 
     */
    @Import(name="authProviderX509CertUrl")
    private @Nullable Output<String> authProviderX509CertUrl;

    /**
     * @return Auth Provider X509 Cert URL for the Service Account
     * 
     */
    public Optional<Output<String>> authProviderX509CertUrl() {
        return Optional.ofNullable(this.authProviderX509CertUrl);
    }

    /**
     * Auth URI for the Service Account
     * 
     */
    @Import(name="authUri")
    private @Nullable Output<String> authUri;

    /**
     * @return Auth URI for the Service Account
     * 
     */
    public Optional<Output<String>> authUri() {
        return Optional.ofNullable(this.authUri);
    }

    /**
     * Service Account email
     * 
     */
    @Import(name="clientEmail")
    private @Nullable Output<String> clientEmail;

    /**
     * @return Service Account email
     * 
     */
    public Optional<Output<String>> clientEmail() {
        return Optional.ofNullable(this.clientEmail);
    }

    /**
     * Client ID of the Service Account
     * 
     */
    @Import(name="clientId")
    private @Nullable Output<String> clientId;

    /**
     * @return Client ID of the Service Account
     * 
     */
    public Optional<Output<String>> clientId() {
        return Optional.ofNullable(this.clientId);
    }

    /**
     * Client X509 Cert URL for the Service Account
     * 
     */
    @Import(name="clientX509CertUrl")
    private @Nullable Output<String> clientX509CertUrl;

    /**
     * @return Client X509 Cert URL for the Service Account
     * 
     */
    public Optional<Output<String>> clientX509CertUrl() {
        return Optional.ofNullable(this.clientX509CertUrl);
    }

    /**
     * Semantic Layer credential configuration details.
     * 
     */
    @Import(name="configuration")
    private @Nullable Output<BigquerySemanticLayerCredentialConfigurationArgs> configuration;

    /**
     * @return Semantic Layer credential configuration details.
     * 
     */
    public Optional<Output<BigquerySemanticLayerCredentialConfigurationArgs>> configuration() {
        return Optional.ofNullable(this.configuration);
    }

    /**
     * BigQuery credential details, but used in the context of the Semantic Layer.
     * 
     */
    @Import(name="credential")
    private @Nullable Output<BigquerySemanticLayerCredentialCredentialArgs> credential;

    /**
     * @return BigQuery credential details, but used in the context of the Semantic Layer.
     * 
     */
    public Optional<Output<BigquerySemanticLayerCredentialCredentialArgs>> credential() {
        return Optional.ofNullable(this.credential);
    }

    /**
     * Private Key for the Service Account
     * 
     */
    @Import(name="privateKey")
    private @Nullable Output<String> privateKey;

    /**
     * @return Private Key for the Service Account
     * 
     */
    public Optional<Output<String>> privateKey() {
        return Optional.ofNullable(this.privateKey);
    }

    /**
     * Private Key ID for the Service Account
     * 
     */
    @Import(name="privateKeyId")
    private @Nullable Output<String> privateKeyId;

    /**
     * @return Private Key ID for the Service Account
     * 
     */
    public Optional<Output<String>> privateKeyId() {
        return Optional.ofNullable(this.privateKeyId);
    }

    /**
     * Token URI for the Service Account
     * 
     */
    @Import(name="tokenUri")
    private @Nullable Output<String> tokenUri;

    /**
     * @return Token URI for the Service Account
     * 
     */
    public Optional<Output<String>> tokenUri() {
        return Optional.ofNullable(this.tokenUri);
    }

    private BigquerySemanticLayerCredentialState() {}

    private BigquerySemanticLayerCredentialState(BigquerySemanticLayerCredentialState $) {
        this.authProviderX509CertUrl = $.authProviderX509CertUrl;
        this.authUri = $.authUri;
        this.clientEmail = $.clientEmail;
        this.clientId = $.clientId;
        this.clientX509CertUrl = $.clientX509CertUrl;
        this.configuration = $.configuration;
        this.credential = $.credential;
        this.privateKey = $.privateKey;
        this.privateKeyId = $.privateKeyId;
        this.tokenUri = $.tokenUri;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BigquerySemanticLayerCredentialState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BigquerySemanticLayerCredentialState $;

        public Builder() {
            $ = new BigquerySemanticLayerCredentialState();
        }

        public Builder(BigquerySemanticLayerCredentialState defaults) {
            $ = new BigquerySemanticLayerCredentialState(Objects.requireNonNull(defaults));
        }

        /**
         * @param authProviderX509CertUrl Auth Provider X509 Cert URL for the Service Account
         * 
         * @return builder
         * 
         */
        public Builder authProviderX509CertUrl(@Nullable Output<String> authProviderX509CertUrl) {
            $.authProviderX509CertUrl = authProviderX509CertUrl;
            return this;
        }

        /**
         * @param authProviderX509CertUrl Auth Provider X509 Cert URL for the Service Account
         * 
         * @return builder
         * 
         */
        public Builder authProviderX509CertUrl(String authProviderX509CertUrl) {
            return authProviderX509CertUrl(Output.of(authProviderX509CertUrl));
        }

        /**
         * @param authUri Auth URI for the Service Account
         * 
         * @return builder
         * 
         */
        public Builder authUri(@Nullable Output<String> authUri) {
            $.authUri = authUri;
            return this;
        }

        /**
         * @param authUri Auth URI for the Service Account
         * 
         * @return builder
         * 
         */
        public Builder authUri(String authUri) {
            return authUri(Output.of(authUri));
        }

        /**
         * @param clientEmail Service Account email
         * 
         * @return builder
         * 
         */
        public Builder clientEmail(@Nullable Output<String> clientEmail) {
            $.clientEmail = clientEmail;
            return this;
        }

        /**
         * @param clientEmail Service Account email
         * 
         * @return builder
         * 
         */
        public Builder clientEmail(String clientEmail) {
            return clientEmail(Output.of(clientEmail));
        }

        /**
         * @param clientId Client ID of the Service Account
         * 
         * @return builder
         * 
         */
        public Builder clientId(@Nullable Output<String> clientId) {
            $.clientId = clientId;
            return this;
        }

        /**
         * @param clientId Client ID of the Service Account
         * 
         * @return builder
         * 
         */
        public Builder clientId(String clientId) {
            return clientId(Output.of(clientId));
        }

        /**
         * @param clientX509CertUrl Client X509 Cert URL for the Service Account
         * 
         * @return builder
         * 
         */
        public Builder clientX509CertUrl(@Nullable Output<String> clientX509CertUrl) {
            $.clientX509CertUrl = clientX509CertUrl;
            return this;
        }

        /**
         * @param clientX509CertUrl Client X509 Cert URL for the Service Account
         * 
         * @return builder
         * 
         */
        public Builder clientX509CertUrl(String clientX509CertUrl) {
            return clientX509CertUrl(Output.of(clientX509CertUrl));
        }

        /**
         * @param configuration Semantic Layer credential configuration details.
         * 
         * @return builder
         * 
         */
        public Builder configuration(@Nullable Output<BigquerySemanticLayerCredentialConfigurationArgs> configuration) {
            $.configuration = configuration;
            return this;
        }

        /**
         * @param configuration Semantic Layer credential configuration details.
         * 
         * @return builder
         * 
         */
        public Builder configuration(BigquerySemanticLayerCredentialConfigurationArgs configuration) {
            return configuration(Output.of(configuration));
        }

        /**
         * @param credential BigQuery credential details, but used in the context of the Semantic Layer.
         * 
         * @return builder
         * 
         */
        public Builder credential(@Nullable Output<BigquerySemanticLayerCredentialCredentialArgs> credential) {
            $.credential = credential;
            return this;
        }

        /**
         * @param credential BigQuery credential details, but used in the context of the Semantic Layer.
         * 
         * @return builder
         * 
         */
        public Builder credential(BigquerySemanticLayerCredentialCredentialArgs credential) {
            return credential(Output.of(credential));
        }

        /**
         * @param privateKey Private Key for the Service Account
         * 
         * @return builder
         * 
         */
        public Builder privateKey(@Nullable Output<String> privateKey) {
            $.privateKey = privateKey;
            return this;
        }

        /**
         * @param privateKey Private Key for the Service Account
         * 
         * @return builder
         * 
         */
        public Builder privateKey(String privateKey) {
            return privateKey(Output.of(privateKey));
        }

        /**
         * @param privateKeyId Private Key ID for the Service Account
         * 
         * @return builder
         * 
         */
        public Builder privateKeyId(@Nullable Output<String> privateKeyId) {
            $.privateKeyId = privateKeyId;
            return this;
        }

        /**
         * @param privateKeyId Private Key ID for the Service Account
         * 
         * @return builder
         * 
         */
        public Builder privateKeyId(String privateKeyId) {
            return privateKeyId(Output.of(privateKeyId));
        }

        /**
         * @param tokenUri Token URI for the Service Account
         * 
         * @return builder
         * 
         */
        public Builder tokenUri(@Nullable Output<String> tokenUri) {
            $.tokenUri = tokenUri;
            return this;
        }

        /**
         * @param tokenUri Token URI for the Service Account
         * 
         * @return builder
         * 
         */
        public Builder tokenUri(String tokenUri) {
            return tokenUri(Output.of(tokenUri));
        }

        public BigquerySemanticLayerCredentialState build() {
            return $;
        }
    }

}
