// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dbtcloud;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


public final class AthenaCredentialArgs extends com.pulumi.resources.ResourceArgs {

    public static final AthenaCredentialArgs Empty = new AthenaCredentialArgs();

    /**
     * AWS access key ID for Athena user
     * 
     */
    @Import(name="awsAccessKeyId", required=true)
    private Output<String> awsAccessKeyId;

    /**
     * @return AWS access key ID for Athena user
     * 
     */
    public Output<String> awsAccessKeyId() {
        return this.awsAccessKeyId;
    }

    /**
     * AWS secret access key for Athena user
     * 
     */
    @Import(name="awsSecretAccessKey", required=true)
    private Output<String> awsSecretAccessKey;

    /**
     * @return AWS secret access key for Athena user
     * 
     */
    public Output<String> awsSecretAccessKey() {
        return this.awsSecretAccessKey;
    }

    /**
     * Project ID to create the Athena credential in
     * 
     */
    @Import(name="projectId", required=true)
    private Output<Integer> projectId;

    /**
     * @return Project ID to create the Athena credential in
     * 
     */
    public Output<Integer> projectId() {
        return this.projectId;
    }

    /**
     * The schema where to create models
     * 
     */
    @Import(name="schema", required=true)
    private Output<String> schema;

    /**
     * @return The schema where to create models
     * 
     */
    public Output<String> schema() {
        return this.schema;
    }

    private AthenaCredentialArgs() {}

    private AthenaCredentialArgs(AthenaCredentialArgs $) {
        this.awsAccessKeyId = $.awsAccessKeyId;
        this.awsSecretAccessKey = $.awsSecretAccessKey;
        this.projectId = $.projectId;
        this.schema = $.schema;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AthenaCredentialArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AthenaCredentialArgs $;

        public Builder() {
            $ = new AthenaCredentialArgs();
        }

        public Builder(AthenaCredentialArgs defaults) {
            $ = new AthenaCredentialArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param awsAccessKeyId AWS access key ID for Athena user
         * 
         * @return builder
         * 
         */
        public Builder awsAccessKeyId(Output<String> awsAccessKeyId) {
            $.awsAccessKeyId = awsAccessKeyId;
            return this;
        }

        /**
         * @param awsAccessKeyId AWS access key ID for Athena user
         * 
         * @return builder
         * 
         */
        public Builder awsAccessKeyId(String awsAccessKeyId) {
            return awsAccessKeyId(Output.of(awsAccessKeyId));
        }

        /**
         * @param awsSecretAccessKey AWS secret access key for Athena user
         * 
         * @return builder
         * 
         */
        public Builder awsSecretAccessKey(Output<String> awsSecretAccessKey) {
            $.awsSecretAccessKey = awsSecretAccessKey;
            return this;
        }

        /**
         * @param awsSecretAccessKey AWS secret access key for Athena user
         * 
         * @return builder
         * 
         */
        public Builder awsSecretAccessKey(String awsSecretAccessKey) {
            return awsSecretAccessKey(Output.of(awsSecretAccessKey));
        }

        /**
         * @param projectId Project ID to create the Athena credential in
         * 
         * @return builder
         * 
         */
        public Builder projectId(Output<Integer> projectId) {
            $.projectId = projectId;
            return this;
        }

        /**
         * @param projectId Project ID to create the Athena credential in
         * 
         * @return builder
         * 
         */
        public Builder projectId(Integer projectId) {
            return projectId(Output.of(projectId));
        }

        /**
         * @param schema The schema where to create models
         * 
         * @return builder
         * 
         */
        public Builder schema(Output<String> schema) {
            $.schema = schema;
            return this;
        }

        /**
         * @param schema The schema where to create models
         * 
         * @return builder
         * 
         */
        public Builder schema(String schema) {
            return schema(Output.of(schema));
        }

        public AthenaCredentialArgs build() {
            if ($.awsAccessKeyId == null) {
                throw new MissingRequiredPropertyException("AthenaCredentialArgs", "awsAccessKeyId");
            }
            if ($.awsSecretAccessKey == null) {
                throw new MissingRequiredPropertyException("AthenaCredentialArgs", "awsSecretAccessKey");
            }
            if ($.projectId == null) {
                throw new MissingRequiredPropertyException("AthenaCredentialArgs", "projectId");
            }
            if ($.schema == null) {
                throw new MissingRequiredPropertyException("AthenaCredentialArgs", "schema");
            }
            return $;
        }
    }

}
