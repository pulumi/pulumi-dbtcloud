// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dbtcloud;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.util.List;
import java.util.Objects;


public final class UserGroupsArgs extends com.pulumi.resources.ResourceArgs {

    public static final UserGroupsArgs Empty = new UserGroupsArgs();

    /**
     * IDs of the groups to assign to the user. If additional groups were assigned manually in dbt Cloud, they will be removed.
     * 
     */
    @Import(name="groupIds", required=true)
    private Output<List<Integer>> groupIds;

    /**
     * @return IDs of the groups to assign to the user. If additional groups were assigned manually in dbt Cloud, they will be removed.
     * 
     */
    public Output<List<Integer>> groupIds() {
        return this.groupIds;
    }

    /**
     * The internal ID of a dbt Cloud user.
     * 
     */
    @Import(name="userId", required=true)
    private Output<Integer> userId;

    /**
     * @return The internal ID of a dbt Cloud user.
     * 
     */
    public Output<Integer> userId() {
        return this.userId;
    }

    private UserGroupsArgs() {}

    private UserGroupsArgs(UserGroupsArgs $) {
        this.groupIds = $.groupIds;
        this.userId = $.userId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(UserGroupsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private UserGroupsArgs $;

        public Builder() {
            $ = new UserGroupsArgs();
        }

        public Builder(UserGroupsArgs defaults) {
            $ = new UserGroupsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param groupIds IDs of the groups to assign to the user. If additional groups were assigned manually in dbt Cloud, they will be removed.
         * 
         * @return builder
         * 
         */
        public Builder groupIds(Output<List<Integer>> groupIds) {
            $.groupIds = groupIds;
            return this;
        }

        /**
         * @param groupIds IDs of the groups to assign to the user. If additional groups were assigned manually in dbt Cloud, they will be removed.
         * 
         * @return builder
         * 
         */
        public Builder groupIds(List<Integer> groupIds) {
            return groupIds(Output.of(groupIds));
        }

        /**
         * @param groupIds IDs of the groups to assign to the user. If additional groups were assigned manually in dbt Cloud, they will be removed.
         * 
         * @return builder
         * 
         */
        public Builder groupIds(Integer... groupIds) {
            return groupIds(List.of(groupIds));
        }

        /**
         * @param userId The internal ID of a dbt Cloud user.
         * 
         * @return builder
         * 
         */
        public Builder userId(Output<Integer> userId) {
            $.userId = userId;
            return this;
        }

        /**
         * @param userId The internal ID of a dbt Cloud user.
         * 
         * @return builder
         * 
         */
        public Builder userId(Integer userId) {
            return userId(Output.of(userId));
        }

        public UserGroupsArgs build() {
            if ($.groupIds == null) {
                throw new MissingRequiredPropertyException("UserGroupsArgs", "groupIds");
            }
            if ($.userId == null) {
                throw new MissingRequiredPropertyException("UserGroupsArgs", "userId");
            }
            return $;
        }
    }

}
