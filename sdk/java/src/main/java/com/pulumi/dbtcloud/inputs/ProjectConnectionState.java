// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dbtcloud.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ProjectConnectionState extends com.pulumi.resources.ResourceArgs {

    public static final ProjectConnectionState Empty = new ProjectConnectionState();

    /**
     * Connection ID
     * 
     */
    @Import(name="connectionId")
    private @Nullable Output<Integer> connectionId;

    /**
     * @return Connection ID
     * 
     */
    public Optional<Output<Integer>> connectionId() {
        return Optional.ofNullable(this.connectionId);
    }

    /**
     * Project ID
     * 
     */
    @Import(name="projectId")
    private @Nullable Output<Integer> projectId;

    /**
     * @return Project ID
     * 
     */
    public Optional<Output<Integer>> projectId() {
        return Optional.ofNullable(this.projectId);
    }

    private ProjectConnectionState() {}

    private ProjectConnectionState(ProjectConnectionState $) {
        this.connectionId = $.connectionId;
        this.projectId = $.projectId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProjectConnectionState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProjectConnectionState $;

        public Builder() {
            $ = new ProjectConnectionState();
        }

        public Builder(ProjectConnectionState defaults) {
            $ = new ProjectConnectionState(Objects.requireNonNull(defaults));
        }

        /**
         * @param connectionId Connection ID
         * 
         * @return builder
         * 
         */
        public Builder connectionId(@Nullable Output<Integer> connectionId) {
            $.connectionId = connectionId;
            return this;
        }

        /**
         * @param connectionId Connection ID
         * 
         * @return builder
         * 
         */
        public Builder connectionId(Integer connectionId) {
            return connectionId(Output.of(connectionId));
        }

        /**
         * @param projectId Project ID
         * 
         * @return builder
         * 
         */
        public Builder projectId(@Nullable Output<Integer> projectId) {
            $.projectId = projectId;
            return this;
        }

        /**
         * @param projectId Project ID
         * 
         * @return builder
         * 
         */
        public Builder projectId(Integer projectId) {
            return projectId(Output.of(projectId));
        }

        public ProjectConnectionState build() {
            return $;
        }
    }

}
