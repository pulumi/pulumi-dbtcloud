// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dbtcloud.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetStarburstCredentialResult {
    /**
     * @return Credential ID
     * 
     */
    private Integer credentialId;
    /**
     * @return The catalog to connect to
     * 
     */
    private String database;
    /**
     * @return The ID of this resource. Contains the project ID and the credential ID.
     * 
     */
    private String id;
    /**
     * @return Project ID
     * 
     */
    private Integer projectId;
    /**
     * @return The schema where to create models
     * 
     */
    private String schema;

    private GetStarburstCredentialResult() {}
    /**
     * @return Credential ID
     * 
     */
    public Integer credentialId() {
        return this.credentialId;
    }
    /**
     * @return The catalog to connect to
     * 
     */
    public String database() {
        return this.database;
    }
    /**
     * @return The ID of this resource. Contains the project ID and the credential ID.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Project ID
     * 
     */
    public Integer projectId() {
        return this.projectId;
    }
    /**
     * @return The schema where to create models
     * 
     */
    public String schema() {
        return this.schema;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetStarburstCredentialResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer credentialId;
        private String database;
        private String id;
        private Integer projectId;
        private String schema;
        public Builder() {}
        public Builder(GetStarburstCredentialResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.credentialId = defaults.credentialId;
    	      this.database = defaults.database;
    	      this.id = defaults.id;
    	      this.projectId = defaults.projectId;
    	      this.schema = defaults.schema;
        }

        @CustomType.Setter
        public Builder credentialId(Integer credentialId) {
            if (credentialId == null) {
              throw new MissingRequiredPropertyException("GetStarburstCredentialResult", "credentialId");
            }
            this.credentialId = credentialId;
            return this;
        }
        @CustomType.Setter
        public Builder database(String database) {
            if (database == null) {
              throw new MissingRequiredPropertyException("GetStarburstCredentialResult", "database");
            }
            this.database = database;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetStarburstCredentialResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder projectId(Integer projectId) {
            if (projectId == null) {
              throw new MissingRequiredPropertyException("GetStarburstCredentialResult", "projectId");
            }
            this.projectId = projectId;
            return this;
        }
        @CustomType.Setter
        public Builder schema(String schema) {
            if (schema == null) {
              throw new MissingRequiredPropertyException("GetStarburstCredentialResult", "schema");
            }
            this.schema = schema;
            return this;
        }
        public GetStarburstCredentialResult build() {
            final var _resultValue = new GetStarburstCredentialResult();
            _resultValue.credentialId = credentialId;
            _resultValue.database = database;
            _resultValue.id = id;
            _resultValue.projectId = projectId;
            _resultValue.schema = schema;
            return _resultValue;
        }
    }
}
