// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dbtcloud.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetRunsFilterArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetRunsFilterArgs Empty = new GetRunsFilterArgs();

    /**
     * The ID of the environment
     * 
     */
    @Import(name="environmentId")
    private @Nullable Output<Integer> environmentId;

    /**
     * @return The ID of the environment
     * 
     */
    public Optional<Output<Integer>> environmentId() {
        return Optional.ofNullable(this.environmentId);
    }

    /**
     * The ID of the job definition
     * 
     */
    @Import(name="jobDefinitionId")
    private @Nullable Output<Integer> jobDefinitionId;

    /**
     * @return The ID of the job definition
     * 
     */
    public Optional<Output<Integer>> jobDefinitionId() {
        return Optional.ofNullable(this.jobDefinitionId);
    }

    /**
     * The limit of the runs
     * 
     */
    @Import(name="limit")
    private @Nullable Output<Integer> limit;

    /**
     * @return The limit of the runs
     * 
     */
    public Optional<Output<Integer>> limit() {
        return Optional.ofNullable(this.limit);
    }

    /**
     * The ID of the project
     * 
     */
    @Import(name="projectId")
    private @Nullable Output<Integer> projectId;

    /**
     * @return The ID of the project
     * 
     */
    public Optional<Output<Integer>> projectId() {
        return Optional.ofNullable(this.projectId);
    }

    /**
     * The ID of the pull request
     * 
     */
    @Import(name="pullRequestId")
    private @Nullable Output<Integer> pullRequestId;

    /**
     * @return The ID of the pull request
     * 
     */
    public Optional<Output<Integer>> pullRequestId() {
        return Optional.ofNullable(this.pullRequestId);
    }

    /**
     * The status of the run
     * 
     */
    @Import(name="status")
    private @Nullable Output<Integer> status;

    /**
     * @return The status of the run
     * 
     */
    public Optional<Output<Integer>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * The status of the run
     * 
     */
    @Import(name="statusIn")
    private @Nullable Output<String> statusIn;

    /**
     * @return The status of the run
     * 
     */
    public Optional<Output<String>> statusIn() {
        return Optional.ofNullable(this.statusIn);
    }

    /**
     * The ID of the trigger
     * 
     */
    @Import(name="triggerId")
    private @Nullable Output<Integer> triggerId;

    /**
     * @return The ID of the trigger
     * 
     */
    public Optional<Output<Integer>> triggerId() {
        return Optional.ofNullable(this.triggerId);
    }

    private GetRunsFilterArgs() {}

    private GetRunsFilterArgs(GetRunsFilterArgs $) {
        this.environmentId = $.environmentId;
        this.jobDefinitionId = $.jobDefinitionId;
        this.limit = $.limit;
        this.projectId = $.projectId;
        this.pullRequestId = $.pullRequestId;
        this.status = $.status;
        this.statusIn = $.statusIn;
        this.triggerId = $.triggerId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetRunsFilterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetRunsFilterArgs $;

        public Builder() {
            $ = new GetRunsFilterArgs();
        }

        public Builder(GetRunsFilterArgs defaults) {
            $ = new GetRunsFilterArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param environmentId The ID of the environment
         * 
         * @return builder
         * 
         */
        public Builder environmentId(@Nullable Output<Integer> environmentId) {
            $.environmentId = environmentId;
            return this;
        }

        /**
         * @param environmentId The ID of the environment
         * 
         * @return builder
         * 
         */
        public Builder environmentId(Integer environmentId) {
            return environmentId(Output.of(environmentId));
        }

        /**
         * @param jobDefinitionId The ID of the job definition
         * 
         * @return builder
         * 
         */
        public Builder jobDefinitionId(@Nullable Output<Integer> jobDefinitionId) {
            $.jobDefinitionId = jobDefinitionId;
            return this;
        }

        /**
         * @param jobDefinitionId The ID of the job definition
         * 
         * @return builder
         * 
         */
        public Builder jobDefinitionId(Integer jobDefinitionId) {
            return jobDefinitionId(Output.of(jobDefinitionId));
        }

        /**
         * @param limit The limit of the runs
         * 
         * @return builder
         * 
         */
        public Builder limit(@Nullable Output<Integer> limit) {
            $.limit = limit;
            return this;
        }

        /**
         * @param limit The limit of the runs
         * 
         * @return builder
         * 
         */
        public Builder limit(Integer limit) {
            return limit(Output.of(limit));
        }

        /**
         * @param projectId The ID of the project
         * 
         * @return builder
         * 
         */
        public Builder projectId(@Nullable Output<Integer> projectId) {
            $.projectId = projectId;
            return this;
        }

        /**
         * @param projectId The ID of the project
         * 
         * @return builder
         * 
         */
        public Builder projectId(Integer projectId) {
            return projectId(Output.of(projectId));
        }

        /**
         * @param pullRequestId The ID of the pull request
         * 
         * @return builder
         * 
         */
        public Builder pullRequestId(@Nullable Output<Integer> pullRequestId) {
            $.pullRequestId = pullRequestId;
            return this;
        }

        /**
         * @param pullRequestId The ID of the pull request
         * 
         * @return builder
         * 
         */
        public Builder pullRequestId(Integer pullRequestId) {
            return pullRequestId(Output.of(pullRequestId));
        }

        /**
         * @param status The status of the run
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<Integer> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status The status of the run
         * 
         * @return builder
         * 
         */
        public Builder status(Integer status) {
            return status(Output.of(status));
        }

        /**
         * @param statusIn The status of the run
         * 
         * @return builder
         * 
         */
        public Builder statusIn(@Nullable Output<String> statusIn) {
            $.statusIn = statusIn;
            return this;
        }

        /**
         * @param statusIn The status of the run
         * 
         * @return builder
         * 
         */
        public Builder statusIn(String statusIn) {
            return statusIn(Output.of(statusIn));
        }

        /**
         * @param triggerId The ID of the trigger
         * 
         * @return builder
         * 
         */
        public Builder triggerId(@Nullable Output<Integer> triggerId) {
            $.triggerId = triggerId;
            return this;
        }

        /**
         * @param triggerId The ID of the trigger
         * 
         * @return builder
         * 
         */
        public Builder triggerId(Integer triggerId) {
            return triggerId(Output.of(triggerId));
        }

        public GetRunsFilterArgs build() {
            return $;
        }
    }

}
