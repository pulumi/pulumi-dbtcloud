// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dbtcloud.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.util.Objects;


public final class GetExtendedAttributesPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetExtendedAttributesPlainArgs Empty = new GetExtendedAttributesPlainArgs();

    /**
     * ID of the extended attributes
     * 
     */
    @Import(name="extendedAttributesId", required=true)
    private Integer extendedAttributesId;

    /**
     * @return ID of the extended attributes
     * 
     */
    public Integer extendedAttributesId() {
        return this.extendedAttributesId;
    }

    /**
     * Project ID the extended attributes refers to
     * 
     */
    @Import(name="projectId", required=true)
    private Integer projectId;

    /**
     * @return Project ID the extended attributes refers to
     * 
     */
    public Integer projectId() {
        return this.projectId;
    }

    private GetExtendedAttributesPlainArgs() {}

    private GetExtendedAttributesPlainArgs(GetExtendedAttributesPlainArgs $) {
        this.extendedAttributesId = $.extendedAttributesId;
        this.projectId = $.projectId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetExtendedAttributesPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetExtendedAttributesPlainArgs $;

        public Builder() {
            $ = new GetExtendedAttributesPlainArgs();
        }

        public Builder(GetExtendedAttributesPlainArgs defaults) {
            $ = new GetExtendedAttributesPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param extendedAttributesId ID of the extended attributes
         * 
         * @return builder
         * 
         */
        public Builder extendedAttributesId(Integer extendedAttributesId) {
            $.extendedAttributesId = extendedAttributesId;
            return this;
        }

        /**
         * @param projectId Project ID the extended attributes refers to
         * 
         * @return builder
         * 
         */
        public Builder projectId(Integer projectId) {
            $.projectId = projectId;
            return this;
        }

        public GetExtendedAttributesPlainArgs build() {
            if ($.extendedAttributesId == null) {
                throw new MissingRequiredPropertyException("GetExtendedAttributesPlainArgs", "extendedAttributesId");
            }
            if ($.projectId == null) {
                throw new MissingRequiredPropertyException("GetExtendedAttributesPlainArgs", "projectId");
            }
            return $;
        }
    }

}
