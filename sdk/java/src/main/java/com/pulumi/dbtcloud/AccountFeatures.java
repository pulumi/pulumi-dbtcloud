// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dbtcloud;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.dbtcloud.AccountFeaturesArgs;
import com.pulumi.dbtcloud.Utilities;
import com.pulumi.dbtcloud.inputs.AccountFeaturesState;
import java.lang.Boolean;
import javax.annotation.Nullable;

/**
 * Manages dbt Cloud global features at the account level, like Advanced CI. The same feature should not be configured in different resources to avoid conflicts.
 * 
 * When destroying the resource or removing the value for an attribute, the features status will not be changed. Deactivating features will require applying them wih the value set to `false`.
 * 
 */
@ResourceType(type="dbtcloud:index/accountFeatures:AccountFeatures")
public class AccountFeatures extends com.pulumi.resources.CustomResource {
    /**
     * Whether advanced CI is enabled.
     * 
     */
    @Export(name="advancedCi", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> advancedCi;

    /**
     * @return Whether advanced CI is enabled.
     * 
     */
    public Output<Boolean> advancedCi() {
        return this.advancedCi;
    }
    /**
     * Whether AI features are enabled.
     * 
     */
    @Export(name="aiFeatures", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> aiFeatures;

    /**
     * @return Whether AI features are enabled.
     * 
     */
    public Output<Boolean> aiFeatures() {
        return this.aiFeatures;
    }
    /**
     * Whether partial parsing is enabled.
     * 
     */
    @Export(name="partialParsing", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> partialParsing;

    /**
     * @return Whether partial parsing is enabled.
     * 
     */
    public Output<Boolean> partialParsing() {
        return this.partialParsing;
    }
    /**
     * Whether repository caching is enabled.
     * 
     */
    @Export(name="repoCaching", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> repoCaching;

    /**
     * @return Whether repository caching is enabled.
     * 
     */
    public Output<Boolean> repoCaching() {
        return this.repoCaching;
    }
    /**
     * Whether warehouse cost visibility is enabled.
     * 
     */
    @Export(name="warehouseCostVisibility", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> warehouseCostVisibility;

    /**
     * @return Whether warehouse cost visibility is enabled.
     * 
     */
    public Output<Boolean> warehouseCostVisibility() {
        return this.warehouseCostVisibility;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public AccountFeatures(java.lang.String name) {
        this(name, AccountFeaturesArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public AccountFeatures(java.lang.String name, @Nullable AccountFeaturesArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public AccountFeatures(java.lang.String name, @Nullable AccountFeaturesArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("dbtcloud:index/accountFeatures:AccountFeatures", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private AccountFeatures(java.lang.String name, Output<java.lang.String> id, @Nullable AccountFeaturesState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("dbtcloud:index/accountFeatures:AccountFeatures", name, state, makeResourceOptions(options, id), false);
    }

    private static AccountFeaturesArgs makeArgs(@Nullable AccountFeaturesArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? AccountFeaturesArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .pluginDownloadURL("github://api.github.com/pulumi/pulumi-dbtcloud")
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static AccountFeatures get(java.lang.String name, Output<java.lang.String> id, @Nullable AccountFeaturesState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new AccountFeatures(name, id, state, options);
    }
}
