// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dbtcloud.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetWebhookArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetWebhookArgs Empty = new GetWebhookArgs();

    /**
     * Webhooks ID
     * 
     */
    @Import(name="webhookId", required=true)
    private Output<String> webhookId;

    /**
     * @return Webhooks ID
     * 
     */
    public Output<String> webhookId() {
        return this.webhookId;
    }

    private GetWebhookArgs() {}

    private GetWebhookArgs(GetWebhookArgs $) {
        this.webhookId = $.webhookId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetWebhookArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetWebhookArgs $;

        public Builder() {
            $ = new GetWebhookArgs();
        }

        public Builder(GetWebhookArgs defaults) {
            $ = new GetWebhookArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param webhookId Webhooks ID
         * 
         * @return builder
         * 
         */
        public Builder webhookId(Output<String> webhookId) {
            $.webhookId = webhookId;
            return this;
        }

        /**
         * @param webhookId Webhooks ID
         * 
         * @return builder
         * 
         */
        public Builder webhookId(String webhookId) {
            return webhookId(Output.of(webhookId));
        }

        public GetWebhookArgs build() {
            if ($.webhookId == null) {
                throw new MissingRequiredPropertyException("GetWebhookArgs", "webhookId");
            }
            return $;
        }
    }

}
