// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dbtcloud.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EnvironmentVariableState extends com.pulumi.resources.ResourceArgs {

    public static final EnvironmentVariableState Empty = new EnvironmentVariableState();

    /**
     * Map from environment names to respective variable value, a special key `project` should be set for the project default variable value. This field is not set as sensitive so take precautions when using secret environment variables.
     * 
     */
    @Import(name="environmentValues")
    private @Nullable Output<Map<String,String>> environmentValues;

    /**
     * @return Map from environment names to respective variable value, a special key `project` should be set for the project default variable value. This field is not set as sensitive so take precautions when using secret environment variables.
     * 
     */
    public Optional<Output<Map<String,String>>> environmentValues() {
        return Optional.ofNullable(this.environmentValues);
    }

    /**
     * Name for the variable, must be unique within a project, must be prefixed with &#39;DBT_&#39;
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name for the variable, must be unique within a project, must be prefixed with &#39;DBT_&#39;
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Project for the variable to be created in
     * 
     */
    @Import(name="projectId")
    private @Nullable Output<Integer> projectId;

    /**
     * @return Project for the variable to be created in
     * 
     */
    public Optional<Output<Integer>> projectId() {
        return Optional.ofNullable(this.projectId);
    }

    private EnvironmentVariableState() {}

    private EnvironmentVariableState(EnvironmentVariableState $) {
        this.environmentValues = $.environmentValues;
        this.name = $.name;
        this.projectId = $.projectId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EnvironmentVariableState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EnvironmentVariableState $;

        public Builder() {
            $ = new EnvironmentVariableState();
        }

        public Builder(EnvironmentVariableState defaults) {
            $ = new EnvironmentVariableState(Objects.requireNonNull(defaults));
        }

        /**
         * @param environmentValues Map from environment names to respective variable value, a special key `project` should be set for the project default variable value. This field is not set as sensitive so take precautions when using secret environment variables.
         * 
         * @return builder
         * 
         */
        public Builder environmentValues(@Nullable Output<Map<String,String>> environmentValues) {
            $.environmentValues = environmentValues;
            return this;
        }

        /**
         * @param environmentValues Map from environment names to respective variable value, a special key `project` should be set for the project default variable value. This field is not set as sensitive so take precautions when using secret environment variables.
         * 
         * @return builder
         * 
         */
        public Builder environmentValues(Map<String,String> environmentValues) {
            return environmentValues(Output.of(environmentValues));
        }

        /**
         * @param name Name for the variable, must be unique within a project, must be prefixed with &#39;DBT_&#39;
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name for the variable, must be unique within a project, must be prefixed with &#39;DBT_&#39;
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param projectId Project for the variable to be created in
         * 
         * @return builder
         * 
         */
        public Builder projectId(@Nullable Output<Integer> projectId) {
            $.projectId = projectId;
            return this;
        }

        /**
         * @param projectId Project for the variable to be created in
         * 
         * @return builder
         * 
         */
        public Builder projectId(Integer projectId) {
            return projectId(Output.of(projectId));
        }

        public EnvironmentVariableState build() {
            return $;
        }
    }

}
