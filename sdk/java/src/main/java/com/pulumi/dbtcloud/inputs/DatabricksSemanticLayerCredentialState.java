// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dbtcloud.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.dbtcloud.inputs.DatabricksSemanticLayerCredentialConfigurationArgs;
import com.pulumi.dbtcloud.inputs.DatabricksSemanticLayerCredentialCredentialArgs;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DatabricksSemanticLayerCredentialState extends com.pulumi.resources.ResourceArgs {

    public static final DatabricksSemanticLayerCredentialState Empty = new DatabricksSemanticLayerCredentialState();

    /**
     * Semantic Layer credential configuration details.
     * 
     */
    @Import(name="configuration")
    private @Nullable Output<DatabricksSemanticLayerCredentialConfigurationArgs> configuration;

    /**
     * @return Semantic Layer credential configuration details.
     * 
     */
    public Optional<Output<DatabricksSemanticLayerCredentialConfigurationArgs>> configuration() {
        return Optional.ofNullable(this.configuration);
    }

    /**
     * Databricks credential details, but used in the context of the Semantic Layer.
     * 
     */
    @Import(name="credential")
    private @Nullable Output<DatabricksSemanticLayerCredentialCredentialArgs> credential;

    /**
     * @return Databricks credential details, but used in the context of the Semantic Layer.
     * 
     */
    public Optional<Output<DatabricksSemanticLayerCredentialCredentialArgs>> credential() {
        return Optional.ofNullable(this.credential);
    }

    private DatabricksSemanticLayerCredentialState() {}

    private DatabricksSemanticLayerCredentialState(DatabricksSemanticLayerCredentialState $) {
        this.configuration = $.configuration;
        this.credential = $.credential;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DatabricksSemanticLayerCredentialState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DatabricksSemanticLayerCredentialState $;

        public Builder() {
            $ = new DatabricksSemanticLayerCredentialState();
        }

        public Builder(DatabricksSemanticLayerCredentialState defaults) {
            $ = new DatabricksSemanticLayerCredentialState(Objects.requireNonNull(defaults));
        }

        /**
         * @param configuration Semantic Layer credential configuration details.
         * 
         * @return builder
         * 
         */
        public Builder configuration(@Nullable Output<DatabricksSemanticLayerCredentialConfigurationArgs> configuration) {
            $.configuration = configuration;
            return this;
        }

        /**
         * @param configuration Semantic Layer credential configuration details.
         * 
         * @return builder
         * 
         */
        public Builder configuration(DatabricksSemanticLayerCredentialConfigurationArgs configuration) {
            return configuration(Output.of(configuration));
        }

        /**
         * @param credential Databricks credential details, but used in the context of the Semantic Layer.
         * 
         * @return builder
         * 
         */
        public Builder credential(@Nullable Output<DatabricksSemanticLayerCredentialCredentialArgs> credential) {
            $.credential = credential;
            return this;
        }

        /**
         * @param credential Databricks credential details, but used in the context of the Semantic Layer.
         * 
         * @return builder
         * 
         */
        public Builder credential(DatabricksSemanticLayerCredentialCredentialArgs credential) {
            return credential(Output.of(credential));
        }

        public DatabricksSemanticLayerCredentialState build() {
            return $;
        }
    }

}
