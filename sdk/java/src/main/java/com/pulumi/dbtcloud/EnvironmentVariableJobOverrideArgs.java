// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dbtcloud;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EnvironmentVariableJobOverrideArgs extends com.pulumi.resources.ResourceArgs {

    public static final EnvironmentVariableJobOverrideArgs Empty = new EnvironmentVariableJobOverrideArgs();

    /**
     * The job ID for which the environment variable is being overridden
     * 
     */
    @Import(name="jobDefinitionId", required=true)
    private Output<Integer> jobDefinitionId;

    /**
     * @return The job ID for which the environment variable is being overridden
     * 
     */
    public Output<Integer> jobDefinitionId() {
        return this.jobDefinitionId;
    }

    /**
     * The environment variable name to override
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The environment variable name to override
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Project ID to create the environment variable job override in
     * 
     */
    @Import(name="projectId", required=true)
    private Output<Integer> projectId;

    /**
     * @return Project ID to create the environment variable job override in
     * 
     */
    public Output<Integer> projectId() {
        return this.projectId;
    }

    /**
     * The value for the override of the environment variable
     * 
     */
    @Import(name="rawValue", required=true)
    private Output<String> rawValue;

    /**
     * @return The value for the override of the environment variable
     * 
     */
    public Output<String> rawValue() {
        return this.rawValue;
    }

    private EnvironmentVariableJobOverrideArgs() {}

    private EnvironmentVariableJobOverrideArgs(EnvironmentVariableJobOverrideArgs $) {
        this.jobDefinitionId = $.jobDefinitionId;
        this.name = $.name;
        this.projectId = $.projectId;
        this.rawValue = $.rawValue;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EnvironmentVariableJobOverrideArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EnvironmentVariableJobOverrideArgs $;

        public Builder() {
            $ = new EnvironmentVariableJobOverrideArgs();
        }

        public Builder(EnvironmentVariableJobOverrideArgs defaults) {
            $ = new EnvironmentVariableJobOverrideArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param jobDefinitionId The job ID for which the environment variable is being overridden
         * 
         * @return builder
         * 
         */
        public Builder jobDefinitionId(Output<Integer> jobDefinitionId) {
            $.jobDefinitionId = jobDefinitionId;
            return this;
        }

        /**
         * @param jobDefinitionId The job ID for which the environment variable is being overridden
         * 
         * @return builder
         * 
         */
        public Builder jobDefinitionId(Integer jobDefinitionId) {
            return jobDefinitionId(Output.of(jobDefinitionId));
        }

        /**
         * @param name The environment variable name to override
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The environment variable name to override
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param projectId Project ID to create the environment variable job override in
         * 
         * @return builder
         * 
         */
        public Builder projectId(Output<Integer> projectId) {
            $.projectId = projectId;
            return this;
        }

        /**
         * @param projectId Project ID to create the environment variable job override in
         * 
         * @return builder
         * 
         */
        public Builder projectId(Integer projectId) {
            return projectId(Output.of(projectId));
        }

        /**
         * @param rawValue The value for the override of the environment variable
         * 
         * @return builder
         * 
         */
        public Builder rawValue(Output<String> rawValue) {
            $.rawValue = rawValue;
            return this;
        }

        /**
         * @param rawValue The value for the override of the environment variable
         * 
         * @return builder
         * 
         */
        public Builder rawValue(String rawValue) {
            return rawValue(Output.of(rawValue));
        }

        public EnvironmentVariableJobOverrideArgs build() {
            if ($.jobDefinitionId == null) {
                throw new MissingRequiredPropertyException("EnvironmentVariableJobOverrideArgs", "jobDefinitionId");
            }
            if ($.projectId == null) {
                throw new MissingRequiredPropertyException("EnvironmentVariableJobOverrideArgs", "projectId");
            }
            if ($.rawValue == null) {
                throw new MissingRequiredPropertyException("EnvironmentVariableJobOverrideArgs", "rawValue");
            }
            return $;
        }
    }

}
