// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dbtcloud.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DatabricksSemanticLayerCredentialCredential {
    /**
     * @return The type of the adapter (databricks or spark). Optional only when semantic*layer*credential is set to true; otherwise, this field is required.
     * 
     */
    private @Nullable String adapterType;
    /**
     * @return The catalog where to create models (only for the databricks adapter)
     * 
     */
    private @Nullable String catalog;
    /**
     * @return The system Databricks credential ID
     * 
     */
    private @Nullable Integer credentialId;
    /**
     * @return The ID of this resource. Contains the project ID and the credential ID.
     * 
     */
    private @Nullable String id;
    /**
     * @return Project ID to create the Databricks credential in
     * 
     */
    private Integer projectId;
    /**
     * @return The schema where to create models. Optional only when semantic*layer*credential is set to true; otherwise, this field is required.
     * 
     */
    private @Nullable String schema;
    /**
     * @return This field indicates that the credential is used as part of the Semantic Layer configuration. It is used to create a Databricks credential for the Semantic Layer.
     * 
     */
    private @Nullable Boolean semanticLayerCredential;
    /**
     * @return Target name
     * 
     * @deprecated
     * This field is deprecated at the environment level (it was never possible to set it in the UI) and will be removed in a future release. Please remove it and set the target name at the job level or leverage environment variables.
     * 
     */
    @Deprecated /* This field is deprecated at the environment level (it was never possible to set it in the UI) and will be removed in a future release. Please remove it and set the target name at the job level or leverage environment variables. */
    private @Nullable String targetName;
    /**
     * @return Token for Databricks user
     * 
     */
    private String token;

    private DatabricksSemanticLayerCredentialCredential() {}
    /**
     * @return The type of the adapter (databricks or spark). Optional only when semantic*layer*credential is set to true; otherwise, this field is required.
     * 
     */
    public Optional<String> adapterType() {
        return Optional.ofNullable(this.adapterType);
    }
    /**
     * @return The catalog where to create models (only for the databricks adapter)
     * 
     */
    public Optional<String> catalog() {
        return Optional.ofNullable(this.catalog);
    }
    /**
     * @return The system Databricks credential ID
     * 
     */
    public Optional<Integer> credentialId() {
        return Optional.ofNullable(this.credentialId);
    }
    /**
     * @return The ID of this resource. Contains the project ID and the credential ID.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return Project ID to create the Databricks credential in
     * 
     */
    public Integer projectId() {
        return this.projectId;
    }
    /**
     * @return The schema where to create models. Optional only when semantic*layer*credential is set to true; otherwise, this field is required.
     * 
     */
    public Optional<String> schema() {
        return Optional.ofNullable(this.schema);
    }
    /**
     * @return This field indicates that the credential is used as part of the Semantic Layer configuration. It is used to create a Databricks credential for the Semantic Layer.
     * 
     */
    public Optional<Boolean> semanticLayerCredential() {
        return Optional.ofNullable(this.semanticLayerCredential);
    }
    /**
     * @return Target name
     * 
     * @deprecated
     * This field is deprecated at the environment level (it was never possible to set it in the UI) and will be removed in a future release. Please remove it and set the target name at the job level or leverage environment variables.
     * 
     */
    @Deprecated /* This field is deprecated at the environment level (it was never possible to set it in the UI) and will be removed in a future release. Please remove it and set the target name at the job level or leverage environment variables. */
    public Optional<String> targetName() {
        return Optional.ofNullable(this.targetName);
    }
    /**
     * @return Token for Databricks user
     * 
     */
    public String token() {
        return this.token;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DatabricksSemanticLayerCredentialCredential defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String adapterType;
        private @Nullable String catalog;
        private @Nullable Integer credentialId;
        private @Nullable String id;
        private Integer projectId;
        private @Nullable String schema;
        private @Nullable Boolean semanticLayerCredential;
        private @Nullable String targetName;
        private String token;
        public Builder() {}
        public Builder(DatabricksSemanticLayerCredentialCredential defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.adapterType = defaults.adapterType;
    	      this.catalog = defaults.catalog;
    	      this.credentialId = defaults.credentialId;
    	      this.id = defaults.id;
    	      this.projectId = defaults.projectId;
    	      this.schema = defaults.schema;
    	      this.semanticLayerCredential = defaults.semanticLayerCredential;
    	      this.targetName = defaults.targetName;
    	      this.token = defaults.token;
        }

        @CustomType.Setter
        public Builder adapterType(@Nullable String adapterType) {

            this.adapterType = adapterType;
            return this;
        }
        @CustomType.Setter
        public Builder catalog(@Nullable String catalog) {

            this.catalog = catalog;
            return this;
        }
        @CustomType.Setter
        public Builder credentialId(@Nullable Integer credentialId) {

            this.credentialId = credentialId;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {

            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder projectId(Integer projectId) {
            if (projectId == null) {
              throw new MissingRequiredPropertyException("DatabricksSemanticLayerCredentialCredential", "projectId");
            }
            this.projectId = projectId;
            return this;
        }
        @CustomType.Setter
        public Builder schema(@Nullable String schema) {

            this.schema = schema;
            return this;
        }
        @CustomType.Setter
        public Builder semanticLayerCredential(@Nullable Boolean semanticLayerCredential) {

            this.semanticLayerCredential = semanticLayerCredential;
            return this;
        }
        @CustomType.Setter
        public Builder targetName(@Nullable String targetName) {

            this.targetName = targetName;
            return this;
        }
        @CustomType.Setter
        public Builder token(String token) {
            if (token == null) {
              throw new MissingRequiredPropertyException("DatabricksSemanticLayerCredentialCredential", "token");
            }
            this.token = token;
            return this;
        }
        public DatabricksSemanticLayerCredentialCredential build() {
            final var _resultValue = new DatabricksSemanticLayerCredentialCredential();
            _resultValue.adapterType = adapterType;
            _resultValue.catalog = catalog;
            _resultValue.credentialId = credentialId;
            _resultValue.id = id;
            _resultValue.projectId = projectId;
            _resultValue.schema = schema;
            _resultValue.semanticLayerCredential = semanticLayerCredential;
            _resultValue.targetName = targetName;
            _resultValue.token = token;
            return _resultValue;
        }
    }
}
