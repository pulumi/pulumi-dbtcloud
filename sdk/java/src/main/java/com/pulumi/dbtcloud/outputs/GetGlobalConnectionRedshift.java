// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dbtcloud.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.dbtcloud.outputs.GetGlobalConnectionRedshiftSshTunnel;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetGlobalConnectionRedshift {
    /**
     * @return The database name for this connection.
     * 
     */
    private String dbname;
    /**
     * @return The hostname of the data warehouse.
     * 
     */
    private String hostname;
    /**
     * @return The port to connect to for this connection. Default=5432
     * 
     */
    private Integer port;
    /**
     * @return Redshift SSH Tunnel configuration
     * 
     */
    private GetGlobalConnectionRedshiftSshTunnel sshTunnel;

    private GetGlobalConnectionRedshift() {}
    /**
     * @return The database name for this connection.
     * 
     */
    public String dbname() {
        return this.dbname;
    }
    /**
     * @return The hostname of the data warehouse.
     * 
     */
    public String hostname() {
        return this.hostname;
    }
    /**
     * @return The port to connect to for this connection. Default=5432
     * 
     */
    public Integer port() {
        return this.port;
    }
    /**
     * @return Redshift SSH Tunnel configuration
     * 
     */
    public GetGlobalConnectionRedshiftSshTunnel sshTunnel() {
        return this.sshTunnel;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetGlobalConnectionRedshift defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String dbname;
        private String hostname;
        private Integer port;
        private GetGlobalConnectionRedshiftSshTunnel sshTunnel;
        public Builder() {}
        public Builder(GetGlobalConnectionRedshift defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.dbname = defaults.dbname;
    	      this.hostname = defaults.hostname;
    	      this.port = defaults.port;
    	      this.sshTunnel = defaults.sshTunnel;
        }

        @CustomType.Setter
        public Builder dbname(String dbname) {
            if (dbname == null) {
              throw new MissingRequiredPropertyException("GetGlobalConnectionRedshift", "dbname");
            }
            this.dbname = dbname;
            return this;
        }
        @CustomType.Setter
        public Builder hostname(String hostname) {
            if (hostname == null) {
              throw new MissingRequiredPropertyException("GetGlobalConnectionRedshift", "hostname");
            }
            this.hostname = hostname;
            return this;
        }
        @CustomType.Setter
        public Builder port(Integer port) {
            if (port == null) {
              throw new MissingRequiredPropertyException("GetGlobalConnectionRedshift", "port");
            }
            this.port = port;
            return this;
        }
        @CustomType.Setter
        public Builder sshTunnel(GetGlobalConnectionRedshiftSshTunnel sshTunnel) {
            if (sshTunnel == null) {
              throw new MissingRequiredPropertyException("GetGlobalConnectionRedshift", "sshTunnel");
            }
            this.sshTunnel = sshTunnel;
            return this;
        }
        public GetGlobalConnectionRedshift build() {
            final var _resultValue = new GetGlobalConnectionRedshift();
            _resultValue.dbname = dbname;
            _resultValue.hostname = hostname;
            _resultValue.port = port;
            _resultValue.sshTunnel = sshTunnel;
            return _resultValue;
        }
    }
}
