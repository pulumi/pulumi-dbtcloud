// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dbtcloud.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetJobsJobJobCompletionTriggerConditionCondition {
    private Integer jobId;
    private Integer projectId;
    private List<String> statuses;

    private GetJobsJobJobCompletionTriggerConditionCondition() {}
    public Integer jobId() {
        return this.jobId;
    }
    public Integer projectId() {
        return this.projectId;
    }
    public List<String> statuses() {
        return this.statuses;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetJobsJobJobCompletionTriggerConditionCondition defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer jobId;
        private Integer projectId;
        private List<String> statuses;
        public Builder() {}
        public Builder(GetJobsJobJobCompletionTriggerConditionCondition defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.jobId = defaults.jobId;
    	      this.projectId = defaults.projectId;
    	      this.statuses = defaults.statuses;
        }

        @CustomType.Setter
        public Builder jobId(Integer jobId) {
            if (jobId == null) {
              throw new MissingRequiredPropertyException("GetJobsJobJobCompletionTriggerConditionCondition", "jobId");
            }
            this.jobId = jobId;
            return this;
        }
        @CustomType.Setter
        public Builder projectId(Integer projectId) {
            if (projectId == null) {
              throw new MissingRequiredPropertyException("GetJobsJobJobCompletionTriggerConditionCondition", "projectId");
            }
            this.projectId = projectId;
            return this;
        }
        @CustomType.Setter
        public Builder statuses(List<String> statuses) {
            if (statuses == null) {
              throw new MissingRequiredPropertyException("GetJobsJobJobCompletionTriggerConditionCondition", "statuses");
            }
            this.statuses = statuses;
            return this;
        }
        public Builder statuses(String... statuses) {
            return statuses(List.of(statuses));
        }
        public GetJobsJobJobCompletionTriggerConditionCondition build() {
            final var _resultValue = new GetJobsJobJobCompletionTriggerConditionCondition();
            _resultValue.jobId = jobId;
            _resultValue.projectId = projectId;
            _resultValue.statuses = statuses;
            return _resultValue;
        }
    }
}
