// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dbtcloud;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.dbtcloud.BigQueryConnectionArgs;
import com.pulumi.dbtcloud.Utilities;
import com.pulumi.dbtcloud.inputs.BigQueryConnectionState;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Resource to create BigQuery connections in dbt Cloud. Can be set to use OAuth for developers.
 * 
 * &gt; This resource is deprecated and is going to be removed in the next major release, please use the `dbtcloud.GlobalConnection` resource instead to create BigQuery connections.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.dbtcloud.BigQueryConnection;
 * import com.pulumi.dbtcloud.BigQueryConnectionArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var myConnection = new BigQueryConnection("myConnection", BigQueryConnectionArgs.builder()
 *             .projectId(dbtProject.id())
 *             .name("Project Name")
 *             .type("bigquery")
 *             .isActive(true)
 *             .gcpProjectId("my-gcp-project-id")
 *             .timeoutSeconds(100)
 *             .privateKeyId("my-private-key-id")
 *             .privateKey("ABCDEFGHIJKL")
 *             .clientEmail("my_client_email")
 *             .clientId("my_client_di")
 *             .authUri("my_auth_uri")
 *             .tokenUri("my_token_uri")
 *             .authProviderX509CertUrl("my_auth_provider_x509_cert_url")
 *             .clientX509CertUrl("my_client_x509_cert_url")
 *             .retries(3)
 *             .build());
 * 
 *         // it is also possible to set the connection to use OAuth by filling in `application_id` and `application_secret`
 *         var myConnectionWithOauth = new BigQueryConnection("myConnectionWithOauth", BigQueryConnectionArgs.builder()
 *             .projectId(dbtProject.id())
 *             .name("Project Name")
 *             .type("bigquery")
 *             .isActive(true)
 *             .gcpProjectId("my-gcp-project-id")
 *             .timeoutSeconds(100)
 *             .privateKeyId("my-private-key-id")
 *             .privateKey("ABCDEFGHIJKL")
 *             .clientEmail("my_client_email")
 *             .clientId("my_client_di")
 *             .authUri("my_auth_uri")
 *             .tokenUri("my_token_uri")
 *             .authProviderX509CertUrl("my_auth_provider_x509_cert_url")
 *             .clientX509CertUrl("my_client_x509_cert_url")
 *             .retries(3)
 *             .applicationId("oauth_application_id")
 *             .applicationSecret("oauth_secret_id")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * using  import blocks (requires Terraform &gt;= 1.5)
 * 
 * import {
 * 
 *   to = dbtcloud_bigquery_connection.my_connection
 * 
 *   id = &#34;project_id:connection_id&#34;
 * 
 * }
 * 
 * import {
 * 
 *   to = dbtcloud_bigquery_connection.my_connection
 * 
 *   id = &#34;12345:6789&#34;
 * 
 * }
 * 
 * using the older import command
 * 
 * ```sh
 * $ pulumi import dbtcloud:index/bigQueryConnection:BigQueryConnection my_connection &#34;project_id:connection_id&#34;
 * ```
 * 
 * ```sh
 * $ pulumi import dbtcloud:index/bigQueryConnection:BigQueryConnection my_connection 12345:6789
 * ```
 * 
 */
@ResourceType(type="dbtcloud:index/bigQueryConnection:BigQueryConnection")
public class BigQueryConnection extends com.pulumi.resources.CustomResource {
    /**
     * The Application ID for BQ OAuth
     * 
     */
    @Export(name="applicationId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> applicationId;

    /**
     * @return The Application ID for BQ OAuth
     * 
     */
    public Output<Optional<String>> applicationId() {
        return Codegen.optional(this.applicationId);
    }
    /**
     * The Application Secret for BQ OAuth
     * 
     */
    @Export(name="applicationSecret", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> applicationSecret;

    /**
     * @return The Application Secret for BQ OAuth
     * 
     */
    public Output<Optional<String>> applicationSecret() {
        return Codegen.optional(this.applicationSecret);
    }
    /**
     * Auth Provider X509 Cert URL for the Service Account
     * 
     */
    @Export(name="authProviderX509CertUrl", refs={String.class}, tree="[0]")
    private Output<String> authProviderX509CertUrl;

    /**
     * @return Auth Provider X509 Cert URL for the Service Account
     * 
     */
    public Output<String> authProviderX509CertUrl() {
        return this.authProviderX509CertUrl;
    }
    /**
     * Auth URI for the Service Account
     * 
     */
    @Export(name="authUri", refs={String.class}, tree="[0]")
    private Output<String> authUri;

    /**
     * @return Auth URI for the Service Account
     * 
     */
    public Output<String> authUri() {
        return this.authUri;
    }
    /**
     * Service Account email
     * 
     */
    @Export(name="clientEmail", refs={String.class}, tree="[0]")
    private Output<String> clientEmail;

    /**
     * @return Service Account email
     * 
     */
    public Output<String> clientEmail() {
        return this.clientEmail;
    }
    /**
     * Client ID of the Service Account
     * 
     */
    @Export(name="clientId", refs={String.class}, tree="[0]")
    private Output<String> clientId;

    /**
     * @return Client ID of the Service Account
     * 
     */
    public Output<String> clientId() {
        return this.clientId;
    }
    /**
     * Client X509 Cert URL for the Service Account
     * 
     */
    @Export(name="clientX509CertUrl", refs={String.class}, tree="[0]")
    private Output<String> clientX509CertUrl;

    /**
     * @return Client X509 Cert URL for the Service Account
     * 
     */
    public Output<String> clientX509CertUrl() {
        return this.clientX509CertUrl;
    }
    /**
     * Connection Identifier
     * 
     */
    @Export(name="connectionId", refs={Integer.class}, tree="[0]")
    private Output<Integer> connectionId;

    /**
     * @return Connection Identifier
     * 
     */
    public Output<Integer> connectionId() {
        return this.connectionId;
    }
    /**
     * Dataproc cluster name for PySpark workloads
     * 
     */
    @Export(name="dataprocClusterName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> dataprocClusterName;

    /**
     * @return Dataproc cluster name for PySpark workloads
     * 
     */
    public Output<Optional<String>> dataprocClusterName() {
        return Codegen.optional(this.dataprocClusterName);
    }
    /**
     * Google Cloud region for PySpark workloads on Dataproc
     * 
     */
    @Export(name="dataprocRegion", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> dataprocRegion;

    /**
     * @return Google Cloud region for PySpark workloads on Dataproc
     * 
     */
    public Output<Optional<String>> dataprocRegion() {
        return Codegen.optional(this.dataprocRegion);
    }
    /**
     * Project to bill for query execution
     * 
     */
    @Export(name="executionProject", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> executionProject;

    /**
     * @return Project to bill for query execution
     * 
     */
    public Output<Optional<String>> executionProject() {
        return Codegen.optional(this.executionProject);
    }
    /**
     * GCP project ID
     * 
     */
    @Export(name="gcpProjectId", refs={String.class}, tree="[0]")
    private Output<String> gcpProjectId;

    /**
     * @return GCP project ID
     * 
     */
    public Output<String> gcpProjectId() {
        return this.gcpProjectId;
    }
    /**
     * URI for a Google Cloud Storage bucket to host Python code executed via Datapro
     * 
     */
    @Export(name="gcsBucket", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> gcsBucket;

    /**
     * @return URI for a Google Cloud Storage bucket to host Python code executed via Datapro
     * 
     */
    public Output<Optional<String>> gcsBucket() {
        return Codegen.optional(this.gcsBucket);
    }
    /**
     * Whether the connection is active
     * 
     */
    @Export(name="isActive", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> isActive;

    /**
     * @return Whether the connection is active
     * 
     */
    public Output<Optional<Boolean>> isActive() {
        return Codegen.optional(this.isActive);
    }
    /**
     * Whether the connection is configured for OAuth or not
     * 
     */
    @Export(name="isConfiguredForOauth", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> isConfiguredForOauth;

    /**
     * @return Whether the connection is configured for OAuth or not
     * 
     */
    public Output<Boolean> isConfiguredForOauth() {
        return this.isConfiguredForOauth;
    }
    /**
     * Location to create new Datasets in
     * 
     */
    @Export(name="location", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> location;

    /**
     * @return Location to create new Datasets in
     * 
     */
    public Output<Optional<String>> location() {
        return Codegen.optional(this.location);
    }
    /**
     * Max number of bytes that can be billed for a given BigQuery query
     * 
     */
    @Export(name="maximumBytesBilled", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> maximumBytesBilled;

    /**
     * @return Max number of bytes that can be billed for a given BigQuery query
     * 
     */
    public Output<Optional<Integer>> maximumBytesBilled() {
        return Codegen.optional(this.maximumBytesBilled);
    }
    /**
     * Connection name
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Connection name
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The priority with which to execute BigQuery queries (batch or interactive)
     * 
     */
    @Export(name="priority", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> priority;

    /**
     * @return The priority with which to execute BigQuery queries (batch or interactive)
     * 
     */
    public Output<Optional<String>> priority() {
        return Codegen.optional(this.priority);
    }
    /**
     * Private key of the Service Account
     * 
     */
    @Export(name="privateKey", refs={String.class}, tree="[0]")
    private Output<String> privateKey;

    /**
     * @return Private key of the Service Account
     * 
     */
    public Output<String> privateKey() {
        return this.privateKey;
    }
    /**
     * Private key ID of the Service Account
     * 
     */
    @Export(name="privateKeyId", refs={String.class}, tree="[0]")
    private Output<String> privateKeyId;

    /**
     * @return Private key ID of the Service Account
     * 
     */
    public Output<String> privateKeyId() {
        return this.privateKeyId;
    }
    /**
     * Project ID to create the connection in
     * 
     */
    @Export(name="projectId", refs={Integer.class}, tree="[0]")
    private Output<Integer> projectId;

    /**
     * @return Project ID to create the connection in
     * 
     */
    public Output<Integer> projectId() {
        return this.projectId;
    }
    /**
     * Number of retries for queries
     * 
     */
    @Export(name="retries", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> retries;

    /**
     * @return Number of retries for queries
     * 
     */
    public Output<Optional<Integer>> retries() {
        return Codegen.optional(this.retries);
    }
    /**
     * Timeout in seconds for queries
     * 
     */
    @Export(name="timeoutSeconds", refs={Integer.class}, tree="[0]")
    private Output<Integer> timeoutSeconds;

    /**
     * @return Timeout in seconds for queries
     * 
     */
    public Output<Integer> timeoutSeconds() {
        return this.timeoutSeconds;
    }
    /**
     * Token URI for the Service Account
     * 
     */
    @Export(name="tokenUri", refs={String.class}, tree="[0]")
    private Output<String> tokenUri;

    /**
     * @return Token URI for the Service Account
     * 
     */
    public Output<String> tokenUri() {
        return this.tokenUri;
    }
    /**
     * The type of connection
     * 
     */
    @Export(name="type", refs={String.class}, tree="[0]")
    private Output<String> type;

    /**
     * @return The type of connection
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public BigQueryConnection(java.lang.String name) {
        this(name, BigQueryConnectionArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public BigQueryConnection(java.lang.String name, BigQueryConnectionArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public BigQueryConnection(java.lang.String name, BigQueryConnectionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("dbtcloud:index/bigQueryConnection:BigQueryConnection", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private BigQueryConnection(java.lang.String name, Output<java.lang.String> id, @Nullable BigQueryConnectionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("dbtcloud:index/bigQueryConnection:BigQueryConnection", name, state, makeResourceOptions(options, id), false);
    }

    private static BigQueryConnectionArgs makeArgs(BigQueryConnectionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? BigQueryConnectionArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .pluginDownloadURL("github://api.github.com/pulumi/pulumi-dbtcloud")
            .additionalSecretOutputs(List.of(
                "applicationId",
                "applicationSecret",
                "privateKey"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static BigQueryConnection get(java.lang.String name, Output<java.lang.String> id, @Nullable BigQueryConnectionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new BigQueryConnection(name, id, state, options);
    }
}
