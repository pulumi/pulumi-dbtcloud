// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dbtcloud.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.util.Objects;


public final class GetJobPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetJobPlainArgs Empty = new GetJobPlainArgs();

    /**
     * ID of the job
     * 
     */
    @Import(name="jobId", required=true)
    private Integer jobId;

    /**
     * @return ID of the job
     * 
     */
    public Integer jobId() {
        return this.jobId;
    }

    /**
     * ID of the project the job is in
     * 
     */
    @Import(name="projectId", required=true)
    private Integer projectId;

    /**
     * @return ID of the project the job is in
     * 
     */
    public Integer projectId() {
        return this.projectId;
    }

    private GetJobPlainArgs() {}

    private GetJobPlainArgs(GetJobPlainArgs $) {
        this.jobId = $.jobId;
        this.projectId = $.projectId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetJobPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetJobPlainArgs $;

        public Builder() {
            $ = new GetJobPlainArgs();
        }

        public Builder(GetJobPlainArgs defaults) {
            $ = new GetJobPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param jobId ID of the job
         * 
         * @return builder
         * 
         */
        public Builder jobId(Integer jobId) {
            $.jobId = jobId;
            return this;
        }

        /**
         * @param projectId ID of the project the job is in
         * 
         * @return builder
         * 
         */
        public Builder projectId(Integer projectId) {
            $.projectId = projectId;
            return this;
        }

        public GetJobPlainArgs build() {
            if ($.jobId == null) {
                throw new MissingRequiredPropertyException("GetJobPlainArgs", "jobId");
            }
            if ($.projectId == null) {
                throw new MissingRequiredPropertyException("GetJobPlainArgs", "projectId");
            }
            return $;
        }
    }

}
