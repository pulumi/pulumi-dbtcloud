// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.dbtcloud.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.util.Objects;

@CustomType
public final class GetJobsJobTriggers {
    /**
     * @return Whether the job runs automatically on PR creation
     * 
     */
    private Boolean gitProviderWebhook;
    /**
     * @return Whether the job runs automatically on PR creation
     * 
     */
    private Boolean githubWebhook;
    /**
     * @return Whether the job runs automatically once a PR is merged
     * 
     */
    private Boolean onMerge;
    /**
     * @return Whether the job runs on a schedule
     * 
     */
    private Boolean schedule;

    private GetJobsJobTriggers() {}
    /**
     * @return Whether the job runs automatically on PR creation
     * 
     */
    public Boolean gitProviderWebhook() {
        return this.gitProviderWebhook;
    }
    /**
     * @return Whether the job runs automatically on PR creation
     * 
     */
    public Boolean githubWebhook() {
        return this.githubWebhook;
    }
    /**
     * @return Whether the job runs automatically once a PR is merged
     * 
     */
    public Boolean onMerge() {
        return this.onMerge;
    }
    /**
     * @return Whether the job runs on a schedule
     * 
     */
    public Boolean schedule() {
        return this.schedule;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetJobsJobTriggers defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean gitProviderWebhook;
        private Boolean githubWebhook;
        private Boolean onMerge;
        private Boolean schedule;
        public Builder() {}
        public Builder(GetJobsJobTriggers defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.gitProviderWebhook = defaults.gitProviderWebhook;
    	      this.githubWebhook = defaults.githubWebhook;
    	      this.onMerge = defaults.onMerge;
    	      this.schedule = defaults.schedule;
        }

        @CustomType.Setter
        public Builder gitProviderWebhook(Boolean gitProviderWebhook) {
            if (gitProviderWebhook == null) {
              throw new MissingRequiredPropertyException("GetJobsJobTriggers", "gitProviderWebhook");
            }
            this.gitProviderWebhook = gitProviderWebhook;
            return this;
        }
        @CustomType.Setter
        public Builder githubWebhook(Boolean githubWebhook) {
            if (githubWebhook == null) {
              throw new MissingRequiredPropertyException("GetJobsJobTriggers", "githubWebhook");
            }
            this.githubWebhook = githubWebhook;
            return this;
        }
        @CustomType.Setter
        public Builder onMerge(Boolean onMerge) {
            if (onMerge == null) {
              throw new MissingRequiredPropertyException("GetJobsJobTriggers", "onMerge");
            }
            this.onMerge = onMerge;
            return this;
        }
        @CustomType.Setter
        public Builder schedule(Boolean schedule) {
            if (schedule == null) {
              throw new MissingRequiredPropertyException("GetJobsJobTriggers", "schedule");
            }
            this.schedule = schedule;
            return this;
        }
        public GetJobsJobTriggers build() {
            final var _resultValue = new GetJobsJobTriggers();
            _resultValue.gitProviderWebhook = gitProviderWebhook;
            _resultValue.githubWebhook = githubWebhook;
            _resultValue.onMerge = onMerge;
            _resultValue.schedule = schedule;
            return _resultValue;
        }
    }
}
