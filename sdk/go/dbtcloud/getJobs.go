// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dbtcloud

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-dbtcloud/sdk/go/dbtcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
func GetJobs(ctx *pulumi.Context, args *GetJobsArgs, opts ...pulumi.InvokeOption) (*GetJobsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetJobsResult
	err := ctx.Invoke("dbtcloud:index/getJobs:getJobs", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getJobs.
type GetJobsArgs struct {
	// The ID of the environment for which we want to retrieve the jobs (one of `projectId` or `environmentId` must be set)
	EnvironmentId *int `pulumi:"environmentId"`
	// The ID of the project for which we want to retrieve the jobs (one of `projectId` or `environmentId` must be set)
	ProjectId *int `pulumi:"projectId"`
}

// A collection of values returned by getJobs.
type GetJobsResult struct {
	// The ID of the environment for which we want to retrieve the jobs (one of `projectId` or `environmentId` must be set)
	EnvironmentId *int `pulumi:"environmentId"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Set of jobs with their details
	Jobs []GetJobsJob `pulumi:"jobs"`
	// The ID of the project for which we want to retrieve the jobs (one of `projectId` or `environmentId` must be set)
	ProjectId *int `pulumi:"projectId"`
}

func GetJobsOutput(ctx *pulumi.Context, args GetJobsOutputArgs, opts ...pulumi.InvokeOption) GetJobsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetJobsResult, error) {
			args := v.(GetJobsArgs)
			r, err := GetJobs(ctx, &args, opts...)
			var s GetJobsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetJobsResultOutput)
}

// A collection of arguments for invoking getJobs.
type GetJobsOutputArgs struct {
	// The ID of the environment for which we want to retrieve the jobs (one of `projectId` or `environmentId` must be set)
	EnvironmentId pulumi.IntPtrInput `pulumi:"environmentId"`
	// The ID of the project for which we want to retrieve the jobs (one of `projectId` or `environmentId` must be set)
	ProjectId pulumi.IntPtrInput `pulumi:"projectId"`
}

func (GetJobsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJobsArgs)(nil)).Elem()
}

// A collection of values returned by getJobs.
type GetJobsResultOutput struct{ *pulumi.OutputState }

func (GetJobsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetJobsResult)(nil)).Elem()
}

func (o GetJobsResultOutput) ToGetJobsResultOutput() GetJobsResultOutput {
	return o
}

func (o GetJobsResultOutput) ToGetJobsResultOutputWithContext(ctx context.Context) GetJobsResultOutput {
	return o
}

// The ID of the environment for which we want to retrieve the jobs (one of `projectId` or `environmentId` must be set)
func (o GetJobsResultOutput) EnvironmentId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetJobsResult) *int { return v.EnvironmentId }).(pulumi.IntPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetJobsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetJobsResult) string { return v.Id }).(pulumi.StringOutput)
}

// Set of jobs with their details
func (o GetJobsResultOutput) Jobs() GetJobsJobArrayOutput {
	return o.ApplyT(func(v GetJobsResult) []GetJobsJob { return v.Jobs }).(GetJobsJobArrayOutput)
}

// The ID of the project for which we want to retrieve the jobs (one of `projectId` or `environmentId` must be set)
func (o GetJobsResultOutput) ProjectId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetJobsResult) *int { return v.ProjectId }).(pulumi.IntPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetJobsResultOutput{})
}
