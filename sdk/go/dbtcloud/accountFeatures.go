// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dbtcloud

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-dbtcloud/sdk/go/dbtcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages dbt Cloud global features at the account level, like Advanced CI. The same feature should not be configured in different resources to avoid conflicts.
//
// When destroying the resource or removing the value for an attribute, the features status will not be changed. Deactivating features will require applying them wih the value set to `false`.
type AccountFeatures struct {
	pulumi.CustomResourceState

	// Whether advanced CI is enabled.
	AdvancedCi pulumi.BoolOutput `pulumi:"advancedCi"`
	// Whether AI features are enabled.
	AiFeatures pulumi.BoolOutput `pulumi:"aiFeatures"`
	// Whether partial parsing is enabled.
	PartialParsing pulumi.BoolOutput `pulumi:"partialParsing"`
	// Whether repository caching is enabled.
	RepoCaching pulumi.BoolOutput `pulumi:"repoCaching"`
	// Whether warehouse cost visibility is enabled.
	WarehouseCostVisibility pulumi.BoolOutput `pulumi:"warehouseCostVisibility"`
}

// NewAccountFeatures registers a new resource with the given unique name, arguments, and options.
func NewAccountFeatures(ctx *pulumi.Context,
	name string, args *AccountFeaturesArgs, opts ...pulumi.ResourceOption) (*AccountFeatures, error) {
	if args == nil {
		args = &AccountFeaturesArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AccountFeatures
	err := ctx.RegisterResource("dbtcloud:index/accountFeatures:AccountFeatures", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAccountFeatures gets an existing AccountFeatures resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAccountFeatures(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AccountFeaturesState, opts ...pulumi.ResourceOption) (*AccountFeatures, error) {
	var resource AccountFeatures
	err := ctx.ReadResource("dbtcloud:index/accountFeatures:AccountFeatures", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AccountFeatures resources.
type accountFeaturesState struct {
	// Whether advanced CI is enabled.
	AdvancedCi *bool `pulumi:"advancedCi"`
	// Whether AI features are enabled.
	AiFeatures *bool `pulumi:"aiFeatures"`
	// Whether partial parsing is enabled.
	PartialParsing *bool `pulumi:"partialParsing"`
	// Whether repository caching is enabled.
	RepoCaching *bool `pulumi:"repoCaching"`
	// Whether warehouse cost visibility is enabled.
	WarehouseCostVisibility *bool `pulumi:"warehouseCostVisibility"`
}

type AccountFeaturesState struct {
	// Whether advanced CI is enabled.
	AdvancedCi pulumi.BoolPtrInput
	// Whether AI features are enabled.
	AiFeatures pulumi.BoolPtrInput
	// Whether partial parsing is enabled.
	PartialParsing pulumi.BoolPtrInput
	// Whether repository caching is enabled.
	RepoCaching pulumi.BoolPtrInput
	// Whether warehouse cost visibility is enabled.
	WarehouseCostVisibility pulumi.BoolPtrInput
}

func (AccountFeaturesState) ElementType() reflect.Type {
	return reflect.TypeOf((*accountFeaturesState)(nil)).Elem()
}

type accountFeaturesArgs struct {
	// Whether advanced CI is enabled.
	AdvancedCi *bool `pulumi:"advancedCi"`
	// Whether AI features are enabled.
	AiFeatures *bool `pulumi:"aiFeatures"`
	// Whether partial parsing is enabled.
	PartialParsing *bool `pulumi:"partialParsing"`
	// Whether repository caching is enabled.
	RepoCaching *bool `pulumi:"repoCaching"`
	// Whether warehouse cost visibility is enabled.
	WarehouseCostVisibility *bool `pulumi:"warehouseCostVisibility"`
}

// The set of arguments for constructing a AccountFeatures resource.
type AccountFeaturesArgs struct {
	// Whether advanced CI is enabled.
	AdvancedCi pulumi.BoolPtrInput
	// Whether AI features are enabled.
	AiFeatures pulumi.BoolPtrInput
	// Whether partial parsing is enabled.
	PartialParsing pulumi.BoolPtrInput
	// Whether repository caching is enabled.
	RepoCaching pulumi.BoolPtrInput
	// Whether warehouse cost visibility is enabled.
	WarehouseCostVisibility pulumi.BoolPtrInput
}

func (AccountFeaturesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*accountFeaturesArgs)(nil)).Elem()
}

type AccountFeaturesInput interface {
	pulumi.Input

	ToAccountFeaturesOutput() AccountFeaturesOutput
	ToAccountFeaturesOutputWithContext(ctx context.Context) AccountFeaturesOutput
}

func (*AccountFeatures) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountFeatures)(nil)).Elem()
}

func (i *AccountFeatures) ToAccountFeaturesOutput() AccountFeaturesOutput {
	return i.ToAccountFeaturesOutputWithContext(context.Background())
}

func (i *AccountFeatures) ToAccountFeaturesOutputWithContext(ctx context.Context) AccountFeaturesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountFeaturesOutput)
}

// AccountFeaturesArrayInput is an input type that accepts AccountFeaturesArray and AccountFeaturesArrayOutput values.
// You can construct a concrete instance of `AccountFeaturesArrayInput` via:
//
//	AccountFeaturesArray{ AccountFeaturesArgs{...} }
type AccountFeaturesArrayInput interface {
	pulumi.Input

	ToAccountFeaturesArrayOutput() AccountFeaturesArrayOutput
	ToAccountFeaturesArrayOutputWithContext(context.Context) AccountFeaturesArrayOutput
}

type AccountFeaturesArray []AccountFeaturesInput

func (AccountFeaturesArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AccountFeatures)(nil)).Elem()
}

func (i AccountFeaturesArray) ToAccountFeaturesArrayOutput() AccountFeaturesArrayOutput {
	return i.ToAccountFeaturesArrayOutputWithContext(context.Background())
}

func (i AccountFeaturesArray) ToAccountFeaturesArrayOutputWithContext(ctx context.Context) AccountFeaturesArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountFeaturesArrayOutput)
}

// AccountFeaturesMapInput is an input type that accepts AccountFeaturesMap and AccountFeaturesMapOutput values.
// You can construct a concrete instance of `AccountFeaturesMapInput` via:
//
//	AccountFeaturesMap{ "key": AccountFeaturesArgs{...} }
type AccountFeaturesMapInput interface {
	pulumi.Input

	ToAccountFeaturesMapOutput() AccountFeaturesMapOutput
	ToAccountFeaturesMapOutputWithContext(context.Context) AccountFeaturesMapOutput
}

type AccountFeaturesMap map[string]AccountFeaturesInput

func (AccountFeaturesMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AccountFeatures)(nil)).Elem()
}

func (i AccountFeaturesMap) ToAccountFeaturesMapOutput() AccountFeaturesMapOutput {
	return i.ToAccountFeaturesMapOutputWithContext(context.Background())
}

func (i AccountFeaturesMap) ToAccountFeaturesMapOutputWithContext(ctx context.Context) AccountFeaturesMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AccountFeaturesMapOutput)
}

type AccountFeaturesOutput struct{ *pulumi.OutputState }

func (AccountFeaturesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AccountFeatures)(nil)).Elem()
}

func (o AccountFeaturesOutput) ToAccountFeaturesOutput() AccountFeaturesOutput {
	return o
}

func (o AccountFeaturesOutput) ToAccountFeaturesOutputWithContext(ctx context.Context) AccountFeaturesOutput {
	return o
}

// Whether advanced CI is enabled.
func (o AccountFeaturesOutput) AdvancedCi() pulumi.BoolOutput {
	return o.ApplyT(func(v *AccountFeatures) pulumi.BoolOutput { return v.AdvancedCi }).(pulumi.BoolOutput)
}

// Whether AI features are enabled.
func (o AccountFeaturesOutput) AiFeatures() pulumi.BoolOutput {
	return o.ApplyT(func(v *AccountFeatures) pulumi.BoolOutput { return v.AiFeatures }).(pulumi.BoolOutput)
}

// Whether partial parsing is enabled.
func (o AccountFeaturesOutput) PartialParsing() pulumi.BoolOutput {
	return o.ApplyT(func(v *AccountFeatures) pulumi.BoolOutput { return v.PartialParsing }).(pulumi.BoolOutput)
}

// Whether repository caching is enabled.
func (o AccountFeaturesOutput) RepoCaching() pulumi.BoolOutput {
	return o.ApplyT(func(v *AccountFeatures) pulumi.BoolOutput { return v.RepoCaching }).(pulumi.BoolOutput)
}

// Whether warehouse cost visibility is enabled.
func (o AccountFeaturesOutput) WarehouseCostVisibility() pulumi.BoolOutput {
	return o.ApplyT(func(v *AccountFeatures) pulumi.BoolOutput { return v.WarehouseCostVisibility }).(pulumi.BoolOutput)
}

type AccountFeaturesArrayOutput struct{ *pulumi.OutputState }

func (AccountFeaturesArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AccountFeatures)(nil)).Elem()
}

func (o AccountFeaturesArrayOutput) ToAccountFeaturesArrayOutput() AccountFeaturesArrayOutput {
	return o
}

func (o AccountFeaturesArrayOutput) ToAccountFeaturesArrayOutputWithContext(ctx context.Context) AccountFeaturesArrayOutput {
	return o
}

func (o AccountFeaturesArrayOutput) Index(i pulumi.IntInput) AccountFeaturesOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AccountFeatures {
		return vs[0].([]*AccountFeatures)[vs[1].(int)]
	}).(AccountFeaturesOutput)
}

type AccountFeaturesMapOutput struct{ *pulumi.OutputState }

func (AccountFeaturesMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AccountFeatures)(nil)).Elem()
}

func (o AccountFeaturesMapOutput) ToAccountFeaturesMapOutput() AccountFeaturesMapOutput {
	return o
}

func (o AccountFeaturesMapOutput) ToAccountFeaturesMapOutputWithContext(ctx context.Context) AccountFeaturesMapOutput {
	return o
}

func (o AccountFeaturesMapOutput) MapIndex(k pulumi.StringInput) AccountFeaturesOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AccountFeatures {
		return vs[0].(map[string]*AccountFeatures)[vs[1].(string)]
	}).(AccountFeaturesOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AccountFeaturesInput)(nil)).Elem(), &AccountFeatures{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountFeaturesArrayInput)(nil)).Elem(), AccountFeaturesArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AccountFeaturesMapInput)(nil)).Elem(), AccountFeaturesMap{})
	pulumi.RegisterOutputType(AccountFeaturesOutput{})
	pulumi.RegisterOutputType(AccountFeaturesArrayOutput{})
	pulumi.RegisterOutputType(AccountFeaturesMapOutput{})
}
