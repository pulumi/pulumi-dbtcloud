// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dbtcloud

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-dbtcloud/sdk/go/dbtcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-dbtcloud/sdk/go/dbtcloud"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := dbtcloud.LookupGlobalConnection(ctx, &dbtcloud.LookupGlobalConnectionArgs{
//				Id: 1234,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupGlobalConnection(ctx *pulumi.Context, args *LookupGlobalConnectionArgs, opts ...pulumi.InvokeOption) (*LookupGlobalConnectionResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupGlobalConnectionResult
	err := ctx.Invoke("dbtcloud:index/getGlobalConnection:getGlobalConnection", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getGlobalConnection.
type LookupGlobalConnectionArgs struct {
	// Connection Identifier
	Id int `pulumi:"id"`
}

// A collection of values returned by getGlobalConnection.
type LookupGlobalConnectionResult struct {
	// Version of the adapter
	AdapterVersion string `pulumi:"adapterVersion"`
	// Apache Spark connection configuration.
	ApacheSpark GetGlobalConnectionApacheSpark `pulumi:"apacheSpark"`
	// Athena connection configuration.
	Athena   GetGlobalConnectionAthena   `pulumi:"athena"`
	Bigquery GetGlobalConnectionBigquery `pulumi:"bigquery"`
	// Databricks connection configuration
	Databricks GetGlobalConnectionDatabricks `pulumi:"databricks"`
	// Microsoft Fabric connection configuration.
	Fabric GetGlobalConnectionFabric `pulumi:"fabric"`
	// Connection Identifier
	Id int `pulumi:"id"`
	// Whether the connection can use an SSH tunnel
	IsSshTunnelEnabled bool `pulumi:"isSshTunnelEnabled"`
	// Connection name
	Name                 string `pulumi:"name"`
	OauthConfigurationId int    `pulumi:"oauthConfigurationId"`
	// PostgreSQL connection configuration.
	Postgres GetGlobalConnectionPostgres `pulumi:"postgres"`
	// Private Link Endpoint ID. This ID can be found using the `privatelinkEndpoint` data source
	PrivateLinkEndpointId string `pulumi:"privateLinkEndpointId"`
	// Redshift connection configuration
	Redshift GetGlobalConnectionRedshift `pulumi:"redshift"`
	// Snowflake connection configuration
	Snowflake GetGlobalConnectionSnowflake `pulumi:"snowflake"`
	// Starburst/Trino connection configuration.
	Starburst GetGlobalConnectionStarburst `pulumi:"starburst"`
	// Azure Synapse Analytics connection configuration.
	Synapse GetGlobalConnectionSynapse `pulumi:"synapse"`
}

func LookupGlobalConnectionOutput(ctx *pulumi.Context, args LookupGlobalConnectionOutputArgs, opts ...pulumi.InvokeOption) LookupGlobalConnectionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupGlobalConnectionResultOutput, error) {
			args := v.(LookupGlobalConnectionArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupGlobalConnectionResult
			secret, err := ctx.InvokePackageRaw("dbtcloud:index/getGlobalConnection:getGlobalConnection", args, &rv, "", opts...)
			if err != nil {
				return LookupGlobalConnectionResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupGlobalConnectionResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupGlobalConnectionResultOutput), nil
			}
			return output, nil
		}).(LookupGlobalConnectionResultOutput)
}

// A collection of arguments for invoking getGlobalConnection.
type LookupGlobalConnectionOutputArgs struct {
	// Connection Identifier
	Id pulumi.IntInput `pulumi:"id"`
}

func (LookupGlobalConnectionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupGlobalConnectionArgs)(nil)).Elem()
}

// A collection of values returned by getGlobalConnection.
type LookupGlobalConnectionResultOutput struct{ *pulumi.OutputState }

func (LookupGlobalConnectionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupGlobalConnectionResult)(nil)).Elem()
}

func (o LookupGlobalConnectionResultOutput) ToLookupGlobalConnectionResultOutput() LookupGlobalConnectionResultOutput {
	return o
}

func (o LookupGlobalConnectionResultOutput) ToLookupGlobalConnectionResultOutputWithContext(ctx context.Context) LookupGlobalConnectionResultOutput {
	return o
}

// Version of the adapter
func (o LookupGlobalConnectionResultOutput) AdapterVersion() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGlobalConnectionResult) string { return v.AdapterVersion }).(pulumi.StringOutput)
}

// Apache Spark connection configuration.
func (o LookupGlobalConnectionResultOutput) ApacheSpark() GetGlobalConnectionApacheSparkOutput {
	return o.ApplyT(func(v LookupGlobalConnectionResult) GetGlobalConnectionApacheSpark { return v.ApacheSpark }).(GetGlobalConnectionApacheSparkOutput)
}

// Athena connection configuration.
func (o LookupGlobalConnectionResultOutput) Athena() GetGlobalConnectionAthenaOutput {
	return o.ApplyT(func(v LookupGlobalConnectionResult) GetGlobalConnectionAthena { return v.Athena }).(GetGlobalConnectionAthenaOutput)
}

func (o LookupGlobalConnectionResultOutput) Bigquery() GetGlobalConnectionBigqueryOutput {
	return o.ApplyT(func(v LookupGlobalConnectionResult) GetGlobalConnectionBigquery { return v.Bigquery }).(GetGlobalConnectionBigqueryOutput)
}

// Databricks connection configuration
func (o LookupGlobalConnectionResultOutput) Databricks() GetGlobalConnectionDatabricksOutput {
	return o.ApplyT(func(v LookupGlobalConnectionResult) GetGlobalConnectionDatabricks { return v.Databricks }).(GetGlobalConnectionDatabricksOutput)
}

// Microsoft Fabric connection configuration.
func (o LookupGlobalConnectionResultOutput) Fabric() GetGlobalConnectionFabricOutput {
	return o.ApplyT(func(v LookupGlobalConnectionResult) GetGlobalConnectionFabric { return v.Fabric }).(GetGlobalConnectionFabricOutput)
}

// Connection Identifier
func (o LookupGlobalConnectionResultOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v LookupGlobalConnectionResult) int { return v.Id }).(pulumi.IntOutput)
}

// Whether the connection can use an SSH tunnel
func (o LookupGlobalConnectionResultOutput) IsSshTunnelEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupGlobalConnectionResult) bool { return v.IsSshTunnelEnabled }).(pulumi.BoolOutput)
}

// Connection name
func (o LookupGlobalConnectionResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGlobalConnectionResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupGlobalConnectionResultOutput) OauthConfigurationId() pulumi.IntOutput {
	return o.ApplyT(func(v LookupGlobalConnectionResult) int { return v.OauthConfigurationId }).(pulumi.IntOutput)
}

// PostgreSQL connection configuration.
func (o LookupGlobalConnectionResultOutput) Postgres() GetGlobalConnectionPostgresOutput {
	return o.ApplyT(func(v LookupGlobalConnectionResult) GetGlobalConnectionPostgres { return v.Postgres }).(GetGlobalConnectionPostgresOutput)
}

// Private Link Endpoint ID. This ID can be found using the `privatelinkEndpoint` data source
func (o LookupGlobalConnectionResultOutput) PrivateLinkEndpointId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGlobalConnectionResult) string { return v.PrivateLinkEndpointId }).(pulumi.StringOutput)
}

// Redshift connection configuration
func (o LookupGlobalConnectionResultOutput) Redshift() GetGlobalConnectionRedshiftOutput {
	return o.ApplyT(func(v LookupGlobalConnectionResult) GetGlobalConnectionRedshift { return v.Redshift }).(GetGlobalConnectionRedshiftOutput)
}

// Snowflake connection configuration
func (o LookupGlobalConnectionResultOutput) Snowflake() GetGlobalConnectionSnowflakeOutput {
	return o.ApplyT(func(v LookupGlobalConnectionResult) GetGlobalConnectionSnowflake { return v.Snowflake }).(GetGlobalConnectionSnowflakeOutput)
}

// Starburst/Trino connection configuration.
func (o LookupGlobalConnectionResultOutput) Starburst() GetGlobalConnectionStarburstOutput {
	return o.ApplyT(func(v LookupGlobalConnectionResult) GetGlobalConnectionStarburst { return v.Starburst }).(GetGlobalConnectionStarburstOutput)
}

// Azure Synapse Analytics connection configuration.
func (o LookupGlobalConnectionResultOutput) Synapse() GetGlobalConnectionSynapseOutput {
	return o.ApplyT(func(v LookupGlobalConnectionResult) GetGlobalConnectionSynapse { return v.Synapse }).(GetGlobalConnectionSynapseOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupGlobalConnectionResultOutput{})
}
