// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dbtcloud

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-dbtcloud/sdk/go/dbtcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupServiceToken(ctx *pulumi.Context, args *LookupServiceTokenArgs, opts ...pulumi.InvokeOption) (*LookupServiceTokenResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupServiceTokenResult
	err := ctx.Invoke("dbtcloud:index/getServiceToken:getServiceToken", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getServiceToken.
type LookupServiceTokenArgs struct {
	// The ID of the service token
	ServiceTokenId int `pulumi:"serviceTokenId"`
	// Permissions set for the service token
	ServiceTokenPermissions []GetServiceTokenServiceTokenPermission `pulumi:"serviceTokenPermissions"`
}

// A collection of values returned by getServiceToken.
type LookupServiceTokenResult struct {
	// The ID of the service token
	Id string `pulumi:"id"`
	// Service token name
	Name string `pulumi:"name"`
	// The ID of the service token
	ServiceTokenId int `pulumi:"serviceTokenId"`
	// Permissions set for the service token
	ServiceTokenPermissions []GetServiceTokenServiceTokenPermission `pulumi:"serviceTokenPermissions"`
	// Service token UID (part of the token)
	Uid string `pulumi:"uid"`
}

func LookupServiceTokenOutput(ctx *pulumi.Context, args LookupServiceTokenOutputArgs, opts ...pulumi.InvokeOption) LookupServiceTokenResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupServiceTokenResultOutput, error) {
			args := v.(LookupServiceTokenArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("dbtcloud:index/getServiceToken:getServiceToken", args, LookupServiceTokenResultOutput{}, options).(LookupServiceTokenResultOutput), nil
		}).(LookupServiceTokenResultOutput)
}

// A collection of arguments for invoking getServiceToken.
type LookupServiceTokenOutputArgs struct {
	// The ID of the service token
	ServiceTokenId pulumi.IntInput `pulumi:"serviceTokenId"`
	// Permissions set for the service token
	ServiceTokenPermissions GetServiceTokenServiceTokenPermissionArrayInput `pulumi:"serviceTokenPermissions"`
}

func (LookupServiceTokenOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupServiceTokenArgs)(nil)).Elem()
}

// A collection of values returned by getServiceToken.
type LookupServiceTokenResultOutput struct{ *pulumi.OutputState }

func (LookupServiceTokenResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupServiceTokenResult)(nil)).Elem()
}

func (o LookupServiceTokenResultOutput) ToLookupServiceTokenResultOutput() LookupServiceTokenResultOutput {
	return o
}

func (o LookupServiceTokenResultOutput) ToLookupServiceTokenResultOutputWithContext(ctx context.Context) LookupServiceTokenResultOutput {
	return o
}

// The ID of the service token
func (o LookupServiceTokenResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceTokenResult) string { return v.Id }).(pulumi.StringOutput)
}

// Service token name
func (o LookupServiceTokenResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceTokenResult) string { return v.Name }).(pulumi.StringOutput)
}

// The ID of the service token
func (o LookupServiceTokenResultOutput) ServiceTokenId() pulumi.IntOutput {
	return o.ApplyT(func(v LookupServiceTokenResult) int { return v.ServiceTokenId }).(pulumi.IntOutput)
}

// Permissions set for the service token
func (o LookupServiceTokenResultOutput) ServiceTokenPermissions() GetServiceTokenServiceTokenPermissionArrayOutput {
	return o.ApplyT(func(v LookupServiceTokenResult) []GetServiceTokenServiceTokenPermission {
		return v.ServiceTokenPermissions
	}).(GetServiceTokenServiceTokenPermissionArrayOutput)
}

// Service token UID (part of the token)
func (o LookupServiceTokenResultOutput) Uid() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceTokenResult) string { return v.Uid }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupServiceTokenResultOutput{})
}
