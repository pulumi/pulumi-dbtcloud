// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dbtcloud

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-dbtcloud/sdk/go/dbtcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Athena credential resource
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-dbtcloud/sdk/go/dbtcloud"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := dbtcloud.NewAthenaCredential(ctx, "example", &dbtcloud.AthenaCredentialArgs{
//				ProjectId:          pulumi.Any(exampleDbtcloudProject.Id),
//				AwsAccessKeyId:     pulumi.String("your-access-key-id"),
//				AwsSecretAccessKey: pulumi.String("your-secret-access-key"),
//				Schema:             pulumi.String("your_schema"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// using  import blocks (requires Terraform >= 1.5)
//
// import {
//
//	to = dbtcloud_athena_credential.my_athena_credential
//
//	id = "project_id:credential_id"
//
// }
//
// import {
//
//	to = dbtcloud_athena_credential.my_athena_credential
//
//	id = "12345:6789"
//
// }
//
// using the older import command
//
// ```sh
// $ pulumi import dbtcloud:index/athenaCredential:AthenaCredential my_athena_credential "project_id:credential_id"
// ```
//
// ```sh
// $ pulumi import dbtcloud:index/athenaCredential:AthenaCredential my_athena_credential 12345:6789
// ```
type AthenaCredential struct {
	pulumi.CustomResourceState

	// AWS access key ID for Athena user
	AwsAccessKeyId pulumi.StringOutput `pulumi:"awsAccessKeyId"`
	// AWS secret access key for Athena user
	AwsSecretAccessKey pulumi.StringOutput `pulumi:"awsSecretAccessKey"`
	// The internal credential ID
	CredentialId pulumi.IntOutput `pulumi:"credentialId"`
	// Project ID to create the Athena credential in
	ProjectId pulumi.IntOutput `pulumi:"projectId"`
	// The schema where to create models
	Schema pulumi.StringOutput `pulumi:"schema"`
}

// NewAthenaCredential registers a new resource with the given unique name, arguments, and options.
func NewAthenaCredential(ctx *pulumi.Context,
	name string, args *AthenaCredentialArgs, opts ...pulumi.ResourceOption) (*AthenaCredential, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AwsAccessKeyId == nil {
		return nil, errors.New("invalid value for required argument 'AwsAccessKeyId'")
	}
	if args.AwsSecretAccessKey == nil {
		return nil, errors.New("invalid value for required argument 'AwsSecretAccessKey'")
	}
	if args.ProjectId == nil {
		return nil, errors.New("invalid value for required argument 'ProjectId'")
	}
	if args.Schema == nil {
		return nil, errors.New("invalid value for required argument 'Schema'")
	}
	if args.AwsAccessKeyId != nil {
		args.AwsAccessKeyId = pulumi.ToSecret(args.AwsAccessKeyId).(pulumi.StringInput)
	}
	if args.AwsSecretAccessKey != nil {
		args.AwsSecretAccessKey = pulumi.ToSecret(args.AwsSecretAccessKey).(pulumi.StringInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"awsAccessKeyId",
		"awsSecretAccessKey",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource AthenaCredential
	err := ctx.RegisterResource("dbtcloud:index/athenaCredential:AthenaCredential", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAthenaCredential gets an existing AthenaCredential resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAthenaCredential(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *AthenaCredentialState, opts ...pulumi.ResourceOption) (*AthenaCredential, error) {
	var resource AthenaCredential
	err := ctx.ReadResource("dbtcloud:index/athenaCredential:AthenaCredential", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering AthenaCredential resources.
type athenaCredentialState struct {
	// AWS access key ID for Athena user
	AwsAccessKeyId *string `pulumi:"awsAccessKeyId"`
	// AWS secret access key for Athena user
	AwsSecretAccessKey *string `pulumi:"awsSecretAccessKey"`
	// The internal credential ID
	CredentialId *int `pulumi:"credentialId"`
	// Project ID to create the Athena credential in
	ProjectId *int `pulumi:"projectId"`
	// The schema where to create models
	Schema *string `pulumi:"schema"`
}

type AthenaCredentialState struct {
	// AWS access key ID for Athena user
	AwsAccessKeyId pulumi.StringPtrInput
	// AWS secret access key for Athena user
	AwsSecretAccessKey pulumi.StringPtrInput
	// The internal credential ID
	CredentialId pulumi.IntPtrInput
	// Project ID to create the Athena credential in
	ProjectId pulumi.IntPtrInput
	// The schema where to create models
	Schema pulumi.StringPtrInput
}

func (AthenaCredentialState) ElementType() reflect.Type {
	return reflect.TypeOf((*athenaCredentialState)(nil)).Elem()
}

type athenaCredentialArgs struct {
	// AWS access key ID for Athena user
	AwsAccessKeyId string `pulumi:"awsAccessKeyId"`
	// AWS secret access key for Athena user
	AwsSecretAccessKey string `pulumi:"awsSecretAccessKey"`
	// Project ID to create the Athena credential in
	ProjectId int `pulumi:"projectId"`
	// The schema where to create models
	Schema string `pulumi:"schema"`
}

// The set of arguments for constructing a AthenaCredential resource.
type AthenaCredentialArgs struct {
	// AWS access key ID for Athena user
	AwsAccessKeyId pulumi.StringInput
	// AWS secret access key for Athena user
	AwsSecretAccessKey pulumi.StringInput
	// Project ID to create the Athena credential in
	ProjectId pulumi.IntInput
	// The schema where to create models
	Schema pulumi.StringInput
}

func (AthenaCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*athenaCredentialArgs)(nil)).Elem()
}

type AthenaCredentialInput interface {
	pulumi.Input

	ToAthenaCredentialOutput() AthenaCredentialOutput
	ToAthenaCredentialOutputWithContext(ctx context.Context) AthenaCredentialOutput
}

func (*AthenaCredential) ElementType() reflect.Type {
	return reflect.TypeOf((**AthenaCredential)(nil)).Elem()
}

func (i *AthenaCredential) ToAthenaCredentialOutput() AthenaCredentialOutput {
	return i.ToAthenaCredentialOutputWithContext(context.Background())
}

func (i *AthenaCredential) ToAthenaCredentialOutputWithContext(ctx context.Context) AthenaCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AthenaCredentialOutput)
}

// AthenaCredentialArrayInput is an input type that accepts AthenaCredentialArray and AthenaCredentialArrayOutput values.
// You can construct a concrete instance of `AthenaCredentialArrayInput` via:
//
//	AthenaCredentialArray{ AthenaCredentialArgs{...} }
type AthenaCredentialArrayInput interface {
	pulumi.Input

	ToAthenaCredentialArrayOutput() AthenaCredentialArrayOutput
	ToAthenaCredentialArrayOutputWithContext(context.Context) AthenaCredentialArrayOutput
}

type AthenaCredentialArray []AthenaCredentialInput

func (AthenaCredentialArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AthenaCredential)(nil)).Elem()
}

func (i AthenaCredentialArray) ToAthenaCredentialArrayOutput() AthenaCredentialArrayOutput {
	return i.ToAthenaCredentialArrayOutputWithContext(context.Background())
}

func (i AthenaCredentialArray) ToAthenaCredentialArrayOutputWithContext(ctx context.Context) AthenaCredentialArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AthenaCredentialArrayOutput)
}

// AthenaCredentialMapInput is an input type that accepts AthenaCredentialMap and AthenaCredentialMapOutput values.
// You can construct a concrete instance of `AthenaCredentialMapInput` via:
//
//	AthenaCredentialMap{ "key": AthenaCredentialArgs{...} }
type AthenaCredentialMapInput interface {
	pulumi.Input

	ToAthenaCredentialMapOutput() AthenaCredentialMapOutput
	ToAthenaCredentialMapOutputWithContext(context.Context) AthenaCredentialMapOutput
}

type AthenaCredentialMap map[string]AthenaCredentialInput

func (AthenaCredentialMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AthenaCredential)(nil)).Elem()
}

func (i AthenaCredentialMap) ToAthenaCredentialMapOutput() AthenaCredentialMapOutput {
	return i.ToAthenaCredentialMapOutputWithContext(context.Background())
}

func (i AthenaCredentialMap) ToAthenaCredentialMapOutputWithContext(ctx context.Context) AthenaCredentialMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AthenaCredentialMapOutput)
}

type AthenaCredentialOutput struct{ *pulumi.OutputState }

func (AthenaCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AthenaCredential)(nil)).Elem()
}

func (o AthenaCredentialOutput) ToAthenaCredentialOutput() AthenaCredentialOutput {
	return o
}

func (o AthenaCredentialOutput) ToAthenaCredentialOutputWithContext(ctx context.Context) AthenaCredentialOutput {
	return o
}

// AWS access key ID for Athena user
func (o AthenaCredentialOutput) AwsAccessKeyId() pulumi.StringOutput {
	return o.ApplyT(func(v *AthenaCredential) pulumi.StringOutput { return v.AwsAccessKeyId }).(pulumi.StringOutput)
}

// AWS secret access key for Athena user
func (o AthenaCredentialOutput) AwsSecretAccessKey() pulumi.StringOutput {
	return o.ApplyT(func(v *AthenaCredential) pulumi.StringOutput { return v.AwsSecretAccessKey }).(pulumi.StringOutput)
}

// The internal credential ID
func (o AthenaCredentialOutput) CredentialId() pulumi.IntOutput {
	return o.ApplyT(func(v *AthenaCredential) pulumi.IntOutput { return v.CredentialId }).(pulumi.IntOutput)
}

// Project ID to create the Athena credential in
func (o AthenaCredentialOutput) ProjectId() pulumi.IntOutput {
	return o.ApplyT(func(v *AthenaCredential) pulumi.IntOutput { return v.ProjectId }).(pulumi.IntOutput)
}

// The schema where to create models
func (o AthenaCredentialOutput) Schema() pulumi.StringOutput {
	return o.ApplyT(func(v *AthenaCredential) pulumi.StringOutput { return v.Schema }).(pulumi.StringOutput)
}

type AthenaCredentialArrayOutput struct{ *pulumi.OutputState }

func (AthenaCredentialArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*AthenaCredential)(nil)).Elem()
}

func (o AthenaCredentialArrayOutput) ToAthenaCredentialArrayOutput() AthenaCredentialArrayOutput {
	return o
}

func (o AthenaCredentialArrayOutput) ToAthenaCredentialArrayOutputWithContext(ctx context.Context) AthenaCredentialArrayOutput {
	return o
}

func (o AthenaCredentialArrayOutput) Index(i pulumi.IntInput) AthenaCredentialOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *AthenaCredential {
		return vs[0].([]*AthenaCredential)[vs[1].(int)]
	}).(AthenaCredentialOutput)
}

type AthenaCredentialMapOutput struct{ *pulumi.OutputState }

func (AthenaCredentialMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*AthenaCredential)(nil)).Elem()
}

func (o AthenaCredentialMapOutput) ToAthenaCredentialMapOutput() AthenaCredentialMapOutput {
	return o
}

func (o AthenaCredentialMapOutput) ToAthenaCredentialMapOutputWithContext(ctx context.Context) AthenaCredentialMapOutput {
	return o
}

func (o AthenaCredentialMapOutput) MapIndex(k pulumi.StringInput) AthenaCredentialOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *AthenaCredential {
		return vs[0].(map[string]*AthenaCredential)[vs[1].(string)]
	}).(AthenaCredentialOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AthenaCredentialInput)(nil)).Elem(), &AthenaCredential{})
	pulumi.RegisterInputType(reflect.TypeOf((*AthenaCredentialArrayInput)(nil)).Elem(), AthenaCredentialArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AthenaCredentialMapInput)(nil)).Elem(), AthenaCredentialMap{})
	pulumi.RegisterOutputType(AthenaCredentialOutput{})
	pulumi.RegisterOutputType(AthenaCredentialArrayOutput{})
	pulumi.RegisterOutputType(AthenaCredentialMapOutput{})
}
