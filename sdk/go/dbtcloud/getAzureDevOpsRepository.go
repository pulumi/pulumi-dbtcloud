// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dbtcloud

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-dbtcloud/sdk/go/dbtcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to retrieve the ID and details of an Azure Dev Ops repository
// based on its name and the ID of the Azure Dev Ops project it belongs to.
//
// This data source requires connecting with a user token and doesn't work with a service token.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-dbtcloud/sdk/go/dbtcloud"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := dbtcloud.GetAzureDevOpsRepository(ctx, &dbtcloud.GetAzureDevOpsRepositoryArgs{
//				Name:                 "my-repo-name",
//				AzureDevOpsProjectId: myAdoProject.Id,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetAzureDevOpsRepository(ctx *pulumi.Context, args *GetAzureDevOpsRepositoryArgs, opts ...pulumi.InvokeOption) (*GetAzureDevOpsRepositoryResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetAzureDevOpsRepositoryResult
	err := ctx.Invoke("dbtcloud:index/getAzureDevOpsRepository:getAzureDevOpsRepository", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAzureDevOpsRepository.
type GetAzureDevOpsRepositoryArgs struct {
	// The internal Azure Dev Ops ID of the ADO Project. Can be retrieved using the data source dbtcloud*azure*dev*ops*project and the project name
	AzureDevOpsProjectId string `pulumi:"azureDevOpsProjectId"`
	// The name of the ADO repository
	Name string `pulumi:"name"`
}

// A collection of values returned by getAzureDevOpsRepository.
type GetAzureDevOpsRepositoryResult struct {
	// The internal Azure Dev Ops ID of the ADO Project. Can be retrieved using the data source dbtcloud*azure*dev*ops*project and the project name
	AzureDevOpsProjectId string `pulumi:"azureDevOpsProjectId"`
	// The default branch of the ADO repository
	DefaultBranch string `pulumi:"defaultBranch"`
	// The URL of the ADO repository showing details about the repository and its attributes
	DetailsUrl string `pulumi:"detailsUrl"`
	// The internal Azure Dev Ops ID of the ADO Repository
	Id string `pulumi:"id"`
	// The name of the ADO repository
	Name string `pulumi:"name"`
	// The HTTP URL of the ADO repository used to connect to dbt Cloud
	RemoteUrl string `pulumi:"remoteUrl"`
	// The URL of the ADO repository accessible in the browser
	WebUrl string `pulumi:"webUrl"`
}

func GetAzureDevOpsRepositoryOutput(ctx *pulumi.Context, args GetAzureDevOpsRepositoryOutputArgs, opts ...pulumi.InvokeOption) GetAzureDevOpsRepositoryResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetAzureDevOpsRepositoryResultOutput, error) {
			args := v.(GetAzureDevOpsRepositoryArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv GetAzureDevOpsRepositoryResult
			secret, err := ctx.InvokePackageRaw("dbtcloud:index/getAzureDevOpsRepository:getAzureDevOpsRepository", args, &rv, "", opts...)
			if err != nil {
				return GetAzureDevOpsRepositoryResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(GetAzureDevOpsRepositoryResultOutput)
			if secret {
				return pulumi.ToSecret(output).(GetAzureDevOpsRepositoryResultOutput), nil
			}
			return output, nil
		}).(GetAzureDevOpsRepositoryResultOutput)
}

// A collection of arguments for invoking getAzureDevOpsRepository.
type GetAzureDevOpsRepositoryOutputArgs struct {
	// The internal Azure Dev Ops ID of the ADO Project. Can be retrieved using the data source dbtcloud*azure*dev*ops*project and the project name
	AzureDevOpsProjectId pulumi.StringInput `pulumi:"azureDevOpsProjectId"`
	// The name of the ADO repository
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetAzureDevOpsRepositoryOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAzureDevOpsRepositoryArgs)(nil)).Elem()
}

// A collection of values returned by getAzureDevOpsRepository.
type GetAzureDevOpsRepositoryResultOutput struct{ *pulumi.OutputState }

func (GetAzureDevOpsRepositoryResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAzureDevOpsRepositoryResult)(nil)).Elem()
}

func (o GetAzureDevOpsRepositoryResultOutput) ToGetAzureDevOpsRepositoryResultOutput() GetAzureDevOpsRepositoryResultOutput {
	return o
}

func (o GetAzureDevOpsRepositoryResultOutput) ToGetAzureDevOpsRepositoryResultOutputWithContext(ctx context.Context) GetAzureDevOpsRepositoryResultOutput {
	return o
}

// The internal Azure Dev Ops ID of the ADO Project. Can be retrieved using the data source dbtcloud*azure*dev*ops*project and the project name
func (o GetAzureDevOpsRepositoryResultOutput) AzureDevOpsProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAzureDevOpsRepositoryResult) string { return v.AzureDevOpsProjectId }).(pulumi.StringOutput)
}

// The default branch of the ADO repository
func (o GetAzureDevOpsRepositoryResultOutput) DefaultBranch() pulumi.StringOutput {
	return o.ApplyT(func(v GetAzureDevOpsRepositoryResult) string { return v.DefaultBranch }).(pulumi.StringOutput)
}

// The URL of the ADO repository showing details about the repository and its attributes
func (o GetAzureDevOpsRepositoryResultOutput) DetailsUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetAzureDevOpsRepositoryResult) string { return v.DetailsUrl }).(pulumi.StringOutput)
}

// The internal Azure Dev Ops ID of the ADO Repository
func (o GetAzureDevOpsRepositoryResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAzureDevOpsRepositoryResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the ADO repository
func (o GetAzureDevOpsRepositoryResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAzureDevOpsRepositoryResult) string { return v.Name }).(pulumi.StringOutput)
}

// The HTTP URL of the ADO repository used to connect to dbt Cloud
func (o GetAzureDevOpsRepositoryResultOutput) RemoteUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetAzureDevOpsRepositoryResult) string { return v.RemoteUrl }).(pulumi.StringOutput)
}

// The URL of the ADO repository accessible in the browser
func (o GetAzureDevOpsRepositoryResultOutput) WebUrl() pulumi.StringOutput {
	return o.ApplyT(func(v GetAzureDevOpsRepositoryResult) string { return v.WebUrl }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetAzureDevOpsRepositoryResultOutput{})
}
