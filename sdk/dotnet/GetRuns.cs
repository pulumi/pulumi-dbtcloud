// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.DbtCloud
{
    public static class GetRuns
    {
        /// <summary>
        /// Retrieve all runs
        /// </summary>
        public static Task<GetRunsResult> InvokeAsync(GetRunsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRunsResult>("dbtcloud:index/getRuns:getRuns", args ?? new GetRunsArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieve all runs
        /// </summary>
        public static Output<GetRunsResult> Invoke(GetRunsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRunsResult>("dbtcloud:index/getRuns:getRuns", args ?? new GetRunsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Retrieve all runs
        /// </summary>
        public static Output<GetRunsResult> Invoke(GetRunsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetRunsResult>("dbtcloud:index/getRuns:getRuns", args ?? new GetRunsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRunsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Filter to apply to the runs
        /// </summary>
        [Input("filter")]
        public Inputs.GetRunsFilterArgs? Filter { get; set; }

        public GetRunsArgs()
        {
        }
        public static new GetRunsArgs Empty => new GetRunsArgs();
    }

    public sealed class GetRunsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Filter to apply to the runs
        /// </summary>
        [Input("filter")]
        public Input<Inputs.GetRunsFilterInputArgs>? Filter { get; set; }

        public GetRunsInvokeArgs()
        {
        }
        public static new GetRunsInvokeArgs Empty => new GetRunsInvokeArgs();
    }


    [OutputType]
    public sealed class GetRunsResult
    {
        /// <summary>
        /// Filter to apply to the runs
        /// </summary>
        public readonly Outputs.GetRunsFilterResult? Filter;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Set of users with their internal ID end email
        /// </summary>
        public readonly ImmutableArray<Outputs.GetRunsRunResult> Runs;

        [OutputConstructor]
        private GetRunsResult(
            Outputs.GetRunsFilterResult? filter,

            string id,

            ImmutableArray<Outputs.GetRunsRunResult> runs)
        {
            Filter = filter;
            Id = id;
            Runs = runs;
        }
    }
}
