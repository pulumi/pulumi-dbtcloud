// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.DbtCloud
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using DbtCloud = Pulumi.DbtCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     // Developer license group mapping
    ///     var devLicenseMap = new DbtCloud.PartialLicenseMap("dev_license_map", new()
    ///     {
    ///         LicenseType = "developer",
    ///         SsoLicenseMappingGroups = new[]
    ///         {
    ///             "DEV-SSO-GROUP",
    ///         },
    ///     });
    /// 
    ///     // Read-only license mapping
    ///     var readOnlyLicenseMap = new DbtCloud.PartialLicenseMap("read_only_license_map", new()
    ///     {
    ///         LicenseType = "read_only",
    ///         SsoLicenseMappingGroups = new[]
    ///         {
    ///             "READ-ONLY-SSO-GROUP",
    ///         },
    ///     });
    /// 
    ///     // IT license mapping
    ///     var itLicenseMap = new DbtCloud.PartialLicenseMap("it_license_map", new()
    ///     {
    ///         LicenseType = "it",
    ///         SsoLicenseMappingGroups = new[]
    ///         {
    ///             "IT-SSO-GROUP",
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [DbtCloudResourceType("dbtcloud:index/partialLicenseMap:PartialLicenseMap")]
    public partial class PartialLicenseMap : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The license type to update
        /// </summary>
        [Output("licenseType")]
        public Output<string> LicenseType { get; private set; } = null!;

        /// <summary>
        /// List of SSO groups to map to the license type.
        /// </summary>
        [Output("ssoLicenseMappingGroups")]
        public Output<ImmutableArray<string>> SsoLicenseMappingGroups { get; private set; } = null!;


        /// <summary>
        /// Create a PartialLicenseMap resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PartialLicenseMap(string name, PartialLicenseMapArgs args, CustomResourceOptions? options = null)
            : base("dbtcloud:index/partialLicenseMap:PartialLicenseMap", name, args ?? new PartialLicenseMapArgs(), MakeResourceOptions(options, ""))
        {
        }

        private PartialLicenseMap(string name, Input<string> id, PartialLicenseMapState? state = null, CustomResourceOptions? options = null)
            : base("dbtcloud:index/partialLicenseMap:PartialLicenseMap", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumi/pulumi-dbtcloud",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PartialLicenseMap resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PartialLicenseMap Get(string name, Input<string> id, PartialLicenseMapState? state = null, CustomResourceOptions? options = null)
        {
            return new PartialLicenseMap(name, id, state, options);
        }
    }

    public sealed class PartialLicenseMapArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The license type to update
        /// </summary>
        [Input("licenseType", required: true)]
        public Input<string> LicenseType { get; set; } = null!;

        [Input("ssoLicenseMappingGroups", required: true)]
        private InputList<string>? _ssoLicenseMappingGroups;

        /// <summary>
        /// List of SSO groups to map to the license type.
        /// </summary>
        public InputList<string> SsoLicenseMappingGroups
        {
            get => _ssoLicenseMappingGroups ?? (_ssoLicenseMappingGroups = new InputList<string>());
            set => _ssoLicenseMappingGroups = value;
        }

        public PartialLicenseMapArgs()
        {
        }
        public static new PartialLicenseMapArgs Empty => new PartialLicenseMapArgs();
    }

    public sealed class PartialLicenseMapState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The license type to update
        /// </summary>
        [Input("licenseType")]
        public Input<string>? LicenseType { get; set; }

        [Input("ssoLicenseMappingGroups")]
        private InputList<string>? _ssoLicenseMappingGroups;

        /// <summary>
        /// List of SSO groups to map to the license type.
        /// </summary>
        public InputList<string> SsoLicenseMappingGroups
        {
            get => _ssoLicenseMappingGroups ?? (_ssoLicenseMappingGroups = new InputList<string>());
            set => _ssoLicenseMappingGroups = value;
        }

        public PartialLicenseMapState()
        {
        }
        public static new PartialLicenseMapState Empty => new PartialLicenseMapState();
    }
}
