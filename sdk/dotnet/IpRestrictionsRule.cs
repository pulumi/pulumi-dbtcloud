// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.DbtCloud
{
    /// <summary>
    /// Manages IP restriction rules in dbt Cloud. IP restriction rules allow you to control access to your dbt Cloud instance based on IP address ranges.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using DbtCloud = Pulumi.DbtCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var test = new DbtCloud.IpRestrictionsRule("test", new()
    ///     {
    ///         Name = "My restriction rule",
    ///         Description = "Important description",
    ///         Cidrs = new[]
    ///         {
    ///             new DbtCloud.Inputs.IpRestrictionsRuleCidrArgs
    ///             {
    ///                 Cidr = "::ffff:106:708",
    ///             },
    ///             new DbtCloud.Inputs.IpRestrictionsRuleCidrArgs
    ///             {
    ///                 Cidr = "1.6.7.10/24",
    ///             },
    ///         },
    ///         Type = "deny",
    ///         RuleSetEnabled = false,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// using  import blocks (requires Terraform &gt;= 1.5)
    /// 
    /// import {
    /// 
    ///   to = dbtcloud_ip_restrictions_rule.my_rule
    /// 
    ///   id = "ip_restriction_rule_id"
    /// 
    /// }
    /// 
    /// import {
    /// 
    ///   to = dbtcloud_ip_restrictions_rule.my_rule
    /// 
    ///   id = "12345"
    /// 
    /// }
    /// 
    /// using the older import command
    /// 
    /// ```sh
    /// $ pulumi import dbtcloud:index/ipRestrictionsRule:IpRestrictionsRule my_rule "ip_restriction_rule_id"
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import dbtcloud:index/ipRestrictionsRule:IpRestrictionsRule my_rule 12345
    /// ```
    /// </summary>
    [DbtCloudResourceType("dbtcloud:index/ipRestrictionsRule:IpRestrictionsRule")]
    public partial class IpRestrictionsRule : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Set of CIDR ranges for this rule
        /// </summary>
        [Output("cidrs")]
        public Output<ImmutableArray<Outputs.IpRestrictionsRuleCidr>> Cidrs { get; private set; } = null!;

        /// <summary>
        /// A description of the IP restriction rule
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The name of the IP restriction rule
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Whether the IP restriction rule set is enabled or not. Important!: This value needs to be the same for all rules if multiple rules are defined. All rules must be active or inactive at the same time.
        /// </summary>
        [Output("ruleSetEnabled")]
        public Output<bool> RuleSetEnabled { get; private set; } = null!;

        /// <summary>
        /// The type of the IP restriction rule (allow or deny)
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a IpRestrictionsRule resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public IpRestrictionsRule(string name, IpRestrictionsRuleArgs args, CustomResourceOptions? options = null)
            : base("dbtcloud:index/ipRestrictionsRule:IpRestrictionsRule", name, args ?? new IpRestrictionsRuleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private IpRestrictionsRule(string name, Input<string> id, IpRestrictionsRuleState? state = null, CustomResourceOptions? options = null)
            : base("dbtcloud:index/ipRestrictionsRule:IpRestrictionsRule", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumi/pulumi-dbtcloud",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing IpRestrictionsRule resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static IpRestrictionsRule Get(string name, Input<string> id, IpRestrictionsRuleState? state = null, CustomResourceOptions? options = null)
        {
            return new IpRestrictionsRule(name, id, state, options);
        }
    }

    public sealed class IpRestrictionsRuleArgs : global::Pulumi.ResourceArgs
    {
        [Input("cidrs", required: true)]
        private InputList<Inputs.IpRestrictionsRuleCidrArgs>? _cidrs;

        /// <summary>
        /// Set of CIDR ranges for this rule
        /// </summary>
        public InputList<Inputs.IpRestrictionsRuleCidrArgs> Cidrs
        {
            get => _cidrs ?? (_cidrs = new InputList<Inputs.IpRestrictionsRuleCidrArgs>());
            set => _cidrs = value;
        }

        /// <summary>
        /// A description of the IP restriction rule
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The name of the IP restriction rule
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Whether the IP restriction rule set is enabled or not. Important!: This value needs to be the same for all rules if multiple rules are defined. All rules must be active or inactive at the same time.
        /// </summary>
        [Input("ruleSetEnabled", required: true)]
        public Input<bool> RuleSetEnabled { get; set; } = null!;

        /// <summary>
        /// The type of the IP restriction rule (allow or deny)
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public IpRestrictionsRuleArgs()
        {
        }
        public static new IpRestrictionsRuleArgs Empty => new IpRestrictionsRuleArgs();
    }

    public sealed class IpRestrictionsRuleState : global::Pulumi.ResourceArgs
    {
        [Input("cidrs")]
        private InputList<Inputs.IpRestrictionsRuleCidrGetArgs>? _cidrs;

        /// <summary>
        /// Set of CIDR ranges for this rule
        /// </summary>
        public InputList<Inputs.IpRestrictionsRuleCidrGetArgs> Cidrs
        {
            get => _cidrs ?? (_cidrs = new InputList<Inputs.IpRestrictionsRuleCidrGetArgs>());
            set => _cidrs = value;
        }

        /// <summary>
        /// A description of the IP restriction rule
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The name of the IP restriction rule
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Whether the IP restriction rule set is enabled or not. Important!: This value needs to be the same for all rules if multiple rules are defined. All rules must be active or inactive at the same time.
        /// </summary>
        [Input("ruleSetEnabled")]
        public Input<bool>? RuleSetEnabled { get; set; }

        /// <summary>
        /// The type of the IP restriction rule (allow or deny)
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public IpRestrictionsRuleState()
        {
        }
        public static new IpRestrictionsRuleState Empty => new IpRestrictionsRuleState();
    }
}
