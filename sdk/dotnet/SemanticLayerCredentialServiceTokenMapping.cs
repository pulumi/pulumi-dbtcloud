// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.DbtCloud
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using DbtCloud = Pulumi.DbtCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var testMapping = new DbtCloud.SemanticLayerCredentialServiceTokenMapping("test_mapping", new()
    ///     {
    ///         SemanticLayerCredentialId = test.Id,
    ///         ServiceTokenId = testServiceToken.Id,
    ///         ProjectId = testProject.Id,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// using import blocks (requires Terraform &gt;= 1.5)
    /// 
    /// import {
    /// 
    ///   to = dbtcloud_semantic_layer_credential_service_token_mapping.example
    /// 
    ///   id = "id"
    /// 
    /// }
    /// 
    /// import {
    /// 
    ///   to = dbtcloud_semantic_layer_credential_service_token_mapping.example
    /// 
    ///   id = "12345"
    /// 
    /// }
    /// 
    /// using the older import command
    /// 
    /// ```sh
    /// $ pulumi import dbtcloud:index/semanticLayerCredentialServiceTokenMapping:SemanticLayerCredentialServiceTokenMapping example "id"
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import dbtcloud:index/semanticLayerCredentialServiceTokenMapping:SemanticLayerCredentialServiceTokenMapping example 12345
    /// ```
    /// </summary>
    [DbtCloudResourceType("dbtcloud:index/semanticLayerCredentialServiceTokenMapping:SemanticLayerCredentialServiceTokenMapping")]
    public partial class SemanticLayerCredentialServiceTokenMapping : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The ID of the project to which the semantic layer credential is associated.
        /// </summary>
        [Output("projectId")]
        public Output<int> ProjectId { get; private set; } = null!;

        /// <summary>
        /// The ID of the semantic layer credential to map.
        /// </summary>
        [Output("semanticLayerCredentialId")]
        public Output<int> SemanticLayerCredentialId { get; private set; } = null!;

        /// <summary>
        /// The ID of the service token to map to the semantic layer credential.
        /// </summary>
        [Output("serviceTokenId")]
        public Output<int> ServiceTokenId { get; private set; } = null!;


        /// <summary>
        /// Create a SemanticLayerCredentialServiceTokenMapping resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SemanticLayerCredentialServiceTokenMapping(string name, SemanticLayerCredentialServiceTokenMappingArgs args, CustomResourceOptions? options = null)
            : base("dbtcloud:index/semanticLayerCredentialServiceTokenMapping:SemanticLayerCredentialServiceTokenMapping", name, args ?? new SemanticLayerCredentialServiceTokenMappingArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SemanticLayerCredentialServiceTokenMapping(string name, Input<string> id, SemanticLayerCredentialServiceTokenMappingState? state = null, CustomResourceOptions? options = null)
            : base("dbtcloud:index/semanticLayerCredentialServiceTokenMapping:SemanticLayerCredentialServiceTokenMapping", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumi/pulumi-dbtcloud",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SemanticLayerCredentialServiceTokenMapping resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SemanticLayerCredentialServiceTokenMapping Get(string name, Input<string> id, SemanticLayerCredentialServiceTokenMappingState? state = null, CustomResourceOptions? options = null)
        {
            return new SemanticLayerCredentialServiceTokenMapping(name, id, state, options);
        }
    }

    public sealed class SemanticLayerCredentialServiceTokenMappingArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the project to which the semantic layer credential is associated.
        /// </summary>
        [Input("projectId", required: true)]
        public Input<int> ProjectId { get; set; } = null!;

        /// <summary>
        /// The ID of the semantic layer credential to map.
        /// </summary>
        [Input("semanticLayerCredentialId", required: true)]
        public Input<int> SemanticLayerCredentialId { get; set; } = null!;

        /// <summary>
        /// The ID of the service token to map to the semantic layer credential.
        /// </summary>
        [Input("serviceTokenId", required: true)]
        public Input<int> ServiceTokenId { get; set; } = null!;

        public SemanticLayerCredentialServiceTokenMappingArgs()
        {
        }
        public static new SemanticLayerCredentialServiceTokenMappingArgs Empty => new SemanticLayerCredentialServiceTokenMappingArgs();
    }

    public sealed class SemanticLayerCredentialServiceTokenMappingState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the project to which the semantic layer credential is associated.
        /// </summary>
        [Input("projectId")]
        public Input<int>? ProjectId { get; set; }

        /// <summary>
        /// The ID of the semantic layer credential to map.
        /// </summary>
        [Input("semanticLayerCredentialId")]
        public Input<int>? SemanticLayerCredentialId { get; set; }

        /// <summary>
        /// The ID of the service token to map to the semantic layer credential.
        /// </summary>
        [Input("serviceTokenId")]
        public Input<int>? ServiceTokenId { get; set; }

        public SemanticLayerCredentialServiceTokenMappingState()
        {
        }
        public static new SemanticLayerCredentialServiceTokenMappingState Empty => new SemanticLayerCredentialServiceTokenMappingState();
    }
}
