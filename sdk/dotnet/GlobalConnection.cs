// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.DbtCloud
{
    /// <summary>
    /// This resource can be used to create global connections as introduced in dbt Cloud in August 2024.
    /// 
    /// Those connections are not linked to a project and can be linked to environments from different projects by using the `connection_id` field in the `dbtcloud.Environment` resource.
    /// 
    /// For now, only a subset of connections are supported and the other Data Warehouses can continue using the existing resources `dbtcloud.Connection` and `dbtcloud.FabricConnection` ,
    /// but all Data Warehouses will soon be supported under this resource and the other ones will be deprecated in the future.
    /// 
    /// ## Import
    /// 
    /// A project-scoped connection can be imported as a global connection by specifying the connection ID
    /// 
    /// Migrating from project-scoped connections to global connections could be done by:
    /// 
    /// 1. Adding the config for the global connection and importing it (see below)
    /// 
    /// 2. Removing the project-scoped connection from the config AND from the state
    ///    
    ///    - CAREFUL: If the connection is removed from the config but not the state, it will be destroyed on the next apply
    /// 
    /// using  import blocks (requires Terraform &gt;= 1.5)
    /// 
    /// import {
    /// 
    ///   to = dbtcloud_global_connection.my_connection
    /// 
    ///   id = "connection_id"
    /// 
    /// }
    /// 
    /// import {
    /// 
    ///   to = dbtcloud_global_connection.my_connection
    /// 
    ///   id = "1234"
    /// 
    /// }
    /// 
    /// using the older import command
    /// 
    /// ```sh
    /// $ pulumi import dbtcloud:index/globalConnection:GlobalConnection my_connection "connection_id"
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import dbtcloud:index/globalConnection:GlobalConnection my_connection 1234
    /// ```
    /// </summary>
    [DbtCloudResourceType("dbtcloud:index/globalConnection:GlobalConnection")]
    public partial class GlobalConnection : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Version of the adapter
        /// </summary>
        [Output("adapterVersion")]
        public Output<string> AdapterVersion { get; private set; } = null!;

        [Output("bigquery")]
        public Output<Outputs.GlobalConnectionBigquery?> Bigquery { get; private set; } = null!;

        /// <summary>
        /// Databricks connection configuration
        /// </summary>
        [Output("databricks")]
        public Output<Outputs.GlobalConnectionDatabricks?> Databricks { get; private set; } = null!;

        /// <summary>
        /// Whether the connection can use an SSH tunnel
        /// </summary>
        [Output("isSshTunnelEnabled")]
        public Output<bool> IsSshTunnelEnabled { get; private set; } = null!;

        /// <summary>
        /// Connection name
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        [Output("oauthConfigurationId")]
        public Output<int> OauthConfigurationId { get; private set; } = null!;

        /// <summary>
        /// Private Link Endpoint ID. This ID can be found using the `privatelink_endpoint` data source
        /// </summary>
        [Output("privateLinkEndpointId")]
        public Output<string?> PrivateLinkEndpointId { get; private set; } = null!;

        /// <summary>
        /// Snowflake connection configuration
        /// </summary>
        [Output("snowflake")]
        public Output<Outputs.GlobalConnectionSnowflake?> Snowflake { get; private set; } = null!;


        /// <summary>
        /// Create a GlobalConnection resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public GlobalConnection(string name, GlobalConnectionArgs? args = null, CustomResourceOptions? options = null)
            : base("dbtcloud:index/globalConnection:GlobalConnection", name, args ?? new GlobalConnectionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private GlobalConnection(string name, Input<string> id, GlobalConnectionState? state = null, CustomResourceOptions? options = null)
            : base("dbtcloud:index/globalConnection:GlobalConnection", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumi/pulumi-dbtcloud",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing GlobalConnection resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static GlobalConnection Get(string name, Input<string> id, GlobalConnectionState? state = null, CustomResourceOptions? options = null)
        {
            return new GlobalConnection(name, id, state, options);
        }
    }

    public sealed class GlobalConnectionArgs : global::Pulumi.ResourceArgs
    {
        [Input("bigquery")]
        public Input<Inputs.GlobalConnectionBigqueryArgs>? Bigquery { get; set; }

        /// <summary>
        /// Databricks connection configuration
        /// </summary>
        [Input("databricks")]
        public Input<Inputs.GlobalConnectionDatabricksArgs>? Databricks { get; set; }

        /// <summary>
        /// Connection name
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Private Link Endpoint ID. This ID can be found using the `privatelink_endpoint` data source
        /// </summary>
        [Input("privateLinkEndpointId")]
        public Input<string>? PrivateLinkEndpointId { get; set; }

        /// <summary>
        /// Snowflake connection configuration
        /// </summary>
        [Input("snowflake")]
        public Input<Inputs.GlobalConnectionSnowflakeArgs>? Snowflake { get; set; }

        public GlobalConnectionArgs()
        {
        }
        public static new GlobalConnectionArgs Empty => new GlobalConnectionArgs();
    }

    public sealed class GlobalConnectionState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Version of the adapter
        /// </summary>
        [Input("adapterVersion")]
        public Input<string>? AdapterVersion { get; set; }

        [Input("bigquery")]
        public Input<Inputs.GlobalConnectionBigqueryGetArgs>? Bigquery { get; set; }

        /// <summary>
        /// Databricks connection configuration
        /// </summary>
        [Input("databricks")]
        public Input<Inputs.GlobalConnectionDatabricksGetArgs>? Databricks { get; set; }

        /// <summary>
        /// Whether the connection can use an SSH tunnel
        /// </summary>
        [Input("isSshTunnelEnabled")]
        public Input<bool>? IsSshTunnelEnabled { get; set; }

        /// <summary>
        /// Connection name
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("oauthConfigurationId")]
        public Input<int>? OauthConfigurationId { get; set; }

        /// <summary>
        /// Private Link Endpoint ID. This ID can be found using the `privatelink_endpoint` data source
        /// </summary>
        [Input("privateLinkEndpointId")]
        public Input<string>? PrivateLinkEndpointId { get; set; }

        /// <summary>
        /// Snowflake connection configuration
        /// </summary>
        [Input("snowflake")]
        public Input<Inputs.GlobalConnectionSnowflakeGetArgs>? Snowflake { get; set; }

        public GlobalConnectionState()
        {
        }
        public static new GlobalConnectionState Empty => new GlobalConnectionState();
    }
}
