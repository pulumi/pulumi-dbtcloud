// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.DbtCloud
{
    [DbtCloudResourceType("dbtcloud:index/scimGroupPermissions:ScimGroupPermissions")]
    public partial class ScimGroupPermissions : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The ID of the existing group to manage permissions for. This group must already exist.
        /// </summary>
        [Output("groupId")]
        public Output<int> GroupId { get; private set; } = null!;

        /// <summary>
        /// Set of permissions to apply to the group. This will replace all existing permissions for the group.
        /// </summary>
        [Output("permissions")]
        public Output<ImmutableArray<Outputs.ScimGroupPermissionsPermission>> Permissions { get; private set; } = null!;


        /// <summary>
        /// Create a ScimGroupPermissions resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ScimGroupPermissions(string name, ScimGroupPermissionsArgs args, CustomResourceOptions? options = null)
            : base("dbtcloud:index/scimGroupPermissions:ScimGroupPermissions", name, args ?? new ScimGroupPermissionsArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ScimGroupPermissions(string name, Input<string> id, ScimGroupPermissionsState? state = null, CustomResourceOptions? options = null)
            : base("dbtcloud:index/scimGroupPermissions:ScimGroupPermissions", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumi/pulumi-dbtcloud",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ScimGroupPermissions resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ScimGroupPermissions Get(string name, Input<string> id, ScimGroupPermissionsState? state = null, CustomResourceOptions? options = null)
        {
            return new ScimGroupPermissions(name, id, state, options);
        }
    }

    public sealed class ScimGroupPermissionsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the existing group to manage permissions for. This group must already exist.
        /// </summary>
        [Input("groupId", required: true)]
        public Input<int> GroupId { get; set; } = null!;

        [Input("permissions")]
        private InputList<Inputs.ScimGroupPermissionsPermissionArgs>? _permissions;

        /// <summary>
        /// Set of permissions to apply to the group. This will replace all existing permissions for the group.
        /// </summary>
        public InputList<Inputs.ScimGroupPermissionsPermissionArgs> Permissions
        {
            get => _permissions ?? (_permissions = new InputList<Inputs.ScimGroupPermissionsPermissionArgs>());
            set => _permissions = value;
        }

        public ScimGroupPermissionsArgs()
        {
        }
        public static new ScimGroupPermissionsArgs Empty => new ScimGroupPermissionsArgs();
    }

    public sealed class ScimGroupPermissionsState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The ID of the existing group to manage permissions for. This group must already exist.
        /// </summary>
        [Input("groupId")]
        public Input<int>? GroupId { get; set; }

        [Input("permissions")]
        private InputList<Inputs.ScimGroupPermissionsPermissionGetArgs>? _permissions;

        /// <summary>
        /// Set of permissions to apply to the group. This will replace all existing permissions for the group.
        /// </summary>
        public InputList<Inputs.ScimGroupPermissionsPermissionGetArgs> Permissions
        {
            get => _permissions ?? (_permissions = new InputList<Inputs.ScimGroupPermissionsPermissionGetArgs>());
            set => _permissions = value;
        }

        public ScimGroupPermissionsState()
        {
        }
        public static new ScimGroupPermissionsState Empty => new ScimGroupPermissionsState();
    }
}
