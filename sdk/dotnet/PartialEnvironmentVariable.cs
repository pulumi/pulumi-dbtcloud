// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.DbtCloud
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ### 
    /// </summary>
    [DbtCloudResourceType("dbtcloud:index/partialEnvironmentVariable:PartialEnvironmentVariable")]
    public partial class PartialEnvironmentVariable : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Map from environment names to respective variable value. This field is not set as sensitive so take precautions when using secret environment variables. Only the specified environment values will be managed by this resource.
        /// </summary>
        [Output("environmentValues")]
        public Output<ImmutableDictionary<string, string>> EnvironmentValues { get; private set; } = null!;

        /// <summary>
        /// Name for the variable, must be unique within a project, must be prefixed with 'DBT_'
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Project ID to create or update the environment variable in
        /// </summary>
        [Output("projectId")]
        public Output<int> ProjectId { get; private set; } = null!;


        /// <summary>
        /// Create a PartialEnvironmentVariable resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PartialEnvironmentVariable(string name, PartialEnvironmentVariableArgs args, CustomResourceOptions? options = null)
            : base("dbtcloud:index/partialEnvironmentVariable:PartialEnvironmentVariable", name, args ?? new PartialEnvironmentVariableArgs(), MakeResourceOptions(options, ""))
        {
        }

        private PartialEnvironmentVariable(string name, Input<string> id, PartialEnvironmentVariableState? state = null, CustomResourceOptions? options = null)
            : base("dbtcloud:index/partialEnvironmentVariable:PartialEnvironmentVariable", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumi/pulumi-dbtcloud",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PartialEnvironmentVariable resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PartialEnvironmentVariable Get(string name, Input<string> id, PartialEnvironmentVariableState? state = null, CustomResourceOptions? options = null)
        {
            return new PartialEnvironmentVariable(name, id, state, options);
        }
    }

    public sealed class PartialEnvironmentVariableArgs : global::Pulumi.ResourceArgs
    {
        [Input("environmentValues", required: true)]
        private InputMap<string>? _environmentValues;

        /// <summary>
        /// Map from environment names to respective variable value. This field is not set as sensitive so take precautions when using secret environment variables. Only the specified environment values will be managed by this resource.
        /// </summary>
        public InputMap<string> EnvironmentValues
        {
            get => _environmentValues ?? (_environmentValues = new InputMap<string>());
            set => _environmentValues = value;
        }

        /// <summary>
        /// Name for the variable, must be unique within a project, must be prefixed with 'DBT_'
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Project ID to create or update the environment variable in
        /// </summary>
        [Input("projectId", required: true)]
        public Input<int> ProjectId { get; set; } = null!;

        public PartialEnvironmentVariableArgs()
        {
        }
        public static new PartialEnvironmentVariableArgs Empty => new PartialEnvironmentVariableArgs();
    }

    public sealed class PartialEnvironmentVariableState : global::Pulumi.ResourceArgs
    {
        [Input("environmentValues")]
        private InputMap<string>? _environmentValues;

        /// <summary>
        /// Map from environment names to respective variable value. This field is not set as sensitive so take precautions when using secret environment variables. Only the specified environment values will be managed by this resource.
        /// </summary>
        public InputMap<string> EnvironmentValues
        {
            get => _environmentValues ?? (_environmentValues = new InputMap<string>());
            set => _environmentValues = value;
        }

        /// <summary>
        /// Name for the variable, must be unique within a project, must be prefixed with 'DBT_'
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Project ID to create or update the environment variable in
        /// </summary>
        [Input("projectId")]
        public Input<int>? ProjectId { get; set; }

        public PartialEnvironmentVariableState()
        {
        }
        public static new PartialEnvironmentVariableState Empty => new PartialEnvironmentVariableState();
    }
}
