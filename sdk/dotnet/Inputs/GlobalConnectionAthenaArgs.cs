// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.DbtCloud.Inputs
{

    public sealed class GlobalConnectionAthenaArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specify the database (data catalog) to build models into (lowercase only).
        /// </summary>
        [Input("database", required: true)]
        public Input<string> Database { get; set; } = null!;

        /// <summary>
        /// Number of times to retry boto3 requests (e.g. deleting S3 files for materialized tables).
        /// </summary>
        [Input("numBoto3Retries")]
        public Input<int>? NumBoto3Retries { get; set; }

        /// <summary>
        /// Number of times to retry iceberg commit queries to fix ICEBERG*COMMIT*ERROR.
        /// </summary>
        [Input("numIcebergRetries")]
        public Input<int>? NumIcebergRetries { get; set; }

        /// <summary>
        /// Number of times to retry a failing query.
        /// </summary>
        [Input("numRetries")]
        public Input<int>? NumRetries { get; set; }

        /// <summary>
        /// Interval in seconds to use for polling the status of query results in Athena.
        /// </summary>
        [Input("pollInterval")]
        public Input<int>? PollInterval { get; set; }

        /// <summary>
        /// AWS region of your Athena instance.
        /// </summary>
        [Input("regionName", required: true)]
        public Input<string> RegionName { get; set; } = null!;

        /// <summary>
        /// Prefix for storing tables, if different from the connection's S3 staging directory.
        /// </summary>
        [Input("s3DataDir")]
        public Input<string>? S3DataDir { get; set; }

        /// <summary>
        /// How to generate table paths in the S3 data directory.
        /// </summary>
        [Input("s3DataNaming")]
        public Input<string>? S3DataNaming { get; set; }

        /// <summary>
        /// S3 location to store Athena query results and metadata.
        /// </summary>
        [Input("s3StagingDir", required: true)]
        public Input<string> S3StagingDir { get; set; } = null!;

        /// <summary>
        /// Prefix for storing temporary tables, if different from the connection's S3 data directory.
        /// </summary>
        [Input("s3TmpTableDir")]
        public Input<string>? S3TmpTableDir { get; set; }

        /// <summary>
        /// Identifier of Athena Spark workgroup for running Python models.
        /// </summary>
        [Input("sparkWorkGroup")]
        public Input<string>? SparkWorkGroup { get; set; }

        /// <summary>
        /// Identifier of Athena workgroup.
        /// </summary>
        [Input("workGroup")]
        public Input<string>? WorkGroup { get; set; }

        public GlobalConnectionAthenaArgs()
        {
        }
        public static new GlobalConnectionAthenaArgs Empty => new GlobalConnectionAthenaArgs();
    }
}
