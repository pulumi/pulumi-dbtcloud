// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.DbtCloud.Inputs
{

    public sealed class GlobalConnectionSnowflakeArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Snowflake account name
        /// </summary>
        [Input("account", required: true)]
        public Input<string> Account { get; set; } = null!;

        /// <summary>
        /// Whether to allow Snowflake OAuth for the connection. If true, the `oauth_client_id` and `oauth_client_secret` fields must be set
        /// </summary>
        [Input("allowSso")]
        public Input<bool>? AllowSso { get; set; }

        /// <summary>
        /// If true, the snowflake client will keep connections for longer than the default 4 hours. This is helpful when particularly long-running queries are executing (&gt; 4 hours)
        /// </summary>
        [Input("clientSessionKeepAlive")]
        public Input<bool>? ClientSessionKeepAlive { get; set; }

        /// <summary>
        /// The default database for the connection
        /// </summary>
        [Input("database", required: true)]
        public Input<string> Database { get; set; } = null!;

        [Input("oauthClientId")]
        private Input<string>? _oauthClientId;

        /// <summary>
        /// OAuth Client ID. Required to allow OAuth between dbt Cloud and Snowflake
        /// </summary>
        public Input<string>? OauthClientId
        {
            get => _oauthClientId;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _oauthClientId = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("oauthClientSecret")]
        private Input<string>? _oauthClientSecret;

        /// <summary>
        /// OAuth Client Secret. Required to allow OAuth between dbt Cloud and Snowflake
        /// </summary>
        public Input<string>? OauthClientSecret
        {
            get => _oauthClientSecret;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _oauthClientSecret = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// The Snowflake role to use when running queries on the connection
        /// </summary>
        [Input("role")]
        public Input<string>? Role { get; set; }

        /// <summary>
        /// The default Snowflake Warehouse to use for the connection
        /// </summary>
        [Input("warehouse", required: true)]
        public Input<string> Warehouse { get; set; } = null!;

        public GlobalConnectionSnowflakeArgs()
        {
        }
        public static new GlobalConnectionSnowflakeArgs Empty => new GlobalConnectionSnowflakeArgs();
    }
}
