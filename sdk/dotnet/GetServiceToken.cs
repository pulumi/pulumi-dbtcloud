// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.DbtCloud
{
    public static class GetServiceToken
    {
        public static Task<GetServiceTokenResult> InvokeAsync(GetServiceTokenArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetServiceTokenResult>("dbtcloud:index/getServiceToken:getServiceToken", args ?? new GetServiceTokenArgs(), options.WithDefaults());

        public static Output<GetServiceTokenResult> Invoke(GetServiceTokenInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetServiceTokenResult>("dbtcloud:index/getServiceToken:getServiceToken", args ?? new GetServiceTokenInvokeArgs(), options.WithDefaults());

        public static Output<GetServiceTokenResult> Invoke(GetServiceTokenInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetServiceTokenResult>("dbtcloud:index/getServiceToken:getServiceToken", args ?? new GetServiceTokenInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetServiceTokenArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the service token
        /// </summary>
        [Input("serviceTokenId", required: true)]
        public int ServiceTokenId { get; set; }

        [Input("serviceTokenPermissions")]
        private List<Inputs.GetServiceTokenServiceTokenPermissionArgs>? _serviceTokenPermissions;

        /// <summary>
        /// Permissions set for the service token
        /// </summary>
        public List<Inputs.GetServiceTokenServiceTokenPermissionArgs> ServiceTokenPermissions
        {
            get => _serviceTokenPermissions ?? (_serviceTokenPermissions = new List<Inputs.GetServiceTokenServiceTokenPermissionArgs>());
            set => _serviceTokenPermissions = value;
        }

        public GetServiceTokenArgs()
        {
        }
        public static new GetServiceTokenArgs Empty => new GetServiceTokenArgs();
    }

    public sealed class GetServiceTokenInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the service token
        /// </summary>
        [Input("serviceTokenId", required: true)]
        public Input<int> ServiceTokenId { get; set; } = null!;

        [Input("serviceTokenPermissions")]
        private InputList<Inputs.GetServiceTokenServiceTokenPermissionInputArgs>? _serviceTokenPermissions;

        /// <summary>
        /// Permissions set for the service token
        /// </summary>
        public InputList<Inputs.GetServiceTokenServiceTokenPermissionInputArgs> ServiceTokenPermissions
        {
            get => _serviceTokenPermissions ?? (_serviceTokenPermissions = new InputList<Inputs.GetServiceTokenServiceTokenPermissionInputArgs>());
            set => _serviceTokenPermissions = value;
        }

        public GetServiceTokenInvokeArgs()
        {
        }
        public static new GetServiceTokenInvokeArgs Empty => new GetServiceTokenInvokeArgs();
    }


    [OutputType]
    public sealed class GetServiceTokenResult
    {
        /// <summary>
        /// The ID of the service token
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Service token name
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The ID of the service token
        /// </summary>
        public readonly int ServiceTokenId;
        /// <summary>
        /// Permissions set for the service token
        /// </summary>
        public readonly ImmutableArray<Outputs.GetServiceTokenServiceTokenPermissionResult> ServiceTokenPermissions;
        /// <summary>
        /// Service token UID (part of the token)
        /// </summary>
        public readonly string Uid;

        [OutputConstructor]
        private GetServiceTokenResult(
            string id,

            string name,

            int serviceTokenId,

            ImmutableArray<Outputs.GetServiceTokenServiceTokenPermissionResult> serviceTokenPermissions,

            string uid)
        {
            Id = id;
            Name = name;
            ServiceTokenId = serviceTokenId;
            ServiceTokenPermissions = serviceTokenPermissions;
            Uid = uid;
        }
    }
}
