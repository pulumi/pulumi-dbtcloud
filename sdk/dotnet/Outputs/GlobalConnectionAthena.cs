// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.DbtCloud.Outputs
{

    [OutputType]
    public sealed class GlobalConnectionAthena
    {
        /// <summary>
        /// Specify the database (data catalog) to build models into (lowercase only).
        /// </summary>
        public readonly string Database;
        /// <summary>
        /// Number of times to retry boto3 requests (e.g. deleting S3 files for materialized tables).
        /// </summary>
        public readonly int? NumBoto3Retries;
        /// <summary>
        /// Number of times to retry iceberg commit queries to fix ICEBERG*COMMIT*ERROR.
        /// </summary>
        public readonly int? NumIcebergRetries;
        /// <summary>
        /// Number of times to retry a failing query.
        /// </summary>
        public readonly int? NumRetries;
        /// <summary>
        /// Interval in seconds to use for polling the status of query results in Athena.
        /// </summary>
        public readonly int? PollInterval;
        /// <summary>
        /// AWS region of your Athena instance.
        /// </summary>
        public readonly string RegionName;
        /// <summary>
        /// Prefix for storing tables, if different from the connection's S3 staging directory.
        /// </summary>
        public readonly string? S3DataDir;
        /// <summary>
        /// How to generate table paths in the S3 data directory.
        /// </summary>
        public readonly string? S3DataNaming;
        /// <summary>
        /// S3 location to store Athena query results and metadata.
        /// </summary>
        public readonly string S3StagingDir;
        /// <summary>
        /// Prefix for storing temporary tables, if different from the connection's S3 data directory.
        /// </summary>
        public readonly string? S3TmpTableDir;
        /// <summary>
        /// Identifier of Athena Spark workgroup for running Python models.
        /// </summary>
        public readonly string? SparkWorkGroup;
        /// <summary>
        /// Identifier of Athena workgroup.
        /// </summary>
        public readonly string? WorkGroup;

        [OutputConstructor]
        private GlobalConnectionAthena(
            string database,

            int? numBoto3Retries,

            int? numIcebergRetries,

            int? numRetries,

            int? pollInterval,

            string regionName,

            string? s3DataDir,

            string? s3DataNaming,

            string s3StagingDir,

            string? s3TmpTableDir,

            string? sparkWorkGroup,

            string? workGroup)
        {
            Database = database;
            NumBoto3Retries = numBoto3Retries;
            NumIcebergRetries = numIcebergRetries;
            NumRetries = numRetries;
            PollInterval = pollInterval;
            RegionName = regionName;
            S3DataDir = s3DataDir;
            S3DataNaming = s3DataNaming;
            S3StagingDir = s3StagingDir;
            S3TmpTableDir = s3TmpTableDir;
            SparkWorkGroup = sparkWorkGroup;
            WorkGroup = workGroup;
        }
    }
}
