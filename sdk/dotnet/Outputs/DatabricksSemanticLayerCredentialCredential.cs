// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.DbtCloud.Outputs
{

    [OutputType]
    public sealed class DatabricksSemanticLayerCredentialCredential
    {
        /// <summary>
        /// The type of the adapter (databricks or spark). Optional only when semantic*layer*credential is set to true; otherwise, this field is required.
        /// </summary>
        public readonly string? AdapterType;
        /// <summary>
        /// The catalog where to create models (only for the databricks adapter)
        /// </summary>
        public readonly string? Catalog;
        /// <summary>
        /// The system Databricks credential ID
        /// </summary>
        public readonly int? CredentialId;
        /// <summary>
        /// The ID of this resource. Contains the project ID and the credential ID.
        /// </summary>
        public readonly string? Id;
        /// <summary>
        /// Project ID to create the Databricks credential in
        /// </summary>
        public readonly int ProjectId;
        /// <summary>
        /// The schema where to create models. Optional only when semantic*layer*credential is set to true; otherwise, this field is required.
        /// </summary>
        public readonly string? Schema;
        /// <summary>
        /// This field indicates that the credential is used as part of the Semantic Layer configuration. It is used to create a Databricks credential for the Semantic Layer.
        /// </summary>
        public readonly bool? SemanticLayerCredential;
        /// <summary>
        /// Target name
        /// </summary>
        public readonly string? TargetName;
        /// <summary>
        /// Token for Databricks user
        /// </summary>
        public readonly string Token;

        [OutputConstructor]
        private DatabricksSemanticLayerCredentialCredential(
            string? adapterType,

            string? catalog,

            int? credentialId,

            string? id,

            int projectId,

            string? schema,

            bool? semanticLayerCredential,

            string? targetName,

            string token)
        {
            AdapterType = adapterType;
            Catalog = catalog;
            CredentialId = credentialId;
            Id = id;
            ProjectId = projectId;
            Schema = schema;
            SemanticLayerCredential = semanticLayerCredential;
            TargetName = targetName;
            Token = token;
        }
    }
}
