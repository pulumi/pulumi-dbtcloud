// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.DbtCloud.Outputs
{

    [OutputType]
    public sealed class GlobalConnectionBigquery
    {
        /// <summary>
        /// OAuth Client ID
        /// </summary>
        public readonly string? ApplicationId;
        /// <summary>
        /// OAuth Client Secret
        /// </summary>
        public readonly string? ApplicationSecret;
        /// <summary>
        /// Auth Provider X509 Cert URL for the Service Account
        /// </summary>
        public readonly string AuthProviderX509CertUrl;
        /// <summary>
        /// Auth URI for the Service Account
        /// </summary>
        public readonly string AuthUri;
        /// <summary>
        /// Service Account email
        /// </summary>
        public readonly string ClientEmail;
        /// <summary>
        /// Client ID of the Service Account
        /// </summary>
        public readonly string ClientId;
        /// <summary>
        /// Client X509 Cert URL for the Service Account
        /// </summary>
        public readonly string ClientX509CertUrl;
        /// <summary>
        /// Dataproc cluster name for PySpark workloads
        /// </summary>
        public readonly string? DataprocClusterName;
        /// <summary>
        /// Google Cloud region for PySpark workloads on Dataproc
        /// </summary>
        public readonly string? DataprocRegion;
        /// <summary>
        /// Project to bill for query execution
        /// </summary>
        public readonly string? ExecutionProject;
        /// <summary>
        /// The GCP project ID to use for the connection
        /// </summary>
        public readonly string GcpProjectId;
        /// <summary>
        /// URI for a Google Cloud Storage bucket to host Python code executed via Datapro
        /// </summary>
        public readonly string? GcsBucket;
        /// <summary>
        /// Service Account to impersonate when running queries
        /// </summary>
        public readonly string? ImpersonateServiceAccount;
        /// <summary>
        /// Maximum timeout for the job creation step
        /// </summary>
        public readonly int? JobCreationTimeoutSeconds;
        /// <summary>
        /// Timeout in seconds for job execution, to be used for the BigqueryV1 adapter
        /// </summary>
        public readonly int? JobExecutionTimeoutSeconds;
        /// <summary>
        /// Total number of seconds to wait while retrying the same query
        /// </summary>
        public readonly int? JobRetryDeadlineSeconds;
        /// <summary>
        /// Location to create new Datasets in
        /// </summary>
        public readonly string? Location;
        /// <summary>
        /// Max number of bytes that can be billed for a given BigQuery query
        /// </summary>
        public readonly int? MaximumBytesBilled;
        /// <summary>
        /// The priority with which to execute BigQuery queries (batch or interactive)
        /// </summary>
        public readonly string? Priority;
        /// <summary>
        /// Private Key for the Service Account
        /// </summary>
        public readonly string PrivateKey;
        /// <summary>
        /// Private Key ID for the Service Account
        /// </summary>
        public readonly string PrivateKeyId;
        /// <summary>
        /// Number of retries for queries
        /// </summary>
        public readonly int? Retries;
        /// <summary>
        /// OAuth scopes for the BigQuery connection
        /// </summary>
        public readonly ImmutableArray<string> Scopes;
        /// <summary>
        /// Timeout in seconds for queries, to be used ONLY for the BigqueryV0 adapter
        /// </summary>
        public readonly int? TimeoutSeconds;
        /// <summary>
        /// Token URI for the Service Account
        /// </summary>
        public readonly string TokenUri;
        /// <summary>
        /// Whether to use the latest BigqueryV1 adapter (use this for BQ WIF). If true, the `JobExecutionTimeoutSeconds` field will be used. Warning! changing the adapter version (from legacy to latest or vice versa) is not supported.
        /// </summary>
        public readonly bool? UseLatestAdapter;

        [OutputConstructor]
        private GlobalConnectionBigquery(
            string? applicationId,

            string? applicationSecret,

            string authProviderX509CertUrl,

            string authUri,

            string clientEmail,

            string clientId,

            string clientX509CertUrl,

            string? dataprocClusterName,

            string? dataprocRegion,

            string? executionProject,

            string gcpProjectId,

            string? gcsBucket,

            string? impersonateServiceAccount,

            int? jobCreationTimeoutSeconds,

            int? jobExecutionTimeoutSeconds,

            int? jobRetryDeadlineSeconds,

            string? location,

            int? maximumBytesBilled,

            string? priority,

            string privateKey,

            string privateKeyId,

            int? retries,

            ImmutableArray<string> scopes,

            int? timeoutSeconds,

            string tokenUri,

            bool? useLatestAdapter)
        {
            ApplicationId = applicationId;
            ApplicationSecret = applicationSecret;
            AuthProviderX509CertUrl = authProviderX509CertUrl;
            AuthUri = authUri;
            ClientEmail = clientEmail;
            ClientId = clientId;
            ClientX509CertUrl = clientX509CertUrl;
            DataprocClusterName = dataprocClusterName;
            DataprocRegion = dataprocRegion;
            ExecutionProject = executionProject;
            GcpProjectId = gcpProjectId;
            GcsBucket = gcsBucket;
            ImpersonateServiceAccount = impersonateServiceAccount;
            JobCreationTimeoutSeconds = jobCreationTimeoutSeconds;
            JobExecutionTimeoutSeconds = jobExecutionTimeoutSeconds;
            JobRetryDeadlineSeconds = jobRetryDeadlineSeconds;
            Location = location;
            MaximumBytesBilled = maximumBytesBilled;
            Priority = priority;
            PrivateKey = privateKey;
            PrivateKeyId = privateKeyId;
            Retries = retries;
            Scopes = scopes;
            TimeoutSeconds = timeoutSeconds;
            TokenUri = tokenUri;
            UseLatestAdapter = useLatestAdapter;
        }
    }
}
