// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.DbtCloud
{
    /// <summary>
    /// ## Example Usage
    /// </summary>
    [DbtCloudResourceType("dbtcloud:index/groupPartialPermissions:GroupPartialPermissions")]
    public partial class GroupPartialPermissions : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Whether the group will be assigned by default to users. The value needs to be the same for all partial permissions for the same group.
        /// </summary>
        [Output("assignByDefault")]
        public Output<bool> AssignByDefault { get; private set; } = null!;

        /// <summary>
        /// Partial permissions for the group. Those permissions will be added/removed when config is added/removed.
        /// </summary>
        [Output("groupPermissions")]
        public Output<ImmutableArray<Outputs.GroupPartialPermissionsGroupPermission>> GroupPermissions { get; private set; } = null!;

        /// <summary>
        /// The name of the group. This is used to identify an existing group
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Mapping groups from the IdP. At the moment the complete list needs to be provided in each partial permission for the same group.
        /// </summary>
        [Output("ssoMappingGroups")]
        public Output<ImmutableArray<string>> SsoMappingGroups { get; private set; } = null!;


        /// <summary>
        /// Create a GroupPartialPermissions resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public GroupPartialPermissions(string name, GroupPartialPermissionsArgs? args = null, CustomResourceOptions? options = null)
            : base("dbtcloud:index/groupPartialPermissions:GroupPartialPermissions", name, args ?? new GroupPartialPermissionsArgs(), MakeResourceOptions(options, ""))
        {
        }

        private GroupPartialPermissions(string name, Input<string> id, GroupPartialPermissionsState? state = null, CustomResourceOptions? options = null)
            : base("dbtcloud:index/groupPartialPermissions:GroupPartialPermissions", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumi/pulumi-dbtcloud",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing GroupPartialPermissions resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static GroupPartialPermissions Get(string name, Input<string> id, GroupPartialPermissionsState? state = null, CustomResourceOptions? options = null)
        {
            return new GroupPartialPermissions(name, id, state, options);
        }
    }

    public sealed class GroupPartialPermissionsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether the group will be assigned by default to users. The value needs to be the same for all partial permissions for the same group.
        /// </summary>
        [Input("assignByDefault")]
        public Input<bool>? AssignByDefault { get; set; }

        [Input("groupPermissions")]
        private InputList<Inputs.GroupPartialPermissionsGroupPermissionArgs>? _groupPermissions;

        /// <summary>
        /// Partial permissions for the group. Those permissions will be added/removed when config is added/removed.
        /// </summary>
        public InputList<Inputs.GroupPartialPermissionsGroupPermissionArgs> GroupPermissions
        {
            get => _groupPermissions ?? (_groupPermissions = new InputList<Inputs.GroupPartialPermissionsGroupPermissionArgs>());
            set => _groupPermissions = value;
        }

        /// <summary>
        /// The name of the group. This is used to identify an existing group
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("ssoMappingGroups")]
        private InputList<string>? _ssoMappingGroups;

        /// <summary>
        /// Mapping groups from the IdP. At the moment the complete list needs to be provided in each partial permission for the same group.
        /// </summary>
        public InputList<string> SsoMappingGroups
        {
            get => _ssoMappingGroups ?? (_ssoMappingGroups = new InputList<string>());
            set => _ssoMappingGroups = value;
        }

        public GroupPartialPermissionsArgs()
        {
        }
        public static new GroupPartialPermissionsArgs Empty => new GroupPartialPermissionsArgs();
    }

    public sealed class GroupPartialPermissionsState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether the group will be assigned by default to users. The value needs to be the same for all partial permissions for the same group.
        /// </summary>
        [Input("assignByDefault")]
        public Input<bool>? AssignByDefault { get; set; }

        [Input("groupPermissions")]
        private InputList<Inputs.GroupPartialPermissionsGroupPermissionGetArgs>? _groupPermissions;

        /// <summary>
        /// Partial permissions for the group. Those permissions will be added/removed when config is added/removed.
        /// </summary>
        public InputList<Inputs.GroupPartialPermissionsGroupPermissionGetArgs> GroupPermissions
        {
            get => _groupPermissions ?? (_groupPermissions = new InputList<Inputs.GroupPartialPermissionsGroupPermissionGetArgs>());
            set => _groupPermissions = value;
        }

        /// <summary>
        /// The name of the group. This is used to identify an existing group
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("ssoMappingGroups")]
        private InputList<string>? _ssoMappingGroups;

        /// <summary>
        /// Mapping groups from the IdP. At the moment the complete list needs to be provided in each partial permission for the same group.
        /// </summary>
        public InputList<string> SsoMappingGroups
        {
            get => _ssoMappingGroups ?? (_ssoMappingGroups = new InputList<string>());
            set => _ssoMappingGroups = value;
        }

        public GroupPartialPermissionsState()
        {
        }
        public static new GroupPartialPermissionsState Empty => new GroupPartialPermissionsState();
    }
}
