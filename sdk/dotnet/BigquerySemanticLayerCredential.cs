// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.DbtCloud
{
    /// <summary>
    /// BigQuery credential resource. This resource is composed of a BigQuery credential and a Semantic Layer configuration. It is used to create a BigQuery credential for the Semantic Layer.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using DbtCloud = Pulumi.DbtCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new DbtCloud.BigquerySemanticLayerCredential("example", new()
    ///     {
    ///         Configuration = new DbtCloud.Inputs.BigquerySemanticLayerCredentialConfigurationArgs
    ///         {
    ///             Project_id = projectId,
    ///             Name = "BigQuery SL Credential",
    ///             Adapter_version = "bigquery_v0",
    ///         },
    ///         Credential = new DbtCloud.Inputs.BigquerySemanticLayerCredentialCredentialArgs
    ///         {
    ///             Project_id = projectId,
    ///             Is_active = true,
    ///             Num_threads = numThreads,
    ///             Dataset = dataset,
    ///         },
    ///         PrivateKeyId = privateKeyId,
    ///         PrivateKey = privateKey,
    ///         ClientEmail = clientEmail,
    ///         ClientId = clientId,
    ///         AuthUri = authUri,
    ///         TokenUri = tokenUri,
    ///         AuthProviderX509CertUrl = authProviderX509CertUrl,
    ///         ClientX509CertUrl = clientX509CertUrl,
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [DbtCloudResourceType("dbtcloud:index/bigquerySemanticLayerCredential:BigquerySemanticLayerCredential")]
    public partial class BigquerySemanticLayerCredential : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Auth Provider X509 Cert URL for the Service Account
        /// </summary>
        [Output("authProviderX509CertUrl")]
        public Output<string> AuthProviderX509CertUrl { get; private set; } = null!;

        /// <summary>
        /// Auth URI for the Service Account
        /// </summary>
        [Output("authUri")]
        public Output<string> AuthUri { get; private set; } = null!;

        /// <summary>
        /// Service Account email
        /// </summary>
        [Output("clientEmail")]
        public Output<string> ClientEmail { get; private set; } = null!;

        /// <summary>
        /// Client ID of the Service Account
        /// </summary>
        [Output("clientId")]
        public Output<string> ClientId { get; private set; } = null!;

        /// <summary>
        /// Client X509 Cert URL for the Service Account
        /// </summary>
        [Output("clientX509CertUrl")]
        public Output<string> ClientX509CertUrl { get; private set; } = null!;

        /// <summary>
        /// Semantic Layer credential configuration details.
        /// </summary>
        [Output("configuration")]
        public Output<Outputs.BigquerySemanticLayerCredentialConfiguration> Configuration { get; private set; } = null!;

        /// <summary>
        /// BigQuery credential details, but used in the context of the Semantic Layer.
        /// </summary>
        [Output("credential")]
        public Output<Outputs.BigquerySemanticLayerCredentialCredential> Credential { get; private set; } = null!;

        /// <summary>
        /// Private Key for the Service Account
        /// </summary>
        [Output("privateKey")]
        public Output<string> PrivateKey { get; private set; } = null!;

        /// <summary>
        /// Private Key ID for the Service Account
        /// </summary>
        [Output("privateKeyId")]
        public Output<string> PrivateKeyId { get; private set; } = null!;

        /// <summary>
        /// Token URI for the Service Account
        /// </summary>
        [Output("tokenUri")]
        public Output<string> TokenUri { get; private set; } = null!;


        /// <summary>
        /// Create a BigquerySemanticLayerCredential resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public BigquerySemanticLayerCredential(string name, BigquerySemanticLayerCredentialArgs args, CustomResourceOptions? options = null)
            : base("dbtcloud:index/bigquerySemanticLayerCredential:BigquerySemanticLayerCredential", name, args ?? new BigquerySemanticLayerCredentialArgs(), MakeResourceOptions(options, ""))
        {
        }

        private BigquerySemanticLayerCredential(string name, Input<string> id, BigquerySemanticLayerCredentialState? state = null, CustomResourceOptions? options = null)
            : base("dbtcloud:index/bigquerySemanticLayerCredential:BigquerySemanticLayerCredential", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumi/pulumi-dbtcloud",
                AdditionalSecretOutputs =
                {
                    "privateKey",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing BigquerySemanticLayerCredential resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static BigquerySemanticLayerCredential Get(string name, Input<string> id, BigquerySemanticLayerCredentialState? state = null, CustomResourceOptions? options = null)
        {
            return new BigquerySemanticLayerCredential(name, id, state, options);
        }
    }

    public sealed class BigquerySemanticLayerCredentialArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Auth Provider X509 Cert URL for the Service Account
        /// </summary>
        [Input("authProviderX509CertUrl", required: true)]
        public Input<string> AuthProviderX509CertUrl { get; set; } = null!;

        /// <summary>
        /// Auth URI for the Service Account
        /// </summary>
        [Input("authUri", required: true)]
        public Input<string> AuthUri { get; set; } = null!;

        /// <summary>
        /// Service Account email
        /// </summary>
        [Input("clientEmail", required: true)]
        public Input<string> ClientEmail { get; set; } = null!;

        /// <summary>
        /// Client ID of the Service Account
        /// </summary>
        [Input("clientId", required: true)]
        public Input<string> ClientId { get; set; } = null!;

        /// <summary>
        /// Client X509 Cert URL for the Service Account
        /// </summary>
        [Input("clientX509CertUrl", required: true)]
        public Input<string> ClientX509CertUrl { get; set; } = null!;

        /// <summary>
        /// Semantic Layer credential configuration details.
        /// </summary>
        [Input("configuration", required: true)]
        public Input<Inputs.BigquerySemanticLayerCredentialConfigurationArgs> Configuration { get; set; } = null!;

        /// <summary>
        /// BigQuery credential details, but used in the context of the Semantic Layer.
        /// </summary>
        [Input("credential", required: true)]
        public Input<Inputs.BigquerySemanticLayerCredentialCredentialArgs> Credential { get; set; } = null!;

        [Input("privateKey", required: true)]
        private Input<string>? _privateKey;

        /// <summary>
        /// Private Key for the Service Account
        /// </summary>
        public Input<string>? PrivateKey
        {
            get => _privateKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _privateKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Private Key ID for the Service Account
        /// </summary>
        [Input("privateKeyId", required: true)]
        public Input<string> PrivateKeyId { get; set; } = null!;

        /// <summary>
        /// Token URI for the Service Account
        /// </summary>
        [Input("tokenUri", required: true)]
        public Input<string> TokenUri { get; set; } = null!;

        public BigquerySemanticLayerCredentialArgs()
        {
        }
        public static new BigquerySemanticLayerCredentialArgs Empty => new BigquerySemanticLayerCredentialArgs();
    }

    public sealed class BigquerySemanticLayerCredentialState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Auth Provider X509 Cert URL for the Service Account
        /// </summary>
        [Input("authProviderX509CertUrl")]
        public Input<string>? AuthProviderX509CertUrl { get; set; }

        /// <summary>
        /// Auth URI for the Service Account
        /// </summary>
        [Input("authUri")]
        public Input<string>? AuthUri { get; set; }

        /// <summary>
        /// Service Account email
        /// </summary>
        [Input("clientEmail")]
        public Input<string>? ClientEmail { get; set; }

        /// <summary>
        /// Client ID of the Service Account
        /// </summary>
        [Input("clientId")]
        public Input<string>? ClientId { get; set; }

        /// <summary>
        /// Client X509 Cert URL for the Service Account
        /// </summary>
        [Input("clientX509CertUrl")]
        public Input<string>? ClientX509CertUrl { get; set; }

        /// <summary>
        /// Semantic Layer credential configuration details.
        /// </summary>
        [Input("configuration")]
        public Input<Inputs.BigquerySemanticLayerCredentialConfigurationGetArgs>? Configuration { get; set; }

        /// <summary>
        /// BigQuery credential details, but used in the context of the Semantic Layer.
        /// </summary>
        [Input("credential")]
        public Input<Inputs.BigquerySemanticLayerCredentialCredentialGetArgs>? Credential { get; set; }

        [Input("privateKey")]
        private Input<string>? _privateKey;

        /// <summary>
        /// Private Key for the Service Account
        /// </summary>
        public Input<string>? PrivateKey
        {
            get => _privateKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _privateKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Private Key ID for the Service Account
        /// </summary>
        [Input("privateKeyId")]
        public Input<string>? PrivateKeyId { get; set; }

        /// <summary>
        /// Token URI for the Service Account
        /// </summary>
        [Input("tokenUri")]
        public Input<string>? TokenUri { get; set; }

        public BigquerySemanticLayerCredentialState()
        {
        }
        public static new BigquerySemanticLayerCredentialState Empty => new BigquerySemanticLayerCredentialState();
    }
}
