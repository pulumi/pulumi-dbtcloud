// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.DbtCloud
{
    /// <summary>
    /// Postgres credential resource. This resource is composed of a Postgres credential and a Semantic Layer configuration. It is used to create a Postgres credential for the Semantic Layer.
    /// 
    /// ## Example Usage
    /// 
    /// ## Import
    /// 
    /// using import blocks (requires Terraform &gt;= 1.5)
    /// 
    /// import {
    /// 
    ///   to = dbtcloud_postgres_semantic_layer_credential.example
    /// 
    ///   id = "credential_id"
    /// 
    /// }
    /// 
    /// import {
    /// 
    ///   to = dbtcloud_postgres_semantic_layer_credential.example
    /// 
    ///   id = "12345"
    /// 
    /// }
    /// 
    /// using the older import command
    /// 
    /// ```sh
    /// $ pulumi import dbtcloud:index/postgresSemanticLayerCredential:PostgresSemanticLayerCredential example "credential_id"
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import dbtcloud:index/postgresSemanticLayerCredential:PostgresSemanticLayerCredential example 12345
    /// ```
    /// </summary>
    [DbtCloudResourceType("dbtcloud:index/postgresSemanticLayerCredential:PostgresSemanticLayerCredential")]
    public partial class PostgresSemanticLayerCredential : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Semantic Layer credential configuration details.
        /// </summary>
        [Output("configuration")]
        public Output<Outputs.PostgresSemanticLayerCredentialConfiguration> Configuration { get; private set; } = null!;

        /// <summary>
        /// Postgres credential details, but used in the context of the Semantic Layer.
        /// </summary>
        [Output("credential")]
        public Output<Outputs.PostgresSemanticLayerCredentialCredential> Credential { get; private set; } = null!;


        /// <summary>
        /// Create a PostgresSemanticLayerCredential resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PostgresSemanticLayerCredential(string name, PostgresSemanticLayerCredentialArgs args, CustomResourceOptions? options = null)
            : base("dbtcloud:index/postgresSemanticLayerCredential:PostgresSemanticLayerCredential", name, args ?? new PostgresSemanticLayerCredentialArgs(), MakeResourceOptions(options, ""))
        {
        }

        private PostgresSemanticLayerCredential(string name, Input<string> id, PostgresSemanticLayerCredentialState? state = null, CustomResourceOptions? options = null)
            : base("dbtcloud:index/postgresSemanticLayerCredential:PostgresSemanticLayerCredential", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumi/pulumi-dbtcloud",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PostgresSemanticLayerCredential resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PostgresSemanticLayerCredential Get(string name, Input<string> id, PostgresSemanticLayerCredentialState? state = null, CustomResourceOptions? options = null)
        {
            return new PostgresSemanticLayerCredential(name, id, state, options);
        }
    }

    public sealed class PostgresSemanticLayerCredentialArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Semantic Layer credential configuration details.
        /// </summary>
        [Input("configuration", required: true)]
        public Input<Inputs.PostgresSemanticLayerCredentialConfigurationArgs> Configuration { get; set; } = null!;

        /// <summary>
        /// Postgres credential details, but used in the context of the Semantic Layer.
        /// </summary>
        [Input("credential", required: true)]
        public Input<Inputs.PostgresSemanticLayerCredentialCredentialArgs> Credential { get; set; } = null!;

        public PostgresSemanticLayerCredentialArgs()
        {
        }
        public static new PostgresSemanticLayerCredentialArgs Empty => new PostgresSemanticLayerCredentialArgs();
    }

    public sealed class PostgresSemanticLayerCredentialState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Semantic Layer credential configuration details.
        /// </summary>
        [Input("configuration")]
        public Input<Inputs.PostgresSemanticLayerCredentialConfigurationGetArgs>? Configuration { get; set; }

        /// <summary>
        /// Postgres credential details, but used in the context of the Semantic Layer.
        /// </summary>
        [Input("credential")]
        public Input<Inputs.PostgresSemanticLayerCredentialCredentialGetArgs>? Credential { get; set; }

        public PostgresSemanticLayerCredentialState()
        {
        }
        public static new PostgresSemanticLayerCredentialState Empty => new PostgresSemanticLayerCredentialState();
    }
}
