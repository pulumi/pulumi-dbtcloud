// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.DbtCloud
{
    /// <summary>
    /// Setup lineage integration for dbt Cloud to automatically fetch lineage from external BI tools in dbt Explorer. Currently supports Tableau.
    /// 
    /// This resource requires having an environment tagged as production already created for you project.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using DbtCloud = Pulumi.DbtCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     // the resource can only be configured when a Prod environment has been set
    ///     // so, you might want to explicitly set the dependency on your Prod environment resource
    ///     var myLineage = new DbtCloud.LineageIntegration("my_lineage", new()
    ///     {
    ///         ProjectId = myProject.Id,
    ///         Host = "my.host.com",
    ///         SiteId = "mysiteid",
    ///         TokenName = "my-token-name",
    ///         Token = "my-sensitive-token",
    ///     }, new CustomResourceOptions
    ///     {
    ///         DependsOn =
    ///         {
    ///             myProdEnv,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// using  import blocks (requires Terraform &gt;= 1.5)
    /// 
    /// import {
    /// 
    ///   to = dbtcloud_lineage_integration.my_lineage_integration
    /// 
    ///   id = "projet_id:lineage_integration_id"
    /// 
    /// }
    /// 
    /// import {
    /// 
    ///   to = dbtcloud_lineage_integration.my_lineage_integration
    /// 
    ///   id = "123:4567"
    /// 
    /// }
    /// 
    /// using the older import command
    /// 
    /// ```sh
    /// $ pulumi import dbtcloud:index/lineageIntegration:LineageIntegration my_lineage_integration "projet_id:lineage_integration_id"
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import dbtcloud:index/lineageIntegration:LineageIntegration my_lineage_integration 123:4567
    /// ```
    /// </summary>
    [DbtCloudResourceType("dbtcloud:index/lineageIntegration:LineageIntegration")]
    public partial class LineageIntegration : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The URL of the BI server (see docs for more details)
        /// </summary>
        [Output("host")]
        public Output<string> Host { get; private set; } = null!;

        /// <summary>
        /// The ID of the lineage integration
        /// </summary>
        [Output("lineageIntegrationId")]
        public Output<int> LineageIntegrationId { get; private set; } = null!;

        /// <summary>
        /// The integration type. Today only 'tableau' is supported
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The dbt Cloud project ID for the integration
        /// </summary>
        [Output("projectId")]
        public Output<int> ProjectId { get; private set; } = null!;

        /// <summary>
        /// The sitename for the collections of dashboards (see docs for more details)
        /// </summary>
        [Output("siteId")]
        public Output<string> SiteId { get; private set; } = null!;

        /// <summary>
        /// The secret token value to use to authenticate to the BI server
        /// </summary>
        [Output("token")]
        public Output<string> Token { get; private set; } = null!;

        /// <summary>
        /// The token to use to authenticate to the BI server
        /// </summary>
        [Output("tokenName")]
        public Output<string> TokenName { get; private set; } = null!;


        /// <summary>
        /// Create a LineageIntegration resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public LineageIntegration(string name, LineageIntegrationArgs args, CustomResourceOptions? options = null)
            : base("dbtcloud:index/lineageIntegration:LineageIntegration", name, args ?? new LineageIntegrationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private LineageIntegration(string name, Input<string> id, LineageIntegrationState? state = null, CustomResourceOptions? options = null)
            : base("dbtcloud:index/lineageIntegration:LineageIntegration", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumi/pulumi-dbtcloud",
                AdditionalSecretOutputs =
                {
                    "token",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing LineageIntegration resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static LineageIntegration Get(string name, Input<string> id, LineageIntegrationState? state = null, CustomResourceOptions? options = null)
        {
            return new LineageIntegration(name, id, state, options);
        }
    }

    public sealed class LineageIntegrationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The URL of the BI server (see docs for more details)
        /// </summary>
        [Input("host", required: true)]
        public Input<string> Host { get; set; } = null!;

        /// <summary>
        /// The dbt Cloud project ID for the integration
        /// </summary>
        [Input("projectId", required: true)]
        public Input<int> ProjectId { get; set; } = null!;

        /// <summary>
        /// The sitename for the collections of dashboards (see docs for more details)
        /// </summary>
        [Input("siteId", required: true)]
        public Input<string> SiteId { get; set; } = null!;

        [Input("token", required: true)]
        private Input<string>? _token;

        /// <summary>
        /// The secret token value to use to authenticate to the BI server
        /// </summary>
        public Input<string>? Token
        {
            get => _token;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _token = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// The token to use to authenticate to the BI server
        /// </summary>
        [Input("tokenName", required: true)]
        public Input<string> TokenName { get; set; } = null!;

        public LineageIntegrationArgs()
        {
        }
        public static new LineageIntegrationArgs Empty => new LineageIntegrationArgs();
    }

    public sealed class LineageIntegrationState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The URL of the BI server (see docs for more details)
        /// </summary>
        [Input("host")]
        public Input<string>? Host { get; set; }

        /// <summary>
        /// The ID of the lineage integration
        /// </summary>
        [Input("lineageIntegrationId")]
        public Input<int>? LineageIntegrationId { get; set; }

        /// <summary>
        /// The integration type. Today only 'tableau' is supported
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The dbt Cloud project ID for the integration
        /// </summary>
        [Input("projectId")]
        public Input<int>? ProjectId { get; set; }

        /// <summary>
        /// The sitename for the collections of dashboards (see docs for more details)
        /// </summary>
        [Input("siteId")]
        public Input<string>? SiteId { get; set; }

        [Input("token")]
        private Input<string>? _token;

        /// <summary>
        /// The secret token value to use to authenticate to the BI server
        /// </summary>
        public Input<string>? Token
        {
            get => _token;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _token = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// The token to use to authenticate to the BI server
        /// </summary>
        [Input("tokenName")]
        public Input<string>? TokenName { get; set; }

        public LineageIntegrationState()
        {
        }
        public static new LineageIntegrationState Empty => new LineageIntegrationState();
    }
}
