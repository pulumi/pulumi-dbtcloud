// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.DbtCloud
{
    /// <summary>
    /// Manages dbt Cloud global features at the account level, like Advanced CI. The same feature should not be configured in different resources to avoid conflicts.
    /// 
    /// When destroying the resource or removing the value for an attribute, the features status will not be changed. Deactivating features will require applying them wih the value set to `false`.
    /// </summary>
    [DbtCloudResourceType("dbtcloud:index/accountFeatures:AccountFeatures")]
    public partial class AccountFeatures : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Whether advanced CI is enabled.
        /// </summary>
        [Output("advancedCi")]
        public Output<bool> AdvancedCi { get; private set; } = null!;

        /// <summary>
        /// Whether partial parsing is enabled.
        /// </summary>
        [Output("partialParsing")]
        public Output<bool> PartialParsing { get; private set; } = null!;

        /// <summary>
        /// Whether repository caching is enabled.
        /// </summary>
        [Output("repoCaching")]
        public Output<bool> RepoCaching { get; private set; } = null!;


        /// <summary>
        /// Create a AccountFeatures resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AccountFeatures(string name, AccountFeaturesArgs? args = null, CustomResourceOptions? options = null)
            : base("dbtcloud:index/accountFeatures:AccountFeatures", name, args ?? new AccountFeaturesArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AccountFeatures(string name, Input<string> id, AccountFeaturesState? state = null, CustomResourceOptions? options = null)
            : base("dbtcloud:index/accountFeatures:AccountFeatures", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumi/pulumi-dbtcloud",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AccountFeatures resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AccountFeatures Get(string name, Input<string> id, AccountFeaturesState? state = null, CustomResourceOptions? options = null)
        {
            return new AccountFeatures(name, id, state, options);
        }
    }

    public sealed class AccountFeaturesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether advanced CI is enabled.
        /// </summary>
        [Input("advancedCi")]
        public Input<bool>? AdvancedCi { get; set; }

        /// <summary>
        /// Whether partial parsing is enabled.
        /// </summary>
        [Input("partialParsing")]
        public Input<bool>? PartialParsing { get; set; }

        /// <summary>
        /// Whether repository caching is enabled.
        /// </summary>
        [Input("repoCaching")]
        public Input<bool>? RepoCaching { get; set; }

        public AccountFeaturesArgs()
        {
        }
        public static new AccountFeaturesArgs Empty => new AccountFeaturesArgs();
    }

    public sealed class AccountFeaturesState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether advanced CI is enabled.
        /// </summary>
        [Input("advancedCi")]
        public Input<bool>? AdvancedCi { get; set; }

        /// <summary>
        /// Whether partial parsing is enabled.
        /// </summary>
        [Input("partialParsing")]
        public Input<bool>? PartialParsing { get; set; }

        /// <summary>
        /// Whether repository caching is enabled.
        /// </summary>
        [Input("repoCaching")]
        public Input<bool>? RepoCaching { get; set; }

        public AccountFeaturesState()
        {
        }
        public static new AccountFeaturesState Empty => new AccountFeaturesState();
    }
}
