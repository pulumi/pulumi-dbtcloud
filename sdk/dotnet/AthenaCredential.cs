// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.DbtCloud
{
    /// <summary>
    /// Athena credential resource
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using DbtCloud = Pulumi.DbtCloud;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new DbtCloud.AthenaCredential("example", new()
    ///     {
    ///         ProjectId = exampleDbtcloudProject.Id,
    ///         AwsAccessKeyId = "your-access-key-id",
    ///         AwsSecretAccessKey = "your-secret-access-key",
    ///         Schema = "your_schema",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// using  import blocks (requires Terraform &gt;= 1.5)
    /// 
    /// import {
    /// 
    ///   to = dbtcloud_athena_credential.my_athena_credential
    /// 
    ///   id = "project_id:credential_id"
    /// 
    /// }
    /// 
    /// import {
    /// 
    ///   to = dbtcloud_athena_credential.my_athena_credential
    /// 
    ///   id = "12345:6789"
    /// 
    /// }
    /// 
    /// using the older import command
    /// 
    /// ```sh
    /// $ pulumi import dbtcloud:index/athenaCredential:AthenaCredential my_athena_credential "project_id:credential_id"
    /// ```
    /// 
    /// ```sh
    /// $ pulumi import dbtcloud:index/athenaCredential:AthenaCredential my_athena_credential 12345:6789
    /// ```
    /// </summary>
    [DbtCloudResourceType("dbtcloud:index/athenaCredential:AthenaCredential")]
    public partial class AthenaCredential : global::Pulumi.CustomResource
    {
        /// <summary>
        /// AWS access key ID for Athena user
        /// </summary>
        [Output("awsAccessKeyId")]
        public Output<string> AwsAccessKeyId { get; private set; } = null!;

        /// <summary>
        /// AWS secret access key for Athena user
        /// </summary>
        [Output("awsSecretAccessKey")]
        public Output<string> AwsSecretAccessKey { get; private set; } = null!;

        /// <summary>
        /// The internal credential ID
        /// </summary>
        [Output("credentialId")]
        public Output<int> CredentialId { get; private set; } = null!;

        /// <summary>
        /// Project ID to create the Athena credential in
        /// </summary>
        [Output("projectId")]
        public Output<int> ProjectId { get; private set; } = null!;

        /// <summary>
        /// The schema where to create models
        /// </summary>
        [Output("schema")]
        public Output<string> Schema { get; private set; } = null!;


        /// <summary>
        /// Create a AthenaCredential resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AthenaCredential(string name, AthenaCredentialArgs args, CustomResourceOptions? options = null)
            : base("dbtcloud:index/athenaCredential:AthenaCredential", name, args ?? new AthenaCredentialArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AthenaCredential(string name, Input<string> id, AthenaCredentialState? state = null, CustomResourceOptions? options = null)
            : base("dbtcloud:index/athenaCredential:AthenaCredential", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/pulumi/pulumi-dbtcloud",
                AdditionalSecretOutputs =
                {
                    "awsAccessKeyId",
                    "awsSecretAccessKey",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AthenaCredential resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AthenaCredential Get(string name, Input<string> id, AthenaCredentialState? state = null, CustomResourceOptions? options = null)
        {
            return new AthenaCredential(name, id, state, options);
        }
    }

    public sealed class AthenaCredentialArgs : global::Pulumi.ResourceArgs
    {
        [Input("awsAccessKeyId", required: true)]
        private Input<string>? _awsAccessKeyId;

        /// <summary>
        /// AWS access key ID for Athena user
        /// </summary>
        public Input<string>? AwsAccessKeyId
        {
            get => _awsAccessKeyId;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _awsAccessKeyId = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("awsSecretAccessKey", required: true)]
        private Input<string>? _awsSecretAccessKey;

        /// <summary>
        /// AWS secret access key for Athena user
        /// </summary>
        public Input<string>? AwsSecretAccessKey
        {
            get => _awsSecretAccessKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _awsSecretAccessKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// Project ID to create the Athena credential in
        /// </summary>
        [Input("projectId", required: true)]
        public Input<int> ProjectId { get; set; } = null!;

        /// <summary>
        /// The schema where to create models
        /// </summary>
        [Input("schema", required: true)]
        public Input<string> Schema { get; set; } = null!;

        public AthenaCredentialArgs()
        {
        }
        public static new AthenaCredentialArgs Empty => new AthenaCredentialArgs();
    }

    public sealed class AthenaCredentialState : global::Pulumi.ResourceArgs
    {
        [Input("awsAccessKeyId")]
        private Input<string>? _awsAccessKeyId;

        /// <summary>
        /// AWS access key ID for Athena user
        /// </summary>
        public Input<string>? AwsAccessKeyId
        {
            get => _awsAccessKeyId;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _awsAccessKeyId = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        [Input("awsSecretAccessKey")]
        private Input<string>? _awsSecretAccessKey;

        /// <summary>
        /// AWS secret access key for Athena user
        /// </summary>
        public Input<string>? AwsSecretAccessKey
        {
            get => _awsSecretAccessKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _awsSecretAccessKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// The internal credential ID
        /// </summary>
        [Input("credentialId")]
        public Input<int>? CredentialId { get; set; }

        /// <summary>
        /// Project ID to create the Athena credential in
        /// </summary>
        [Input("projectId")]
        public Input<int>? ProjectId { get; set; }

        /// <summary>
        /// The schema where to create models
        /// </summary>
        [Input("schema")]
        public Input<string>? Schema { get; set; }

        public AthenaCredentialState()
        {
        }
        public static new AthenaCredentialState Empty => new AthenaCredentialState();
    }
}
