// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Teradata credential data source
 */
export function getTeradataCredential(args: GetTeradataCredentialArgs, opts?: pulumi.InvokeOptions): Promise<GetTeradataCredentialResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("dbtcloud:index/getTeradataCredential:getTeradataCredential", {
        "credentialId": args.credentialId,
        "projectId": args.projectId,
    }, opts);
}

/**
 * A collection of arguments for invoking getTeradataCredential.
 */
export interface GetTeradataCredentialArgs {
    /**
     * Credential ID
     */
    credentialId: number;
    /**
     * Project ID
     */
    projectId: number;
}

/**
 * A collection of values returned by getTeradataCredential.
 */
export interface GetTeradataCredentialResult {
    /**
     * Credential ID
     */
    readonly credentialId: number;
    /**
     * The ID of this resource. Contains the project ID and the credential ID.
     */
    readonly id: string;
    /**
     * The password for the Teradata account
     */
    readonly password: string;
    /**
     * Project ID
     */
    readonly projectId: number;
    /**
     * The schema where to create models
     */
    readonly schema: string;
    /**
     * The number of threads to use. Default is 1
     */
    readonly threads: number;
    /**
     * The username for the Teradata account
     */
    readonly user: string;
}
/**
 * Teradata credential data source
 */
export function getTeradataCredentialOutput(args: GetTeradataCredentialOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetTeradataCredentialResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("dbtcloud:index/getTeradataCredential:getTeradataCredential", {
        "credentialId": args.credentialId,
        "projectId": args.projectId,
    }, opts);
}

/**
 * A collection of arguments for invoking getTeradataCredential.
 */
export interface GetTeradataCredentialOutputArgs {
    /**
     * Credential ID
     */
    credentialId: pulumi.Input<number>;
    /**
     * Project ID
     */
    projectId: pulumi.Input<number>;
}
