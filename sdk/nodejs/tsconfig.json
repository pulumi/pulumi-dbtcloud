{
    "compilerOptions": {
        "outDir": "bin",
        "target": "ES2020",
        "module": "commonjs",
        "moduleResolution": "node",
        "declaration": true,
        "sourceMap": true,
        "stripInternal": true,
        "experimentalDecorators": true,
        "noFallthroughCasesInSwitch": true,
        "forceConsistentCasingInFileNames": true,
        "strict": true
    },
    "files": [
        "accountFeatures.ts",
        "athenaCredential.ts",
        "bigQueryCredential.ts",
        "bigquerySemanticLayerCredential.ts",
        "config/index.ts",
        "config/vars.ts",
        "databricksCredential.ts",
        "databricksSemanticLayerCredential.ts",
        "environment.ts",
        "environmentVariable.ts",
        "environmentVariableJobOverride.ts",
        "extendedAttributes.ts",
        "fabricCredential.ts",
        "getAthenaCredential.ts",
        "getAzureDevOpsProject.ts",
        "getAzureDevOpsRepository.ts",
        "getBigQueryCredential.ts",
        "getDatabricksCredential.ts",
        "getEnvironment.ts",
        "getEnvironmentVariable.ts",
        "getEnvironments.ts",
        "getExtendedAttributes.ts",
        "getGlobalConnection.ts",
        "getGlobalConnections.ts",
        "getGroup.ts",
        "getGroupUsers.ts",
        "getJob.ts",
        "getJobs.ts",
        "getModelNotifications.ts",
        "getNotification.ts",
        "getPostgresCredential.ts",
        "getPrivatelinkEndpoint.ts",
        "getProject.ts",
        "getProjects.ts",
        "getRedshiftCredential.ts",
        "getRepository.ts",
        "getRuns.ts",
        "getServiceToken.ts",
        "getSnowflakeCredential.ts",
        "getStarburstCredential.ts",
        "getSynapseCredential.ts",
        "getTeradataCredential.ts",
        "getUser.ts",
        "getUserGroups.ts",
        "getUsers.ts",
        "getWebhook.ts",
        "globalConnection.ts",
        "group.ts",
        "groupPartialPermissions.ts",
        "index.ts",
        "ipRestrictionsRule.ts",
        "job.ts",
        "licenseMap.ts",
        "lineageIntegration.ts",
        "modelNotifications.ts",
        "notification.ts",
        "oauthConfiguration.ts",
        "partialEnvironmentVariable.ts",
        "partialLicenseMap.ts",
        "partialNotification.ts",
        "postgresCredential.ts",
        "postgresSemanticLayerCredential.ts",
        "project.ts",
        "projectArtefacts.ts",
        "projectRepository.ts",
        "provider.ts",
        "redshiftCredential.ts",
        "redshiftSemanticLayerCredential.ts",
        "repository.ts",
        "semanticLayerConfiguration.ts",
        "semanticLayerCredentialServiceTokenMapping.ts",
        "serviceToken.ts",
        "snowflakeCredential.ts",
        "snowflakeSemanticLayerCredential.ts",
        "starburstCredential.ts",
        "synapseCredential.ts",
        "teradataCredential.ts",
        "types/index.ts",
        "types/input.ts",
        "types/output.ts",
        "userGroups.ts",
        "utilities.ts",
        "webhook.ts"
    ]
}
