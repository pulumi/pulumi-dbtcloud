// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Synapse credential data source.
 */
export function getSynapseCredential(args: GetSynapseCredentialArgs, opts?: pulumi.InvokeOptions): Promise<GetSynapseCredentialResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("dbtcloud:index/getSynapseCredential:getSynapseCredential", {
        "credentialId": args.credentialId,
        "projectId": args.projectId,
    }, opts);
}

/**
 * A collection of arguments for invoking getSynapseCredential.
 */
export interface GetSynapseCredentialArgs {
    /**
     * Credential ID
     */
    credentialId: number;
    /**
     * Project ID
     */
    projectId: number;
}

/**
 * A collection of values returned by getSynapseCredential.
 */
export interface GetSynapseCredentialResult {
    /**
     * The type of the adapter (synapse)
     */
    readonly adapterType: string;
    /**
     * Authentication type (SQL, ActiveDirectoryPassword, ServicePrincipal)
     */
    readonly authentication: string;
    /**
     * The client ID of the Azure Active Directory service principal. This is only used when connecting to Azure SQL with an AAD service principal.
     */
    readonly clientId: string;
    /**
     * Credential ID
     */
    readonly credentialId: number;
    /**
     * The ID of this data source. Contains the project ID and the credential ID.
     */
    readonly id: string;
    /**
     * Project ID
     */
    readonly projectId: number;
    /**
     * The schema where to create the dbt models
     */
    readonly schema: string;
    /**
     * Optionally set this to the principal who should own the schemas created by dbt
     */
    readonly schemaAuthorization: string;
    /**
     * The tenant ID of the Azure Active Directory instance. This is only used when connecting to Azure SQL with a service principal.
     */
    readonly tenantId: string;
    /**
     * The username of the Synapse account to connect to. Only used when connection with AD user/pass
     */
    readonly user: string;
}
/**
 * Synapse credential data source.
 */
export function getSynapseCredentialOutput(args: GetSynapseCredentialOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetSynapseCredentialResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("dbtcloud:index/getSynapseCredential:getSynapseCredential", {
        "credentialId": args.credentialId,
        "projectId": args.projectId,
    }, opts);
}

/**
 * A collection of arguments for invoking getSynapseCredential.
 */
export interface GetSynapseCredentialOutputArgs {
    /**
     * Credential ID
     */
    credentialId: pulumi.Input<number>;
    /**
     * Project ID
     */
    projectId: pulumi.Input<number>;
}
