// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Retrieve all groups in the account with optional filtering
 */
export function getGroups(args?: GetGroupsArgs, opts?: pulumi.InvokeOptions): Promise<GetGroupsResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("dbtcloud:index/getGroups:getGroups", {
        "name": args.name,
        "nameContains": args.nameContains,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getGroups.
 */
export interface GetGroupsArgs {
    /**
     * Filter groups by exact name match
     */
    name?: string;
    /**
     * Filter groups by partial name match (case insensitive)
     */
    nameContains?: string;
    /**
     * Filter groups by state. Accepts both string and integer formats: 'active'/'1' for active resources, 'deleted'/'2' for deleted resources, 'all' for all resources. Defaults to active groups only if not specified.
     */
    state?: string;
}

/**
 * A collection of values returned by getGroups.
 */
export interface GetGroupsResult {
    /**
     * Set of groups in the account
     */
    readonly groups: outputs.GetGroupsGroup[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Filter groups by exact name match
     */
    readonly name?: string;
    /**
     * Filter groups by partial name match (case insensitive)
     */
    readonly nameContains?: string;
    /**
     * Filter groups by state. Accepts both string and integer formats: 'active'/'1' for active resources, 'deleted'/'2' for deleted resources, 'all' for all resources. Defaults to active groups only if not specified.
     */
    readonly state?: string;
}
/**
 * Retrieve all groups in the account with optional filtering
 */
export function getGroupsOutput(args?: GetGroupsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetGroupsResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("dbtcloud:index/getGroups:getGroups", {
        "name": args.name,
        "nameContains": args.nameContains,
        "state": args.state,
    }, opts);
}

/**
 * A collection of arguments for invoking getGroups.
 */
export interface GetGroupsOutputArgs {
    /**
     * Filter groups by exact name match
     */
    name?: pulumi.Input<string>;
    /**
     * Filter groups by partial name match (case insensitive)
     */
    nameContains?: pulumi.Input<string>;
    /**
     * Filter groups by state. Accepts both string and integer formats: 'active'/'1' for active resources, 'deleted'/'2' for deleted resources, 'all' for all resources. Defaults to active groups only if not specified.
     */
    state?: pulumi.Input<string>;
}
