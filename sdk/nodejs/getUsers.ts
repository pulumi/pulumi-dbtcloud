// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Retrieve all users
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as dbtcloud from "@pulumi/dbtcloud";
 *
 * // return all users in the dbt Cloud account
 * const all = dbtcloud.getUsers({});
 * const userDetails = all.then(all => .filter(user => user.email == "example@amail.com").map(user => (user)));
 * const userExist = userDetails.length.then(length => length == 1);
 * ```
 */
export function getUsers(opts?: pulumi.InvokeOptions): Promise<GetUsersResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("dbtcloud:index/getUsers:getUsers", {
    }, opts);
}

/**
 * A collection of values returned by getUsers.
 */
export interface GetUsersResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Set of users with their internal ID end email
     */
    readonly users: outputs.GetUsersUser[];
}
/**
 * Retrieve all users
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as dbtcloud from "@pulumi/dbtcloud";
 *
 * // return all users in the dbt Cloud account
 * const all = dbtcloud.getUsers({});
 * const userDetails = all.then(all => .filter(user => user.email == "example@amail.com").map(user => (user)));
 * const userExist = userDetails.length.then(length => length == 1);
 * ```
 */
export function getUsersOutput(opts?: pulumi.InvokeOptions): pulumi.Output<GetUsersResult> {
    return pulumi.output(getUsers(opts))
}
