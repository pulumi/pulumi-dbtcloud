// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Get detailed information for a specific dbt Cloud job.
 */
export function getJob(args: GetJobArgs, opts?: pulumi.InvokeOptions): Promise<GetJobResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("dbtcloud:index/getJob:getJob", {
        "jobCompletionTriggerConditions": args.jobCompletionTriggerConditions,
        "jobId": args.jobId,
    }, opts);
}

/**
 * A collection of arguments for invoking getJob.
 */
export interface GetJobArgs {
    /**
     * Which other job should trigger this job when it finishes, and on which conditions. Format for the property will change in the next release to match the one from the one from dbtcloud*jobs.
     */
    jobCompletionTriggerConditions?: inputs.GetJobJobCompletionTriggerCondition[];
    /**
     * The ID of the job
     */
    jobId: number;
}

/**
 * A collection of values returned by getJob.
 */
export interface GetJobResult {
    /**
     * The version of dbt used for the job. If not set, the environment version will be used.
     */
    readonly dbtVersion: string;
    /**
     * The ID of the environment this job defers to
     */
    readonly deferringEnvironmentId: number;
    /**
     * [Deprectated - Deferral is now set at the environment level] The ID of the job definition this job defers to
     *
     * @deprecated Deferral is now set at the environment level
     */
    readonly deferringJobId: number;
    /**
     * The description of the job
     */
    readonly description: string;
    /**
     * Details of the environment the job is running in
     */
    readonly environment: outputs.GetJobEnvironment;
    /**
     * The ID of environment
     */
    readonly environmentId: number;
    /**
     * The list of steps to run in the job
     */
    readonly executeSteps: string[];
    readonly execution: outputs.GetJobExecution;
    /**
     * Whether the job generate docs
     */
    readonly generateDocs: boolean;
    /**
     * The ID of the job
     */
    readonly id: number;
    /**
     * Which other job should trigger this job when it finishes, and on which conditions. Format for the property will change in the next release to match the one from the one from dbtcloud*jobs.
     */
    readonly jobCompletionTriggerConditions: outputs.GetJobJobCompletionTriggerCondition[];
    /**
     * The ID of the job
     */
    readonly jobId: number;
    /**
     * The type of job (e.g. CI, scheduled)
     */
    readonly jobType: string;
    /**
     * The name of the job
     */
    readonly name: string;
    /**
     * The ID of the project
     */
    readonly projectId: number;
    /**
     * Whether the job should compare data changes introduced by the code change in the PR
     */
    readonly runCompareChanges: boolean;
    /**
     * Whether the job test source freshness
     */
    readonly runGenerateSources: boolean;
    readonly schedule: outputs.GetJobSchedule;
    /**
     * Whether this job defers on a previous run of itself (overrides value in deferring*job*id)
     */
    readonly selfDeferring: boolean;
    readonly settings: outputs.GetJobSettings;
    /**
     * [Deprectated - Moved to execution.timeout_seconds] Number of seconds before the job times out
     *
     * @deprecated Moved to execution.timeout_seconds
     */
    readonly timeoutSeconds: number;
    readonly triggers: outputs.GetJobTriggers;
    /**
     * Whether the CI job should be automatically triggered on draft PRs
     */
    readonly triggersOnDraftPr: boolean;
}
/**
 * Get detailed information for a specific dbt Cloud job.
 */
export function getJobOutput(args: GetJobOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetJobResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("dbtcloud:index/getJob:getJob", {
        "jobCompletionTriggerConditions": args.jobCompletionTriggerConditions,
        "jobId": args.jobId,
    }, opts);
}

/**
 * A collection of arguments for invoking getJob.
 */
export interface GetJobOutputArgs {
    /**
     * Which other job should trigger this job when it finishes, and on which conditions. Format for the property will change in the next release to match the one from the one from dbtcloud*jobs.
     */
    jobCompletionTriggerConditions?: pulumi.Input<pulumi.Input<inputs.GetJobJobCompletionTriggerConditionArgs>[]>;
    /**
     * The ID of the job
     */
    jobId: pulumi.Input<number>;
}
