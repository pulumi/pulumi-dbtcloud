// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface GroupGroupPermission {
    /**
     * Whether access should be provided for all projects or not.
     */
    allProjects: pulumi.Input<boolean>;
    /**
     * Set of permissions to apply. The permissions allowed are the same as the ones for the `dbtcloud.Group` resource.
     */
    permissionSet: pulumi.Input<string>;
    /**
     * Project ID to apply this permission to for this group.
     */
    projectId?: pulumi.Input<number>;
    /**
     * What types of environments to apply Write permissions to.
     * Even if Write access is restricted to some environment types, the permission set will have Read access to all environments.
     * The values allowed are `all`, `development`, `staging`, `production` and `other`.
     * Not setting a value is the same as selecting `all`.
     * Not all permission sets support environment level write settings, only `analyst`, `databaseAdmin`, `developer`, `gitAdmin` and `teamAdmin`.
     */
    writableEnvironmentCategories?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface GroupPartialPermissionsGroupPermission {
    /**
     * Whether access should be provided for all projects or not.
     */
    allProjects: pulumi.Input<boolean>;
    /**
     * Set of permissions to apply. The permissions allowed are the same as the ones for the `dbtcloud.Group` resource.
     */
    permissionSet: pulumi.Input<string>;
    /**
     * Project ID to apply this permission to for this group.
     */
    projectId?: pulumi.Input<number>;
    /**
     * What types of environments to apply Write permissions to.
     * Even if Write access is restricted to some environment types, the permission set will have Read access to all environments.
     * The values allowed are `all`, `development`, `staging`, `production` and `other`.
     * Not setting a value is the same as selecting `all`.
     * Not all permission sets support environment level write settings, only `analyst`, `databaseAdmin`, `developer`, `gitAdmin` and `teamAdmin`.
     */
    writableEnvironmentCategories?: pulumi.Input<pulumi.Input<string>[]>;
}

export interface JobJobCompletionTriggerCondition {
    /**
     * The ID of the job that would trigger this job after completion.
     */
    jobId: pulumi.Input<number>;
    /**
     * The ID of the project where the trigger job is running in.
     */
    projectId: pulumi.Input<number>;
    /**
     * List of statuses to trigger the job on. Possible values are `success`, `error` and `canceled`.
     */
    statuses: pulumi.Input<pulumi.Input<string>[]>;
}

export interface ServiceTokenServiceTokenPermission {
    /**
     * Whether or not to apply this permission to all projects for this service token
     */
    allProjects: pulumi.Input<boolean>;
    /**
     * Set of permissions to apply
     */
    permissionSet: pulumi.Input<string>;
    /**
     * Project ID to apply this permission to for this service token
     */
    projectId?: pulumi.Input<number>;
}
