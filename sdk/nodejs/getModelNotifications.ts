// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Get model notifications configuration for a dbt Cloud environment
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as dbtcloud from "@pulumi/dbtcloud";
 *
 * const prodModelNotifications = dbtcloud.getModelNotifications({
 *     environmentId: prodEnvironment.environmentId,
 * });
 * const qaModelNotifications = dbtcloud.getModelNotifications({
 *     environmentId: "12345",
 * });
 * ```
 */
export function getModelNotifications(args: GetModelNotificationsArgs, opts?: pulumi.InvokeOptions): Promise<GetModelNotificationsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("dbtcloud:index/getModelNotifications:getModelNotifications", {
        "environmentId": args.environmentId,
    }, opts);
}

/**
 * A collection of arguments for invoking getModelNotifications.
 */
export interface GetModelNotificationsArgs {
    /**
     * The ID of the dbt Cloud environment
     */
    environmentId: string;
}

/**
 * A collection of values returned by getModelNotifications.
 */
export interface GetModelNotificationsResult {
    /**
     * Whether model notifications are enabled for this environment
     */
    readonly enabled: boolean;
    /**
     * The ID of the dbt Cloud environment
     */
    readonly environmentId: string;
    /**
     * The internal ID of the model notifications configuration
     */
    readonly id: number;
    /**
     * Whether to send notifications for failed model runs
     */
    readonly onFailure: boolean;
    /**
     * Whether to send notifications for skipped model runs
     */
    readonly onSkipped: boolean;
    /**
     * Whether to send notifications for successful model runs
     */
    readonly onSuccess: boolean;
    /**
     * Whether to send notifications for model runs with warnings
     */
    readonly onWarning: boolean;
}
/**
 * Get model notifications configuration for a dbt Cloud environment
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as dbtcloud from "@pulumi/dbtcloud";
 *
 * const prodModelNotifications = dbtcloud.getModelNotifications({
 *     environmentId: prodEnvironment.environmentId,
 * });
 * const qaModelNotifications = dbtcloud.getModelNotifications({
 *     environmentId: "12345",
 * });
 * ```
 */
export function getModelNotificationsOutput(args: GetModelNotificationsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetModelNotificationsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("dbtcloud:index/getModelNotifications:getModelNotifications", {
        "environmentId": args.environmentId,
    }, opts);
}

/**
 * A collection of arguments for invoking getModelNotifications.
 */
export interface GetModelNotificationsOutputArgs {
    /**
     * The ID of the dbt Cloud environment
     */
    environmentId: pulumi.Input<string>;
}
