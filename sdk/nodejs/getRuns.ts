// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Retrieve all runs
 */
export function getRuns(args?: GetRunsArgs, opts?: pulumi.InvokeOptions): Promise<GetRunsResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("dbtcloud:index/getRuns:getRuns", {
        "filter": args.filter,
    }, opts);
}

/**
 * A collection of arguments for invoking getRuns.
 */
export interface GetRunsArgs {
    /**
     * Filter to apply to the runs
     */
    filter?: inputs.GetRunsFilter;
}

/**
 * A collection of values returned by getRuns.
 */
export interface GetRunsResult {
    /**
     * Filter to apply to the runs
     */
    readonly filter?: outputs.GetRunsFilter;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Set of users with their internal ID end email
     */
    readonly runs: outputs.GetRunsRun[];
}
/**
 * Retrieve all runs
 */
export function getRunsOutput(args?: GetRunsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetRunsResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("dbtcloud:index/getRuns:getRuns", {
        "filter": args.filter,
    }, opts);
}

/**
 * A collection of arguments for invoking getRuns.
 */
export interface GetRunsOutputArgs {
    /**
     * Filter to apply to the runs
     */
    filter?: pulumi.Input<inputs.GetRunsFilterArgs>;
}
