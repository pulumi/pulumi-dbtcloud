// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * All the connections created on the account with some summary information, like their name, type, when they were created/updated and the number of environments using them.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as dbtcloud from "@pulumi/dbtcloud";
 *
 * const myConnections = dbtcloud.getGlobalConnections({});
 * ```
 */
export function getGlobalConnections(opts?: pulumi.InvokeOptions): Promise<GetGlobalConnectionsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("dbtcloud:index/getGlobalConnections:getGlobalConnections", {
    }, opts);
}

/**
 * A collection of values returned by getGlobalConnections.
 */
export interface GetGlobalConnectionsResult {
    /**
     * A set of all the connections
     */
    readonly connections: outputs.GetGlobalConnectionsConnection[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
}
/**
 * All the connections created on the account with some summary information, like their name, type, when they were created/updated and the number of environments using them.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as dbtcloud from "@pulumi/dbtcloud";
 *
 * const myConnections = dbtcloud.getGlobalConnections({});
 * ```
 */
export function getGlobalConnectionsOutput(opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetGlobalConnectionsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("dbtcloud:index/getGlobalConnections:getGlobalConnections", {
    }, opts);
}
